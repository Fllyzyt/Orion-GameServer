#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_WithGravity_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_WithGravity_Parent.BGA_Athena_WithGravity_Parent_C
// 0x0130 (0x0900 - 0x07D0)
class ABGA_Athena_WithGravity_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortWaterInteractionComponent*         FortWaterInteraction;                              // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ResumeGravSimOnBegin;                              // 0x07F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bResumeSimulation;                                 // 0x07F1(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_6546[0x2];                                     // 0x07F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             NullHit;                                           // 0x07F4(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                GravImpact_Loc;                                    // 0x0880(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GravHitNormal;                                     // 0x088C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravMaxSlope;                                      // 0x0898(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckForBounce;                                    // 0x089C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6547[0x3];                                     // 0x089D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForcedBounceExtraZ;                                // 0x08A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForcedBounceCurrentCount;                          // 0x08A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForcedBounceMult;                                  // 0x08A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6548[0x4];                                     // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         GravFoundBuildingOnDied;                           // 0x08B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          RepCollision;                                      // 0x08C0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_6549[0x7];                                     // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                AdditionalBounceObject;                            // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ForcedBounceMaxCount;                              // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ForceBounce;                                       // 0x08D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CountNonForceBounces;                              // 0x08D5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_654A[0x2];                                     // 0x08D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BounceExtraZ;                                      // 0x08D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceMult;                                        // 0x08DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldAttach;                                      // 0x08E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_654B[0x7];                                     // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToNotAttachTo;                               // 0x08E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          DontAttachToOthersOfThisClass;                     // 0x08F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugText;                                         // 0x08F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldNotReattach;                                 // 0x08FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BlockStoppingSim;                                  // 0x08FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AllowReattachmentToActors;                         // 0x08FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BGA_Athena_WithGravity_Parent(int32 EntryPoint, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float K2Node_CustomEvent_DelayBeforeImpulse, float K2Node_CustomEvent_DelayBeforeCollision, const struct FVector& K2Node_CustomEvent_ImpulseOrigin, const struct FVector& K2Node_CustomEvent_ImpulseAmount, bool K2Node_CustomEvent_SetCollisionAfterImpulse, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, const struct FHitResult& K2Node_CustomEvent_Hit, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_IsValid_ReturnValue, class AActor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, class AController* K2Node_CustomEvent_InstigatedBy, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_HitLocation, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent, class FName K2Node_CustomEvent_BoneName, const struct FVector& K2Node_CustomEvent_Momentum, class UPrimitiveComponent* K2Node_Event_MyComp, class AActor* K2Node_Event_Other, class UPrimitiveComponent* K2Node_Event_OtherComp, bool K2Node_Event_bSelfMoved, const struct FVector& K2Node_Event_HitLocation, const struct FVector& K2Node_Event_HitNormal, const struct FVector& K2Node_Event_NormalImpulse, struct FHitResult& K2Node_Event_Hit, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_CheckForSameClassToBounce_HitSameClass, float CallFunc_DegAcos_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, class APlayerPawn_Athena_C* K2Node_DynamicCast_AsPlayer_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Array_Contains_ReturnValue, class ABGA_Athena_WithGravity_Parent_C* K2Node_DynamicCast_AsBGA_Athena_with_Gravity_Parent, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_BooleanAND_ReturnValue_1, class AFortProjectileBase* K2Node_DynamicCast_AsFort_Projectile_Base, bool K2Node_DynamicCast_bSuccess_2, class AActor* K2Node_CustomEvent_Actor, class UPrimitiveComponent* K2Node_CustomEvent_HitComp, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess_3, class AMilitaryBase_Door_01_C* K2Node_DynamicCast_AsMilitary_Base_Door_01, bool K2Node_DynamicCast_bSuccess_4, class APlayerPawn_Athena_C* K2Node_DynamicCast_AsPlayer_Pawn_Athena_1, bool K2Node_DynamicCast_bSuccess_5, int32 CallFunc_Array_Add_ReturnValue_1, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class AFortAthenaWater* K2Node_DynamicCast_AsFort_Athena_Water, bool K2Node_DynamicCast_bSuccess_6, class AFortWaterBodyBP_C* K2Node_DynamicCast_AsFort_Water_Body_BP, bool K2Node_DynamicCast_bSuccess_7, class AActor* K2Node_CustomEvent_DestroyedActor, bool CallFunc_BooleanOR_ReturnValue_1, class AActor* CallFunc_Array_Get_Item, class ABGA_Athena_WithGravity_Parent_C* K2Node_DynamicCast_AsBGA_Athena_with_Gravity_Parent_1, bool K2Node_DynamicCast_bSuccess_8, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor_1, bool K2Node_DynamicCast_bSuccess_9, bool CallFunc_BooleanAND_ReturnValue_2, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_4);
	void SlidingDoorOpened();
	void AttachedWasDestroyed();
	void SpawnFXSounds();
	void PlayHitFX();
	void Impulse(float DelayBeforeImpulse, float DelayBeforeCollision, const struct FVector& ImpulseOrigin, const struct FVector& ImpulseAmount, bool SetCollisionAfterImpulse);
	void ReceiveBeginPlay();
	void StopSim(const struct FHitResult& Hit);
	void BaseDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void HandleBinding(class AActor* Actor, class UPrimitiveComponent* HitComp);
	void BaseDestroyed(class AActor* DestroyedActor);
	void OnRep_bResumeSimulation();
	void ForceBounceBGA(int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void OnRep_RepCollision();
	void CheckForSameClassToBounce(class AActor* Hit, bool* HitSameClass, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UClass* CallFunc_GetObjectClass_ReturnValue_1, bool CallFunc_EqualEqual_ClassClass_ReturnValue);
	void BounceBGA(int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Variable, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void AttachToBindedActor(class UPrimitiveComponent* AttachComp, bool CallFunc_IsValid_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess, class ABuildingWall* K2Node_DynamicCast_AsBuilding_Wall, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess_2);
	void RestartSimulation();
	void OnAttach(class AActor* AttachedActor);
	void Init(const struct FVector& Param_GravHitNormal);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_WithGravity_Parent_C">();
	}
	static class ABGA_Athena_WithGravity_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_WithGravity_Parent_C>();
	}
};
static_assert(alignof(ABGA_Athena_WithGravity_Parent_C) == 0x000008, "Wrong alinment on ABGA_Athena_WithGravity_Parent_C");
static_assert(sizeof(ABGA_Athena_WithGravity_Parent_C) == 0x000900, "Wrong size on ABGA_Athena_WithGravity_Parent_C");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, UberGraphFrame) == 0x0007D0, "Member 'ABGA_Athena_WithGravity_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, FortWaterInteraction) == 0x0007D8, "Member 'ABGA_Athena_WithGravity_Parent_C::FortWaterInteraction' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, StaticMesh) == 0x0007E0, "Member 'ABGA_Athena_WithGravity_Parent_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ProjectileMovement) == 0x0007E8, "Member 'ABGA_Athena_WithGravity_Parent_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ResumeGravSimOnBegin) == 0x0007F0, "Member 'ABGA_Athena_WithGravity_Parent_C::ResumeGravSimOnBegin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, bResumeSimulation) == 0x0007F1, "Member 'ABGA_Athena_WithGravity_Parent_C::bResumeSimulation' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, NullHit) == 0x0007F4, "Member 'ABGA_Athena_WithGravity_Parent_C::NullHit' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, GravImpact_Loc) == 0x000880, "Member 'ABGA_Athena_WithGravity_Parent_C::GravImpact_Loc' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, GravHitNormal) == 0x00088C, "Member 'ABGA_Athena_WithGravity_Parent_C::GravHitNormal' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, GravMaxSlope) == 0x000898, "Member 'ABGA_Athena_WithGravity_Parent_C::GravMaxSlope' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, CheckForBounce) == 0x00089C, "Member 'ABGA_Athena_WithGravity_Parent_C::CheckForBounce' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ForcedBounceExtraZ) == 0x0008A0, "Member 'ABGA_Athena_WithGravity_Parent_C::ForcedBounceExtraZ' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ForcedBounceCurrentCount) == 0x0008A4, "Member 'ABGA_Athena_WithGravity_Parent_C::ForcedBounceCurrentCount' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ForcedBounceMult) == 0x0008A8, "Member 'ABGA_Athena_WithGravity_Parent_C::ForcedBounceMult' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, GravFoundBuildingOnDied) == 0x0008B0, "Member 'ABGA_Athena_WithGravity_Parent_C::GravFoundBuildingOnDied' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, RepCollision) == 0x0008C0, "Member 'ABGA_Athena_WithGravity_Parent_C::RepCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, AdditionalBounceObject) == 0x0008C8, "Member 'ABGA_Athena_WithGravity_Parent_C::AdditionalBounceObject' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ForcedBounceMaxCount) == 0x0008D0, "Member 'ABGA_Athena_WithGravity_Parent_C::ForcedBounceMaxCount' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ForceBounce) == 0x0008D4, "Member 'ABGA_Athena_WithGravity_Parent_C::ForceBounce' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, CountNonForceBounces) == 0x0008D5, "Member 'ABGA_Athena_WithGravity_Parent_C::CountNonForceBounces' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, BounceExtraZ) == 0x0008D8, "Member 'ABGA_Athena_WithGravity_Parent_C::BounceExtraZ' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, BounceMult) == 0x0008DC, "Member 'ABGA_Athena_WithGravity_Parent_C::BounceMult' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ShouldAttach) == 0x0008E0, "Member 'ABGA_Athena_WithGravity_Parent_C::ShouldAttach' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ActorsToNotAttachTo) == 0x0008E8, "Member 'ABGA_Athena_WithGravity_Parent_C::ActorsToNotAttachTo' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, DontAttachToOthersOfThisClass) == 0x0008F8, "Member 'ABGA_Athena_WithGravity_Parent_C::DontAttachToOthersOfThisClass' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, DebugText) == 0x0008F9, "Member 'ABGA_Athena_WithGravity_Parent_C::DebugText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, ShouldNotReattach) == 0x0008FA, "Member 'ABGA_Athena_WithGravity_Parent_C::ShouldNotReattach' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, BlockStoppingSim) == 0x0008FB, "Member 'ABGA_Athena_WithGravity_Parent_C::BlockStoppingSim' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_WithGravity_Parent_C, AllowReattachmentToActors) == 0x0008FC, "Member 'ABGA_Athena_WithGravity_Parent_C::AllowReattachmentToActors' has a wrong offset!");

}

