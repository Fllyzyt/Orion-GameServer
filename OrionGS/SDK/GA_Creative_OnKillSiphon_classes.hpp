#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Creative_OnKillSiphon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GAT_Creative_TriggeredAbility_Pawn_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Creative_OnKillSiphon.GA_Creative_OnKillSiphon_C
// 0x0058 (0x0B50 - 0x0AF8)
class UGA_Creative_OnKillSiphon_C final  : public UGAT_Creative_TriggeredAbility_Pawn_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Creative_OnKillSiphon_C;         // 0x0AF8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AAthena_GameState_C*                    GameState;                                         // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCreativeOrPlayground;                            // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D2[0x7];                                     // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_HealPlayer;                                     // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldConvertExcessHealthToShields;               // 0x0B18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D3[0x7];                                     // 0x0B19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 ShieldGE;                                          // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ConsumedCue;                                       // 0x0B28(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugBypasLocalMapEnable;                         // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttemptHealthRestore;                             // 0x0B31(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAttemptMatsRestore;                               // 0x0B32(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61D4[0x1];                                     // 0x0B33(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   NameGrantWood;                                     // 0x0B34(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameGrantStone;                                    // 0x0B3C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NameGrantMetal;                                    // 0x0B44(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Creative_OnKillSiphon(int32 EntryPoint, struct FGameplayEventData& K2Node_Event_EventData, bool CallFunc_SetupRestoreModes_ShouldContinue);
	void K2_ActivateAbilityFromEvent(struct FGameplayEventData& EventData);
	void RestoreHealth(bool* Success, float* InitialHealAmount, float* ActualAppliedHeal, float* ExcessHealing, float FShieldRestored, float FActualAmountHealed, float FInitialAmountToHeal, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Conv_FloatToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, float CallFunc_DetermineHealthDelta_MaxHealth, float CallFunc_DetermineHealthDelta_CurrentHealth, float CallFunc_DetermineHealthDelta_HealthDelta, float CallFunc_DetermineHealthDelta_ExcessHealh, float CallFunc_FMin_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue_1, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_GetOverridenSiphonHealthValue_ReturnValue, float K2Node_Select_Default);
	void AddShields(bool Param_bShouldConvertExcessHealthToShields, float ShieldToAdd, bool* bAddedShields, float* ShieldAdded, bool Temp_bool_Variable, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, const class FString& K2Node_Select_Default, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue, const struct FGameplayEffectSpecHandle& CallFunc_AssignTagSetByCallerMagnitude_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_K2_ApplyGameplayEffectSpecToOwner_ReturnValue);
	void DetermineHealthDelta(float HealingAmount, float* MaxHealth, float* CurrentHealth, float* HealthDelta, float* ExcessHealh, float Temp_float_Variable, bool Temp_bool_Variable, float CallFunc_GetHealth_ReturnValue, float CallFunc_GetMaxHealth_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float K2Node_Select_Default);
	void SetupRestoreModes(bool* ShouldContinue, bool CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult_1, float CallFunc_EvaluateCurveTableRow_OutXY_1, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AAthena_GameState_C* K2Node_DynamicCast_AsAthena_Game_State, bool K2Node_DynamicCast_bSuccess);
	void AttemptHeal(bool CallFunc_RestoreHealth_Success, float CallFunc_RestoreHealth_InitialHealAmount, float CallFunc_RestoreHealth_ActualAppliedHeal, float CallFunc_RestoreHealth_ExcessHealing, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_AddShields_bAddedShields, float CallFunc_AddShields_ShieldAdded, bool CallFunc_BooleanOR_ReturnValue);
	void AttemptMats(bool CallFunc_CalculateResources_bSuccess, int32 CallFunc_CalculateResources_ResourceToGive, EFortResourceType CallFunc_CalculateResources_ResourceType, bool CallFunc_CalculateResources_bSuccess_1, int32 CallFunc_CalculateResources_ResourceToGive_1, EFortResourceType CallFunc_CalculateResources_ResourceType_1, bool CallFunc_GiveResourcesToPlayer_Success, bool CallFunc_GiveResourcesToPlayer_Success_1, bool CallFunc_CalculateResources_bSuccess_2, int32 CallFunc_CalculateResources_ResourceToGive_2, EFortResourceType CallFunc_CalculateResources_ResourceType_2, bool CallFunc_CalculateResources_bSuccess_3, int32 CallFunc_CalculateResources_ResourceToGive_3, EFortResourceType CallFunc_CalculateResources_ResourceType_3, bool CallFunc_GiveResourcesToPlayer_Success_2, bool CallFunc_GiveResourcesToPlayer_Success_3);
	void CalculateResources(EFortResourceType ResourceGrantType, bool* bSuccess, int32* ResourceToGive, EFortResourceType* ResourceType, class FName LocalDataTableRowName, int32 ILocalResourceToGive, float CallFunc_GetOverridenSiphonGoldValue_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, float CallFunc_GetOverridenSiphonMetalValue_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, float CallFunc_GetOverridenSiphonWoodValue_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_2, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, float CallFunc_GetOverridenSiphonStoneValue_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_3, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, int32 CallFunc_FTrunc_ReturnValue_4, bool K2Node_SwitchEnum_CmpSuccess_2);
	void GiveResourcesToPlayer(bool bShouldGrant, int32 GiveAmount, EFortResourceType GiveType, bool* Success, class UFortWorldItemDefinition* LocalItemToGive, bool K2Node_SwitchEnum_CmpSuccess, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload, bool bLocalMatsOnKill, bool bLocalHealthOnKill, bool bLocalShouldActivate, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_IsDBNO_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult, float CallFunc_EvaluateCurveTableRow_OutXY, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_BooleanAND_ReturnValue, EEvaluateCurveTableResult CallFunc_EvaluateCurveTableRow_OutResult_1, float CallFunc_EvaluateCurveTableRow_OutXY_1, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Creative_OnKillSiphon_C">();
	}
	static class UGA_Creative_OnKillSiphon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Creative_OnKillSiphon_C>();
	}
};
static_assert(alignof(UGA_Creative_OnKillSiphon_C) == 0x000008, "Wrong alinment on UGA_Creative_OnKillSiphon_C");
static_assert(sizeof(UGA_Creative_OnKillSiphon_C) == 0x000B50, "Wrong size on UGA_Creative_OnKillSiphon_C");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, UberGraphFrame_GA_Creative_OnKillSiphon_C) == 0x000AF8, "Member 'UGA_Creative_OnKillSiphon_C::UberGraphFrame_GA_Creative_OnKillSiphon_C' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, GameState) == 0x000B00, "Member 'UGA_Creative_OnKillSiphon_C::GameState' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, IsCreativeOrPlayground) == 0x000B08, "Member 'UGA_Creative_OnKillSiphon_C::IsCreativeOrPlayground' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, GE_HealPlayer) == 0x000B10, "Member 'UGA_Creative_OnKillSiphon_C::GE_HealPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bShouldConvertExcessHealthToShields) == 0x000B18, "Member 'UGA_Creative_OnKillSiphon_C::bShouldConvertExcessHealthToShields' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, ShieldGE) == 0x000B20, "Member 'UGA_Creative_OnKillSiphon_C::ShieldGE' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, ConsumedCue) == 0x000B28, "Member 'UGA_Creative_OnKillSiphon_C::ConsumedCue' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bDebugBypasLocalMapEnable) == 0x000B30, "Member 'UGA_Creative_OnKillSiphon_C::bDebugBypasLocalMapEnable' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bAttemptHealthRestore) == 0x000B31, "Member 'UGA_Creative_OnKillSiphon_C::bAttemptHealthRestore' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, bAttemptMatsRestore) == 0x000B32, "Member 'UGA_Creative_OnKillSiphon_C::bAttemptMatsRestore' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantWood) == 0x000B34, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantWood' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantStone) == 0x000B3C, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantStone' has a wrong offset!");
static_assert(offsetof(UGA_Creative_OnKillSiphon_C, NameGrantMetal) == 0x000B44, "Member 'UGA_Creative_OnKillSiphon_C::NameGrantMetal' has a wrong offset!");

}

