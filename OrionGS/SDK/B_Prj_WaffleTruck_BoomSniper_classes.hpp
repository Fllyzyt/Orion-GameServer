#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_WaffleTruck_BoomSniper

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_WaffleTruck_BoomSniper.B_Prj_WaffleTruck_BoomSniper_C
// 0x0250 (0x0B88 - 0x0938)
class AB_Prj_WaffleTruck_BoomSniper_C final  : public AFortAttachableProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0938(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Tracer;                                            // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SurfaceTypeSoundComponent_C*        BP_SurfaceTypeSoundComponent;                      // 0x0948(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               AttachedFuseBlink;                                 // 0x0950(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Mesh;                                              // 0x0958(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow_Plunger;                                     // 0x0960(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Trail;                                             // 0x0968(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Beep;                                              // 0x0970(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0978(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               Fuse_Particle;                                     // 0x0980(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        GrenadeFuse_AudioComponent;                        // 0x0988(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3; // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3; // 0x0994(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5482[0x3];                                     // 0x0995(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     WobbleOnStick;                                     // 0x0998(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion;                                       // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_DistantSound;                                  // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_CloseSound;                                    // 0x09B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        P_Explosion_Water;                                 // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ExplosionRadius;                                   // 0x09C0(0x0028)(Edit, BlueprintVisible, Net)
	class UForceFeedbackEffect*                   ExplosionForceFeedbackNear;                        // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackEffect*                   ExplosionForceFeedbackFar;                         // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_Stick;                                         // 0x09F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Friendly_;                    // 0x0A00(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Streak_Color__Enemy_;                       // 0x0A10(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDead_;                                           // 0x0A20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5483[0x3];                                     // 0x0A21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Beacon_Core_Color__Friendly_;                      // 0x0A24(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Beacon_Core_Color__Enemy_;                         // 0x0A34(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5484[0x4];                                     // 0x0A44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         TimeBeforeExplode;                                 // 0x0A48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         OffsetDistanceFromBone;                            // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0A74(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              StuckToPawn;                                       // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToEnvironment;                          // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Audio_StuckToPlayer;                               // 0x0A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSelfStickDelayOver_;                             // 0x0A98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5485[0x3];                                     // 0x0A99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         SelfStickDelay;                                    // 0x0A9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OffsetDistanceFromPhysicsMesh;                     // 0x0AA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0AA4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasStopped;                                       // 0x0AB0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5486[0x7];                                     // 0x0AB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstance*                      EnemyMeshMaterial;                                 // 0x0AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      FriendlyMeshMaterial;                              // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_ActorTagsThatShouldExplodeOnOverlap;            // 0x0AC8(0x0020)(Edit, BlueprintVisible)
	bool                                          bSimulationRunning;                                // 0x0AE8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	bool                                          StickToAllies;                                     // 0x0AE9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5487[0x6];                                     // 0x0AEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<class AActor*>                           Ignore;                                            // 0x0AF0(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	EPhysicalSurface                              Surface_Type;                                      // 0x0B40(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnteredWater;                                      // 0x0B41(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5488[0x6];                                     // 0x0B42(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ProjectileGravityScale;                            // 0x0B48(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          StickToPlayers;                                    // 0x0B70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5489[0x7];                                     // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               SoundIndicatorIcon;                                // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FuseIndicatorTimer;                                // 0x0B80(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_WaffleTruck_BoomSniper(int32 EntryPoint, bool Temp_bool_IsClosed_Variable, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate, class APlayerController* CallFunc_GetPlayerController_ReturnValue, bool Temp_bool_Variable, bool CallFunc_OnSameTeam_ReturnValue, const struct FLinearColor& CallFunc_SelectColor_ReturnValue, bool Temp_bool_IsClosed_Variable_1, bool Temp_bool_Has_Been_Initd_Variable, float CallFunc_RandomFloatInRange_ReturnValue, const struct FVector& CallFunc_ProjectVectorOnToPlane_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_OnSameTeam_ReturnValue_1, TArray<class AActor*>& K2Node_Event_HitActors, TArray<struct FHitResult>& K2Node_Event_HitResults, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, class APawn* CallFunc_GetInstigator_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, class AFortCharacterVehicle_Ostrich* K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, class AActor* K2Node_CustomEvent_DamagedActor_2, float K2Node_CustomEvent_Damage_2, class AController* K2Node_CustomEvent_InstigatedBy_2, class AActor* K2Node_CustomEvent_DamageCauser_2, const struct FVector& K2Node_CustomEvent_HitLocation_2, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent_2, class FName K2Node_CustomEvent_BoneName_2, const struct FVector& K2Node_CustomEvent_Momentum_2, bool Temp_bool_Has_Been_Initd_Variable_1, bool Temp_bool_Has_Been_Initd_Variable_2, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_1, const struct FVector& CallFunc_Conv_LinearColorToVector_ReturnValue, bool Temp_bool_IsClosed_Variable_2, float CallFunc_GetValueAtLevel_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable_3, bool CallFunc_HasAuthority_ReturnValue, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1, class AActor* K2Node_Event_OtherActor, class UPrimitiveComponent* K2Node_Event_OtherComp, struct FHitResult& K2Node_Event_HitResult, bool K2Node_Event_bIsOverlap, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_ComponentHasTag_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_OnSameTeam_ReturnValue_2, bool CallFunc_Set_Contains_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn_1, bool K2Node_DynamicCast_bSuccess_2, class AFortWaterBodyActor* K2Node_DynamicCast_AsFort_Water_Body_Actor, bool K2Node_DynamicCast_bSuccess_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class APawn* CallFunc_GetInstigator_ReturnValue_1, bool CallFunc_OnSameTeam_ReturnValue_3, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_2, bool Temp_bool_IsClosed_Variable_3, const struct FVector& CallFunc_NegateVector_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, class AActor* K2Node_Event_DamagedActor, float K2Node_Event_Damage, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FVector& K2Node_Event_HitLocation, class UPrimitiveComponent* K2Node_Event_FHitComponent, class FName K2Node_Event_BoneName, const struct FVector& K2Node_Event_Momentum, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsDedicatedServer_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetActorLocationAndRotation_SweepHitResult, bool CallFunc_K2_SetActorLocationAndRotation_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult, bool Temp_bool_IsClosed_Variable_4, bool Temp_bool_Has_Been_Initd_Variable_4, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, bool CallFunc_HasAuthority_ReturnValue_1, bool Temp_bool_IsClosed_Variable_5, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess_4, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn_2, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn_3, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_OnSameTeam_ReturnValue_4, bool CallFunc_Set_Contains_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, class AActor* K2Node_CustomEvent_DestroyedActor, struct FHitResult& K2Node_ComponentBoundEvent_ImpactResult, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_7, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess_8, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess_9, class AActor* CallFunc_GetVehicleActorPtrConst_ReturnValue, const struct FVector& K2Node_CustomEvent_Velocity, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, struct FHitResult& K2Node_Event_Hit, bool CallFunc_BreakHitResult_bBlockingHit_2, bool CallFunc_BreakHitResult_bInitialOverlap_2, float CallFunc_BreakHitResult_Time_2, float CallFunc_BreakHitResult_Distance_2, const struct FVector& CallFunc_BreakHitResult_Location_2, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_2, const struct FVector& CallFunc_BreakHitResult_Normal_2, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_2, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_2, class AActor* CallFunc_BreakHitResult_HitActor_2, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_2, class FName CallFunc_BreakHitResult_HitBoneName_2, int32 CallFunc_BreakHitResult_HitItem_2, int32 CallFunc_BreakHitResult_ElementIndex_2, int32 CallFunc_BreakHitResult_FaceIndex_2, const struct FVector& CallFunc_BreakHitResult_TraceStart_2, const struct FVector& CallFunc_BreakHitResult_TraceEnd_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_6, class APlayerController* CallFunc_GetPlayerController_ReturnValue_3, bool CallFunc_OnSameTeam_ReturnValue_5, class AActor* K2Node_CustomEvent_DamagedActor_1, float K2Node_CustomEvent_Damage_1, class AController* K2Node_CustomEvent_InstigatedBy_1, class AActor* K2Node_CustomEvent_DamageCauser_1, const struct FVector& K2Node_CustomEvent_HitLocation_1, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent_1, class FName K2Node_CustomEvent_BoneName_1, const struct FVector& K2Node_CustomEvent_Momentum_1, const struct FLinearColor& CallFunc_SelectColor_ReturnValue_3, bool Temp_bool_Has_Been_Initd_Variable_5, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_4, bool CallFunc_IsDedicatedServer_ReturnValue_2, class AActor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, class AController* K2Node_CustomEvent_InstigatedBy, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_HitLocation, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent, class FName K2Node_CustomEvent_BoneName, const struct FVector& K2Node_CustomEvent_Momentum, class APlayerPawn_Athena_C* K2Node_DynamicCast_AsPlayer_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_10, class AFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess_11, bool CallFunc_IsDedicatedServer_ReturnValue_3, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AFortWaterBodyActor* K2Node_ComponentBoundEvent_WaterBody, class UFortWaterInteractionComponent* K2Node_ComponentBoundEvent_WaterInteractionComponent, bool K2Node_ComponentBoundEvent_bIsFirstBody, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_5, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition, float CallFunc_GetLastWaterSurfaceInfo_WaterDepth, int32 CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterVelocity, float CallFunc_Conv_IntToFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotFromX_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_7, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_8, bool CallFunc_BooleanOR_ReturnValue, TArray<class AFortPlayerController*>& Temp_object_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_6, TArray<class AFortPlayerController*>& Temp_object_Variable_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_9, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_10, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, bool Temp_bool_IsClosed_Variable_6, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_12, const struct FVector& CallFunc_GetMuzzleLocation_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_11, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, bool Temp_bool_Has_Been_Initd_Variable_6);
	void ShowFuseIndicator();
	void ForceBeep();
	void CallExplodeTrigger();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_2_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* Param_WaterInteractionComponent, bool bIsFirstBody);
	void BindToPlayerOrAIDeath();
	void AIDiedEvent(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& Param_HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void PlayerDiedEvent(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& Param_HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnStop(struct FHitResult& Hit);
	void Destroy();
	void ReceiveDestroyed();
	void SetBounceVelocity(const struct FVector& Velocity);
	void BndEvt__ProjectileMovementComponent_K2Node_ComponentBoundEvent_1_OnProjectileStopDelegate__DelegateSignature(struct FHitResult& ImpactResult);
	void Event_OnVehicleDestroyed(class AActor* DestroyedActor);
	void ReopenPawnCollision();
	void RestartSimulating();
	void Event_Building_Actor_Destroyed();
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void Event_TriggerExplosion();
	void OnAttachedToDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& Param_HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& HitResult, bool bIsOverlap);
	void Event_BuildingActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& Param_HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnExploded(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void Stop_Rotation();
	void ReceiveBeginPlay();
	void WobbleOnStick__UpdateFunc();
	void WobbleOnStick__FinishedFunc();
	void UserConstructionScript(bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue);
	void PlayStickSound(const struct FVector& Location, class AActor* HitActor, bool Success, bool CallFunc_IsValid_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsLocallyControlled_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1);
	void HandleHitBuildingWall(class UObject* Object, class UPrimitiveComponent* Component, class ABuildingWall* LocalWall, class UStaticMeshComponent* K2Node_DynamicCast_AsStatic_Mesh_Component, bool K2Node_DynamicCast_bSuccess, class ABuildingWall* K2Node_DynamicCast_AsBuilding_Wall, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsDoorComponent_ReturnValue);
	void HandleHitVehicle(class UObject* Object, class UPrimitiveComponent* Component, class ABuildingWall* LocalWall, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess, class AFortCharacterVehicle_Ostrich* K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich, bool K2Node_DynamicCast_bSuccess_1);
	void HandleHitSupplyDrop(class UObject* Object, class UPrimitiveComponent* Component, class AFortAthenaVehicle* LocalVehicle, class ABuildingWall* LocalWall, class AAthenaSupplyDrop_C* K2Node_DynamicCast_AsAthena_Supply_Drop, bool K2Node_DynamicCast_bSuccess, class AAthenaSupplyDropBalloon_C* K2Node_DynamicCast_AsAthena_Supply_Drop_Balloon, bool K2Node_DynamicCast_bSuccess_1);
	void HandleHits(class UObject* Actor, class UPrimitiveComponent* Component);
	void OnRep_bResumeSimulation(bool CallFunc_IsDedicatedServer_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_WaffleTruck_BoomSniper_C">();
	}
	static class AB_Prj_WaffleTruck_BoomSniper_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_WaffleTruck_BoomSniper_C>();
	}
};
static_assert(alignof(AB_Prj_WaffleTruck_BoomSniper_C) == 0x000008, "Wrong alinment on AB_Prj_WaffleTruck_BoomSniper_C");
static_assert(sizeof(AB_Prj_WaffleTruck_BoomSniper_C) == 0x000B88, "Wrong size on AB_Prj_WaffleTruck_BoomSniper_C");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, UberGraphFrame) == 0x000938, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Tracer) == 0x000940, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Tracer' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, BP_SurfaceTypeSoundComponent) == 0x000948, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::BP_SurfaceTypeSoundComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, AttachedFuseBlink) == 0x000950, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::AttachedFuseBlink' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Mesh) == 0x000958, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Mesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Arrow_Plunger) == 0x000960, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Arrow_Plunger' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Trail) == 0x000968, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beep) == 0x000970, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beep' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, RotatingMovement) == 0x000978, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Fuse_Particle) == 0x000980, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Fuse_Particle' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, GrenadeFuse_AudioComponent) == 0x000988, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::GrenadeFuse_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3) == 0x000990, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick_WobbleCurve_3AC7CBFE4905C9469F8850ADBACDB9A3' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3) == 0x000994, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick__Direction_3AC7CBFE4905C9469F8850ADBACDB9A3' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, WobbleOnStick) == 0x000998, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::WobbleOnStick' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, P_Explosion) == 0x0009A0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::P_Explosion' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_DistantSound) == 0x0009A8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_DistantSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_CloseSound) == 0x0009B0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_CloseSound' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, P_Explosion_Water) == 0x0009B8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::P_Explosion_Water' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionRadius) == 0x0009C0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionForceFeedbackNear) == 0x0009E8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionForceFeedbackNear' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ExplosionForceFeedbackFar) == 0x0009F0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ExplosionForceFeedbackFar' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Cue_Stick) == 0x0009F8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Cue_Stick' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Streak_Color__Friendly_) == 0x000A00, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Streak_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Streak_Color__Enemy_) == 0x000A10, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Streak_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, IsDead_) == 0x000A20, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::IsDead_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Core_Color__Friendly_) == 0x000A24, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Core_Color__Friendly_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Beacon_Core_Color__Enemy_) == 0x000A34, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Beacon_Core_Color__Enemy_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, TimeBeforeExplode) == 0x000A48, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::TimeBeforeExplode' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, OffsetDistanceFromBone) == 0x000A70, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::OffsetDistanceFromBone' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, HitNormal) == 0x000A74, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::HitNormal' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StuckToPawn) == 0x000A80, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StuckToPawn' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Audio_StuckToEnvironment) == 0x000A88, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Audio_StuckToEnvironment' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Audio_StuckToPlayer) == 0x000A90, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Audio_StuckToPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, IsSelfStickDelayOver_) == 0x000A98, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::IsSelfStickDelayOver_' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, SelfStickDelay) == 0x000A9C, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::SelfStickDelay' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, OffsetDistanceFromPhysicsMesh) == 0x000AA0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::OffsetDistanceFromPhysicsMesh' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, HitLocation) == 0x000AA4, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, bHasStopped) == 0x000AB0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::bHasStopped' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, EnemyMeshMaterial) == 0x000AB8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::EnemyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, FriendlyMeshMaterial) == 0x000AC0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::FriendlyMeshMaterial' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, TC_ActorTagsThatShouldExplodeOnOverlap) == 0x000AC8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::TC_ActorTagsThatShouldExplodeOnOverlap' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, bSimulationRunning) == 0x000AE8, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::bSimulationRunning' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StickToAllies) == 0x000AE9, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StickToAllies' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Ignore) == 0x000AF0, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Ignore' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, Surface_Type) == 0x000B40, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::Surface_Type' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, EnteredWater) == 0x000B41, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::EnteredWater' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, ProjectileGravityScale) == 0x000B48, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, StickToPlayers) == 0x000B70, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::StickToPlayers' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, SoundIndicatorIcon) == 0x000B78, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::SoundIndicatorIcon' has a wrong offset!");
static_assert(offsetof(AB_Prj_WaffleTruck_BoomSniper_C, FuseIndicatorTimer) == 0x000B80, "Member 'AB_Prj_WaffleTruck_BoomSniper_C::FuseIndicatorTimer' has a wrong offset!");

}

