#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EQS_Phoebe_Context_Unstuck_Reachable_Goal

#include "Basic.hpp"

#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass EQS_Phoebe_Context_Unstuck_Reachable_Goal.EQS_Phoebe_Context_Unstuck_Reachable_Goal_C
// 0x0000 (0x0030 - 0x0030)
class UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C final  : public UEnvQueryContext_BlueprintBase
{
public:
	void ProvideSingleLocation(class UObject* QuerierObject, class AActor* QuerierActor, struct FVector* ResultingLocation, const struct FVector& QuerierLocation, uint8 CallFunc_MakeLiteralByte_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class APawn* K2Node_DynamicCast_AsPawn, bool K2Node_DynamicCast_bSuccess, uint8 CallFunc_MakeLiteralByte_ReturnValue_1, class AController* CallFunc_GetController_ReturnValue, class AAIController* K2Node_DynamicCast_AsAIController, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_LessEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class FName CallFunc_MakeLiteralName_ReturnValue, const struct FVector& CallFunc_GetValueAsVector_ReturnValue, bool CallFunc_IsValidAILocation_ReturnValue, bool CallFunc_Vector_IsNAN_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EQS_Phoebe_Context_Unstuck_Reachable_Goal_C">();
	}
	static class UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C>();
	}
};
static_assert(alignof(UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C) == 0x000008, "Wrong alinment on UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C");
static_assert(sizeof(UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C) == 0x000030, "Wrong size on UEQS_Phoebe_Context_Unstuck_Reachable_Goal_C");

}

