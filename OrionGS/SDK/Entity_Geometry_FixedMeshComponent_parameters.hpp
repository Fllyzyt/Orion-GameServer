#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_Geometry_FixedMeshComponent

#include "Basic.hpp"

#include "Entity_Geometry_CollisionType_structs.hpp"
#include "Entity_Geometry_DefaultMeshType_structs.hpp"


namespace SDK::Params
{

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.IsVisible
// 0x0001 (0x0001 - 0x0000)
struct FixedMeshComponent_IsVisible final 
{
public:
	uint8                                         RetVal : 1;                                        // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(FixedMeshComponent_IsVisible) == 0x000001, "Wrong alinment on FixedMeshComponent_IsVisible");
static_assert(sizeof(FixedMeshComponent_IsVisible) == 0x000001, "Wrong size on FixedMeshComponent_IsVisible");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.setAsRootComponent
// 0x0002 (0x0002 - 0x0000)
struct FixedMeshComponent_SetAsRootComponent final 
{
public:
	uint8                                         __verse_0x7B59C809_keepExistingRootTransform : 1;  // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
	uint8                                         BitPad_8C : 7;                                     // 0x0000(0x0001)(Fixing Bit-Field Size For New Byte [ Dumper-7 ])
	uint8                                         __verse_0x5436DB8B_destroyOldRoot : 1;             // 0x0001(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
};
static_assert(alignof(FixedMeshComponent_SetAsRootComponent) == 0x000001, "Wrong alinment on FixedMeshComponent_SetAsRootComponent");
static_assert(sizeof(FixedMeshComponent_SetAsRootComponent) == 0x000002, "Wrong size on FixedMeshComponent_SetAsRootComponent");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.setDefaultStaticMesh
// 0x0001 (0x0001 - 0x0000)
struct FixedMeshComponent_SetDefaultStaticMesh final 
{
public:
	EDefaultMeshType                              __verse_0x5B6BF27F_defaultMesh;                    // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FixedMeshComponent_SetDefaultStaticMesh) == 0x000001, "Wrong alinment on FixedMeshComponent_SetDefaultStaticMesh");
static_assert(sizeof(FixedMeshComponent_SetDefaultStaticMesh) == 0x000001, "Wrong size on FixedMeshComponent_SetDefaultStaticMesh");
static_assert(offsetof(FixedMeshComponent_SetDefaultStaticMesh, __verse_0x5B6BF27F_defaultMesh) == 0x000000, "Member 'FixedMeshComponent_SetDefaultStaticMesh::__verse_0x5B6BF27F_defaultMesh' has a wrong offset!");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.setEnableCollision
// 0x0001 (0x0001 - 0x0000)
struct FixedMeshComponent_SetEnableCollision final 
{
public:
	ECollisionType                                __verse_0x99A47985_enabledCollision;               // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FixedMeshComponent_SetEnableCollision) == 0x000001, "Wrong alinment on FixedMeshComponent_SetEnableCollision");
static_assert(sizeof(FixedMeshComponent_SetEnableCollision) == 0x000001, "Wrong size on FixedMeshComponent_SetEnableCollision");
static_assert(offsetof(FixedMeshComponent_SetEnableCollision, __verse_0x99A47985_enabledCollision) == 0x000000, "Member 'FixedMeshComponent_SetEnableCollision::__verse_0x99A47985_enabledCollision' has a wrong offset!");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.SetMaterial
// 0x0008 (0x0008 - 0x0000)
struct FixedMeshComponent_SetMaterial final 
{
public:
	class UMaterial_V*                            __verse_0x20EC8925_material;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FixedMeshComponent_SetMaterial) == 0x000008, "Wrong alinment on FixedMeshComponent_SetMaterial");
static_assert(sizeof(FixedMeshComponent_SetMaterial) == 0x000008, "Wrong size on FixedMeshComponent_SetMaterial");
static_assert(offsetof(FixedMeshComponent_SetMaterial, __verse_0x20EC8925_material) == 0x000000, "Member 'FixedMeshComponent_SetMaterial::__verse_0x20EC8925_material' has a wrong offset!");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.setMaterialAtIndex
// 0x0010 (0x0010 - 0x0000)
struct FixedMeshComponent_SetMaterialAtIndex final 
{
public:
	class UMaterial_V*                            __verse_0x20EC8925_material;                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x938C7ADC_index;                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FixedMeshComponent_SetMaterialAtIndex) == 0x000008, "Wrong alinment on FixedMeshComponent_SetMaterialAtIndex");
static_assert(sizeof(FixedMeshComponent_SetMaterialAtIndex) == 0x000010, "Wrong size on FixedMeshComponent_SetMaterialAtIndex");
static_assert(offsetof(FixedMeshComponent_SetMaterialAtIndex, __verse_0x20EC8925_material) == 0x000000, "Member 'FixedMeshComponent_SetMaterialAtIndex::__verse_0x20EC8925_material' has a wrong offset!");
static_assert(offsetof(FixedMeshComponent_SetMaterialAtIndex, __verse_0x938C7ADC_index) == 0x000008, "Member 'FixedMeshComponent_SetMaterialAtIndex::__verse_0x938C7ADC_index' has a wrong offset!");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.SetStaticMesh
// 0x0008 (0x0008 - 0x0000)
struct FixedMeshComponent_SetStaticMesh final 
{
public:
	class UStaticMesh_V*                          __verse_0x0CD60CB0_mesh;                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FixedMeshComponent_SetStaticMesh) == 0x000008, "Wrong alinment on FixedMeshComponent_SetStaticMesh");
static_assert(sizeof(FixedMeshComponent_SetStaticMesh) == 0x000008, "Wrong size on FixedMeshComponent_SetStaticMesh");
static_assert(offsetof(FixedMeshComponent_SetStaticMesh, __verse_0x0CD60CB0_mesh) == 0x000000, "Member 'FixedMeshComponent_SetStaticMesh::__verse_0x0CD60CB0_mesh' has a wrong offset!");

// Function Entity_Geometry_FixedMeshComponent.FixedMeshComponent.SetVisibility
// 0x0001 (0x0001 - 0x0000)
struct FixedMeshComponent_SetVisibility final 
{
public:
	uint8                                         __verse_0xFCE80DC8_newVisibility : 1;              // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
};
static_assert(alignof(FixedMeshComponent_SetVisibility) == 0x000001, "Wrong alinment on FixedMeshComponent_SetVisibility");
static_assert(sizeof(FixedMeshComponent_SetVisibility) == 0x000001, "Wrong size on FixedMeshComponent_SetVisibility");

}

