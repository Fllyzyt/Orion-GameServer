#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Legacy_MovieWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "Slate_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Legacy_MovieWidget.Legacy_MovieWidget_C
// 0x0040 (0x02E0 - 0x02A0)
class ULegacy_MovieWidget_C final  : public UFortMovieWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Video_Image;                                       // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              Video_ScaleBox;                                    // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Shouldloop;                                        // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          AutoPlay;                                          // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          MaintainAspectRatio;                               // 0x02BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_66B8[0x5];                                     // 0x02BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnMediaReadyToPlay;                                // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnMediaFailedToOpen;                               // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnMediaReadyToPlay__DelegateSignature();
	void OnMediaFailedToOpen__DelegateSignature();
	void ExecuteUbergraph_Legacy_MovieWidget(int32 EntryPoint, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, float K2Node_Event_NewWidth, float K2Node_Event_NewHeight, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void OnMediaLoaded();
	void MediaDimensionsUpdated(float NewWidth, float NewHeight);
	void Destruct();
	void Init(class UMediaPlayer* InMediaPlayer, class UMediaSource* InMediaSource, class UObject* InMediaSoundWave, int32 AudioTrack, const struct FMediaPlayerTrackOptions& K2Node_MakeStruct_MediaPlayerTrackOptions, bool CallFunc_HasPlayerForSource_ReturnValue, const struct FMediaPlayerOptions& K2Node_MakeStruct_MediaPlayerOptions, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_SetMediaSource_ReturnValue, bool CallFunc_SetMediaSource_ReturnValue_1);
	void StopPlaying();
	void Play(bool ShouldRewind);
	void SetDelayedContentValues(bool Temp_bool_Variable, EStretch Temp_byte_Variable, EStretch Temp_byte_Variable_1, EStretch K2Node_Select_Default, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, class UMediaTexture* CallFunc_GetMediaTexture_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Legacy_MovieWidget_C">();
	}
	static class ULegacy_MovieWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULegacy_MovieWidget_C>();
	}
};
static_assert(alignof(ULegacy_MovieWidget_C) == 0x000008, "Wrong alinment on ULegacy_MovieWidget_C");
static_assert(sizeof(ULegacy_MovieWidget_C) == 0x0002E0, "Wrong size on ULegacy_MovieWidget_C");
static_assert(offsetof(ULegacy_MovieWidget_C, UberGraphFrame) == 0x0002A0, "Member 'ULegacy_MovieWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, Video_Image) == 0x0002A8, "Member 'ULegacy_MovieWidget_C::Video_Image' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, Video_ScaleBox) == 0x0002B0, "Member 'ULegacy_MovieWidget_C::Video_ScaleBox' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, Shouldloop) == 0x0002B8, "Member 'ULegacy_MovieWidget_C::Shouldloop' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, AutoPlay) == 0x0002B9, "Member 'ULegacy_MovieWidget_C::AutoPlay' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, MaintainAspectRatio) == 0x0002BA, "Member 'ULegacy_MovieWidget_C::MaintainAspectRatio' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, OnMediaReadyToPlay) == 0x0002C0, "Member 'ULegacy_MovieWidget_C::OnMediaReadyToPlay' has a wrong offset!");
static_assert(offsetof(ULegacy_MovieWidget_C, OnMediaFailedToOpen) == 0x0002D0, "Member 'ULegacy_MovieWidget_C::OnMediaFailedToOpen' has a wrong offset!");

}

