#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WaffleTruck_TrackingPistol_Indicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C
// 0x0060 (0x0B18 - 0x0AB8)
class UGA_WaffleTruck_TrackingPistol_Indicator_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class AActor*>                         HitActors;                                         // 0x0AC0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class UParticleSystem*                        IndicatorParticleSystem;                           // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IndicatorActorParamName;                           // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IndicatorVectorParamName;                          // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 IndicatorGroupID;                                  // 0x0AE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         IndicatorDuration;                                 // 0x0AF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C12[0x4];                                     // 0x0AFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             IndicatorSound;                                    // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         EnemyMarkingGE;                                    // 0x0B08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator(int32 EntryPoint, class AFortPlayerController* CallFunc_GetAvatarAsFortPlayerController_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, struct FGameplayEventData& K2Node_Event_EventData, TArray<class AActor*>& CallFunc_GetHitActorsFromEventData_ReturnValue, bool CallFunc_IsDamgeFromSourceWeapon_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, const struct FIndicatedActorParticleSystemData& CallFunc_MakeIndicatedActorParticleSystemData_ReturnValue, const struct FIndicatedActorData& CallFunc_MakeIndicatedActorData_ReturnValue);
	void K2_ActivateAbilityFromEvent(struct FGameplayEventData& EventData);
	void GetAvatarAsFortPawn(class AFortPawn** AsFort_Pawn, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess);
	class AFortPlayerController* GetAvatarAsFortPlayerController(EFortGetPlayerPawnExecutions CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec, class AFortPlayerPawn* CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue);
	TArray<class AActor*> GetHitActorsFromEventData(struct FGameplayEventData& GameplayEventData, class AActor* LocalTarget, class AFortPlayerController* CallFunc_GetAvatarAsFortPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, bool CallFunc_IsPawnAndNotFriendly_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	bool IsPawnAndNotFriendly(class AActor* OwningController, class AActor* HitActor, EFortTeamAffiliation CallFunc_GetTeamAffiliation_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	bool IsDamgeFromSourceWeapon(struct FGameplayEventData& GameplayEventData, class AFortPawn* CallFunc_GetAvatarAsFortPawn_AsFort_Pawn, class UObject* CallFunc_EffectContextGetSourceObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_WaffleTruck_TrackingPistol_Indicator_C">();
	}
	static class UGA_WaffleTruck_TrackingPistol_Indicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_WaffleTruck_TrackingPistol_Indicator_C>();
	}
};
static_assert(alignof(UGA_WaffleTruck_TrackingPistol_Indicator_C) == 0x000008, "Wrong alinment on UGA_WaffleTruck_TrackingPistol_Indicator_C");
static_assert(sizeof(UGA_WaffleTruck_TrackingPistol_Indicator_C) == 0x000B18, "Wrong size on UGA_WaffleTruck_TrackingPistol_Indicator_C");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, HitActors) == 0x000AC0, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::HitActors' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorParticleSystem) == 0x000AD0, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorParticleSystem' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorActorParamName) == 0x000AD8, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorActorParamName' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorVectorParamName) == 0x000AE0, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorVectorParamName' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorGroupID) == 0x000AE8, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorGroupID' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorDuration) == 0x000AF8, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorDuration' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, IndicatorSound) == 0x000B00, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::IndicatorSound' has a wrong offset!");
static_assert(offsetof(UGA_WaffleTruck_TrackingPistol_Indicator_C, EnemyMarkingGE) == 0x000B08, "Member 'UGA_WaffleTruck_TrackingPistol_Indicator_C::EnemyMarkingGE' has a wrong offset!");

}

