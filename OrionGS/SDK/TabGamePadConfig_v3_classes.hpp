#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TabGamePadConfig_v3

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "InputCore_structs.hpp"
#include "CommonInput_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TabGamePadConfig_v3.TabGamePadConfig_v3_C
// 0x00F8 (0x0480 - 0x0388)
class UTabGamePadConfig_v3_C final  : public UFortGamepadInputOptions
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UGamepadInfoSelectorPanel_v3_C*         GamepadInfoSelectorPanel_v3;                       // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGamepadMappingInfo_v3_C*               GamepadMappingInfo_v3;                             // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             GamepadMappingInfoChanged;                         // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FString>                         InputPresets;                                      // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class FText>                           InputPresetNames_NoCustom;                         // 0x03C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         PresetMappingIndex;                                // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlatformMappingIndex;                              // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CustomInputTemplatePresetIndex;                    // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B8[0x4];                                     // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGamepadKeyTextButton_C*                DisplayObject;                                     // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortInputActionGroup                         CurrentInputActionGroup;                           // 0x03E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B9[0x3];                                     // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CustomResetToDefaultConfig;                        // 0x03EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   CustomKeySelection;                                // 0x03F0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   CustomActionSelection;                             // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CustomInputActionGroupSelectionIndex;              // 0x0410(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CustomActionSelectionIndex;                        // 0x0414(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   Key_None;                                          // 0x0418(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 RadioButtonClass;                                  // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RadioButtonStyle;                                  // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortOptionsMenuInputData*>      InputDataForActionsPanel;                          // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             TabGamePadConfigBack;                              // 0x0450(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             TabGamePadConfigApply;                             // 0x0460(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             TabGamePadActionsThatNeedBinds;                    // 0x0470(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void GamepadMappingInfoChanged__DelegateSignature();
	void TabGamePadConfigBack__DelegateSignature();
	void TabGamePadConfigApply__DelegateSignature();
	void TabGamePadActionsThatNeedBinds__DelegateSignature(TArray<class FText>& ScreenLabels);
	void ExecuteUbergraph_TabGamePadConfig_v3(int32 EntryPoint, class UCommonButton* K2Node_CustomEvent_AssociatedButton, int32 K2Node_CustomEvent_ButtonIndex, TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class UCommonButton* AssociatedButton, int32 ButtonIndex)> K2Node_CreateDelegate_OutputDelegate_1, class UCommonButton* K2Node_CustomEvent_AssociatedButton_1, int32 K2Node_CustomEvent_ButtonIndex_1, TDelegate<void(const struct FKey& Key)> K2Node_CreateDelegate_OutputDelegate_2, const struct FKey& K2Node_CustomEvent_Key, int32 Temp_int_Variable, TDelegate<void(int32 SelectedIndex, class FName ActionName)> K2Node_CreateDelegate_OutputDelegate_3, int32 K2Node_CustomEvent_SelectedIndex, class FName K2Node_CustomEvent_ActionName, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, int32 Temp_int_Variable_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, int32 Temp_int_Variable_2, int32 CallFunc_GetInputDataIndexForActionName_ReturnValue, TArray<struct FConfirmationDialogAction>& CallFunc_CreateCustomResetToDefaultList_ReturnValue, int32 Temp_int_Variable_3, int32 K2Node_Select_Default, class FName CallFunc_MakeLiteralName_ReturnValue, class UFortAsyncAction_ShowConfirmation_NUI* CallFunc_ShowConfirmationDialog_NUI_ReturnValue, ECommonGamepadType Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, TDelegate<void(class FName TabId)> K2Node_CreateDelegate_OutputDelegate_6, ECommonGamepadType Temp_byte_Variable_1, class FName K2Node_CustomEvent_TabId, ECommonGamepadType Temp_byte_Variable_2, ECommonGamepadType Temp_byte_Variable_3, int32 Temp_int_Variable_4, TArray<class UFortOptionsMenuInputData*>& CallFunc_GetActionItemsInGroup_ReturnValue, ECommonGamepadType K2Node_Select_Default_1, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue_1, ESubGame CallFunc_GetSubGame_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_7, bool K2Node_SwitchEnum_CmpSuccess, ECommonInputType K2Node_Event_NewInputType, class UFortAsyncAction_ShowConfirmation_NUI* CallFunc_ShowSimpleConfirmationDialog_NUI_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, EFortDialogResult Temp_byte_Variable_4, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_8, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_9, bool K2Node_Event_IsDesignTime, class FName Temp_name_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_10, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_11, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_12, EFortDialogResult K2Node_CustomEvent_Result, class FName K2Node_CustomEvent_ResultName, bool CallFunc_IsCustomConfig_ReturnValue, TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate_13, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_14, bool CallFunc_IsVisible_ReturnValue, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue_2, int32 CallFunc_GetInputDataIndexForActionName_ReturnValue_1, class UCommonInputSubsystem* CallFunc_GetContext_ReturnValue_3, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, class UCommonInputSubsystem* CallFunc_GetContext_ReturnValue_4, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue_1, bool CallFunc_HandleApply_PassThrough, EFortDialogResult Temp_byte_Variable_5, bool CallFunc_HandleApply_PassThrough_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class FName Temp_name_Variable_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_15, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_1, bool CallFunc_EqualEqual_NameName_ReturnValue_2, bool CallFunc_EqualEqual_NameName_ReturnValue_3, float K2Node_CustomEvent_Value_1, EFortDialogResult K2Node_CustomEvent_Result_1, class FName K2Node_CustomEvent_ResultName_1, float K2Node_CustomEvent_Value, TDelegate<void(float Value)> K2Node_CreateDelegate_OutputDelegate_16, TDelegate<void(float Value)> K2Node_CreateDelegate_OutputDelegate_17, TDelegate<void(EFortDialogResult Result, class FName ResultName)> K2Node_CreateDelegate_OutputDelegate_18, const class FString& CallFunc_Array_Get_Item, class FName CallFunc_GetSelectedTabId_ReturnValue, bool CallFunc_IsControllerDefaultInputType_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue_4, bool CallFunc_AreWeOkayWithThisChange_IsOkay, bool CallFunc_EqualEqual_NameName_ReturnValue_5);
	void Construct();
	void DeadZoneMoveSettingValueChanged_Bind(float Value);
	void DeadZoneLookSettingValueChanged_Bind(float Value);
	void PreConstruct(bool IsDesignTime);
	void OnTabActivated_Bind();
	void OnTabDeactivated_Bind();
	void HandleUsingGamepadChanged(ECommonInputType NewInputType);
	void ModesTabSelected_Bind(class FName TabId);
	void CustomClearButton_Bind();
	void CustomClosedUsingBack_Bind();
	void CustomActionSelected_Bind(int32 SelectedIndex, class FName ActionName);
	void CustomKeySelected_Bind(const struct FKey& Key);
	void CustomDoResetToDefault();
	void UpdateOptionsTab();
	void CenterOnTab();
	void GamepadPlatformConfigChanged(class UCommonButton* AssociatedButton, int32 ButtonIndex);
	void Gamepad_Config_Changed(class UCommonButton* AssociatedButton, int32 ButtonIndex);
	void DialogResult_7D7E06D747FFEF9849D3CAA2D3D91717(EFortDialogResult Result, class FName ResultName);
	void DialogResult_017CD690454514A07B4DE5BE109AEC6E(EFortDialogResult Result, class FName ResultName);
	void InitializeData(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, ESubGame CallFunc_GetSubGame_ReturnValue, TArray<class FString>& CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetNames, TArray<class FText>& CallFunc_GetAllPlayerInputPresetNamesForSubGame_InputPresetFriendlyNames, int32 CallFunc_Array_Add_ReturnValue, const struct FFortRadioButtonItemStruct& K2Node_MakeStruct_FortRadioButtonItemStruct, const class FString& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsCustomGamepadConfig_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class FText Temp_text_Variable, int32 CallFunc_Array_Add_ReturnValue_1, class FText Temp_text_Variable_1, bool Temp_bool_Variable, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, const class FString& CallFunc_GetPlatformName_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_EqualEqual_StrStr_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_Variable_1, const class FString& CallFunc_GetPlatformName_ReturnValue_1, class FText K2Node_Select_Default, bool CallFunc_EqualEqual_StrStr_ReturnValue_1, TArray<class FText>& K2Node_MakeArray_Array, class FText K2Node_Select_Default_1, class FText CallFunc_Array_Get_Item_1, const struct FFortRadioButtonItemStruct& K2Node_MakeStruct_FortRadioButtonItemStruct_1, int32 CallFunc_Array_Length_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue_1);
	void PreConstructData(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, TArray<class FText>& K2Node_MakeArray_Array, class FText CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FFortRadioButtonItemStruct& K2Node_MakeStruct_FortRadioButtonItemStruct, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, TArray<class FText>& K2Node_MakeArray_Array_1, class FText CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, const struct FFortRadioButtonItemStruct& K2Node_MakeStruct_FortRadioButtonItemStruct_1, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Add_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1);
	void UpdateData(int32 Temp_int_Variable, int32 Temp_int_Variable_1, int32 Temp_int_Variable_2, int32 Temp_int_Variable_3, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, const class FString& CallFunc_GetCurrentInputPresetName_ReturnValue, int32 CallFunc_GetCurrentPlatformIndex_PlatformIndex, int32 Temp_int_Variable_4, int32 Temp_int_Variable_5, int32 Temp_int_Variable_6, int32 K2Node_Select_Default, int32 CallFunc_Array_Find_ReturnValue);
	void GetCurrentPlatformIndex(int32* PlatformIndex, const class FString& CallFunc_GetControllerPlatform_ReturnValue, bool K2Node_SwitchString_CmpSuccess);
	void HandleGamepadMappingInfoChange(class FName CombatModeId_Local, class FName EditModeId_Local, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, ESubGame CallFunc_GetSubGame_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class UCommonInputSubsystem* CallFunc_GetContext_ReturnValue_1, ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue_2, ESubGame CallFunc_GetSubGame_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsCustomConfig_ReturnValue);
	bool IsCustomConfig(int32 PresetIndex, bool CallFunc_IsCustomGamepadConfig_ReturnValue);
	void SetupDisplayObject(class FName ActionName, const struct FKey& Key, class UGamepadKeyTextButton_C** Param_DisplayObject, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, class UFortInputData* CallFunc_GetFortInputDataForBlueprint_ReturnValue, const class FString& CallFunc_GetCustomGamepadInputPresetName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, class FText CallFunc_GetScreenLabel_ReturnValue);
	void SelectSameItemInActionsList(int32 IndexToSelect_Local, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_True_if_break_was_hit_Variable, bool CallFunc_Not_PreBool_ReturnValue, class UFortOptionsMenuInputData* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UFortGlobalUIContext* CallFunc_GetContext_ReturnValue, const class FString& CallFunc_GetCustomGamepadInputPresetName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const struct FKey& CallFunc_GetKeyForAction_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue);
	void CloseCustomActionsPanel(bool FocusLastButton);
	TArray<struct FConfirmationDialogAction> CreateCustomResetToDefaultList(const TArray<struct FConfirmationDialogAction>& ReturnValue_Local, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class FText CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, const struct FConfirmationDialogAction& K2Node_MakeStruct_ConfirmationDialogAction, int32 CallFunc_Array_Add_ReturnValue);
	void ChangeCustomTabListVisibilityForInputType(ECommonInputType Selection, bool K2Node_SwitchEnum_CmpSuccess);
	void HandleGamepadInfoSelectorBack(TArray<class FText>& CallFunc_AreAllImportantActionsBound_OutUnboundScreenLabels, bool CallFunc_AreAllImportantActionsBound_ReturnValue);
	void HandleGamepadInfoSelectorApply();
	void ChangeCustomResetVisibilityForInputType(ECommonInputType InputType, bool K2Node_SwitchEnum_CmpSuccess);
	void ChangeCustomClearVisibilityForInputType(ECommonInputType InputType, bool K2Node_SwitchEnum_CmpSuccess);
	void NavigateToSelectedConfig(int32 CallFunc_GetSelectedButtonIndex_ReturnValue, class UCommonButton* CallFunc_GetButtonAtIndex_ReturnValue);
	void HandleGamepadInfoSelectorFocus();
	void AreWeOkayWithThisChange(class FName ActionName, const struct FKey& Key, bool* IsOkay, const class FString& FullScreenMap_Local, class FName GamepadToggleFullscreenMapName_Local, class FName ToggleFullscreenMapName_Local, bool IsOkay_Local, bool CallFunc_EqualEqual_KeyKey_ReturnValue, bool CallFunc_EqualEqual_KeyKey_ReturnValue_1, bool CallFunc_EqualEqual_KeyKey_ReturnValue_2, bool CallFunc_EqualEqual_KeyKey_ReturnValue_3, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_Contains_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void GamepadInfoSelectorNavRight();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TabGamePadConfig_v3_C">();
	}
	static class UTabGamePadConfig_v3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTabGamePadConfig_v3_C>();
	}
};
static_assert(alignof(UTabGamePadConfig_v3_C) == 0x000008, "Wrong alinment on UTabGamePadConfig_v3_C");
static_assert(sizeof(UTabGamePadConfig_v3_C) == 0x000480, "Wrong size on UTabGamePadConfig_v3_C");
static_assert(offsetof(UTabGamePadConfig_v3_C, UberGraphFrame) == 0x000388, "Member 'UTabGamePadConfig_v3_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, GamepadInfoSelectorPanel_v3) == 0x000390, "Member 'UTabGamePadConfig_v3_C::GamepadInfoSelectorPanel_v3' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, GamepadMappingInfo_v3) == 0x000398, "Member 'UTabGamePadConfig_v3_C::GamepadMappingInfo_v3' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, GamepadMappingInfoChanged) == 0x0003A0, "Member 'UTabGamePadConfig_v3_C::GamepadMappingInfoChanged' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, InputPresets) == 0x0003B0, "Member 'UTabGamePadConfig_v3_C::InputPresets' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, InputPresetNames_NoCustom) == 0x0003C0, "Member 'UTabGamePadConfig_v3_C::InputPresetNames_NoCustom' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, PresetMappingIndex) == 0x0003D0, "Member 'UTabGamePadConfig_v3_C::PresetMappingIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, PlatformMappingIndex) == 0x0003D4, "Member 'UTabGamePadConfig_v3_C::PlatformMappingIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomInputTemplatePresetIndex) == 0x0003D8, "Member 'UTabGamePadConfig_v3_C::CustomInputTemplatePresetIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, DisplayObject) == 0x0003E0, "Member 'UTabGamePadConfig_v3_C::DisplayObject' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CurrentInputActionGroup) == 0x0003E8, "Member 'UTabGamePadConfig_v3_C::CurrentInputActionGroup' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomResetToDefaultConfig) == 0x0003EC, "Member 'UTabGamePadConfig_v3_C::CustomResetToDefaultConfig' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomKeySelection) == 0x0003F0, "Member 'UTabGamePadConfig_v3_C::CustomKeySelection' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomActionSelection) == 0x000408, "Member 'UTabGamePadConfig_v3_C::CustomActionSelection' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomInputActionGroupSelectionIndex) == 0x000410, "Member 'UTabGamePadConfig_v3_C::CustomInputActionGroupSelectionIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, CustomActionSelectionIndex) == 0x000414, "Member 'UTabGamePadConfig_v3_C::CustomActionSelectionIndex' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, Key_None) == 0x000418, "Member 'UTabGamePadConfig_v3_C::Key_None' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, RadioButtonClass) == 0x000430, "Member 'UTabGamePadConfig_v3_C::RadioButtonClass' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, RadioButtonStyle) == 0x000438, "Member 'UTabGamePadConfig_v3_C::RadioButtonStyle' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, InputDataForActionsPanel) == 0x000440, "Member 'UTabGamePadConfig_v3_C::InputDataForActionsPanel' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, TabGamePadConfigBack) == 0x000450, "Member 'UTabGamePadConfig_v3_C::TabGamePadConfigBack' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, TabGamePadConfigApply) == 0x000460, "Member 'UTabGamePadConfig_v3_C::TabGamePadConfigApply' has a wrong offset!");
static_assert(offsetof(UTabGamePadConfig_v3_C, TabGamePadActionsThatNeedBinds) == 0x000470, "Member 'UTabGamePadConfig_v3_C::TabGamePadActionsThatNeedBinds' has a wrong offset!");

}

