#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCL_BoostJumpPack_Hovering

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCL_BoostJumpPack_Hovering.GCL_BoostJumpPack_Hovering_C
// 0x00C8 (0x09A0 - 0x08D8)
class AGCL_BoostJumpPack_Hovering_C final  : public AGameplayCueNotify_Jetpack_Hovering
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x08D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bJetpackAudioEnabled;                              // 0x08E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F6[0x7];                                     // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             SoundOnStart;                                      // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnStop;                                       // 0x08F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnIdle;                                   // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnAccel;                                  // 0x0900(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundLoopOnOutOfFuel;                              // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnFuelWarning;                                // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnOutOfFuel;                                  // 0x0918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SoundOnThrust;                                     // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstJump;                                      // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74F7[0x7];                                     // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               GroundInteract;                                    // 0x0930(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMeshComponent>  Milo_Check;                                        // 0x0938(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	TSoftObjectPtr<class UObject>                 Milo_Backpack;                                     // 0x0960(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                Milo_LightScale;                                   // 0x0988(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachSocketName;                                  // 0x0994(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCL_BoostJumpPack_Hovering(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, struct FHitResult& K2Node_CustomEvent_Hit, TArray<class AActor*>& Temp_object_Variable, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, TDelegate<void(struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class AActor* K2Node_Event_MyTarget, EGameplayCueEvent K2Node_Event_EventType, struct FGameplayCueParameters& K2Node_Event_Parameters, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, bool Temp_bool_IsClosed_Variable, class USkeletalMeshComponent* CallFunc_GetSkeletalMeshForPartType_ReturnValue, class USkeletalMeshComponent* CallFunc_GetSkeletalMeshForPartType_ReturnValue_1, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingleForObjects_OutHit, bool CallFunc_LineTraceSingleForObjects_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, float CallFunc_VSize_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult, float CallFunc_Divide_FloatFloat_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_IsValid_ReturnValue_6);
	void TryToPlayGroundEffects();
	void PlayLowFuelWarning();
	void ReceiveDestroyed();
	void K2_HandleGameplayCue(class AActor* MyTarget, EGameplayCueEvent EventType, struct FGameplayCueParameters& Parameters);
	void ResetFX();
	void On_Pawn_Landed(struct FHitResult& Hit);
	bool OnActive(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, bool CallFunc_OnActive_ReturnValue, class USkeletalMeshComponent* CallFunc_GetSkeletalMeshForPartType_ReturnValue, bool CallFunc_DoesSocketExist_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue, TSoftObjectPtr<class USkeletalMesh> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue, bool CallFunc_EqualEqual_SoftObjectReference_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& Temp_struct_Variable, bool Temp_bool_Variable, const struct FVector& K2Node_Select_Default);
	bool OnRemove(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, bool CallFunc_OnRemove_ReturnValue, bool CallFunc_IsValid_ReturnValue, TDelegate<void(struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate);
	void SetJetpackAudioEnabled(bool Enabled, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, float CallFunc_Subtract_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_2, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_3, bool CallFunc_IsLocallyControlled_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_4, TDelegate<void(struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate, class USoundBase* K2Node_Select_Default, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_2, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_1, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_2, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_3, bool Temp_bool_Variable_1, class USoundBase* K2Node_Select_Default_1, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_4);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCL_BoostJumpPack_Hovering_C">();
	}
	static class AGCL_BoostJumpPack_Hovering_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCL_BoostJumpPack_Hovering_C>();
	}
};
static_assert(alignof(AGCL_BoostJumpPack_Hovering_C) == 0x000008, "Wrong alinment on AGCL_BoostJumpPack_Hovering_C");
static_assert(sizeof(AGCL_BoostJumpPack_Hovering_C) == 0x0009A0, "Wrong size on AGCL_BoostJumpPack_Hovering_C");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, UberGraphFrame) == 0x0008D8, "Member 'AGCL_BoostJumpPack_Hovering_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, bJetpackAudioEnabled) == 0x0008E0, "Member 'AGCL_BoostJumpPack_Hovering_C::bJetpackAudioEnabled' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundOnStart) == 0x0008E8, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundOnStart' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundOnStop) == 0x0008F0, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundOnStop' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundLoopOnIdle) == 0x0008F8, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundLoopOnIdle' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundLoopOnAccel) == 0x000900, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundLoopOnAccel' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundLoopOnOutOfFuel) == 0x000908, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundLoopOnOutOfFuel' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundOnFuelWarning) == 0x000910, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundOnFuelWarning' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundOnOutOfFuel) == 0x000918, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundOnOutOfFuel' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, SoundOnThrust) == 0x000920, "Member 'AGCL_BoostJumpPack_Hovering_C::SoundOnThrust' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, bIsFirstJump) == 0x000928, "Member 'AGCL_BoostJumpPack_Hovering_C::bIsFirstJump' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, GroundInteract) == 0x000930, "Member 'AGCL_BoostJumpPack_Hovering_C::GroundInteract' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, Milo_Check) == 0x000938, "Member 'AGCL_BoostJumpPack_Hovering_C::Milo_Check' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, Milo_Backpack) == 0x000960, "Member 'AGCL_BoostJumpPack_Hovering_C::Milo_Backpack' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, Milo_LightScale) == 0x000988, "Member 'AGCL_BoostJumpPack_Hovering_C::Milo_LightScale' has a wrong offset!");
static_assert(offsetof(AGCL_BoostJumpPack_Hovering_C, AttachSocketName) == 0x000994, "Member 'AGCL_BoostJumpPack_Hovering_C::AttachSocketName' has a wrong offset!");

}

