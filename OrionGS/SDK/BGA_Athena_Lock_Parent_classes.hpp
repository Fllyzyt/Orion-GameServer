#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_Lock_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_Athena_Lock_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Enum_MANG_Security_ID_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_Lock_Parent.BGA_Athena_Lock_Parent_C
// 0x0158 (0x0928 - 0x07D0)
class ABGA_Athena_Lock_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Lock;                                              // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractionCollision;                              // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABuildingActor*                         AttachedLockActor;                                 // 0x07F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          CanFirstInteract;                                  // 0x0800(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanSecondInteract;                                 // 0x0801(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanInteractWhileUnlocked;                          // 0x0802(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7028[0x5];                                     // 0x0803(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FirstInteractText;                                 // 0x0808(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SecondInteractText;                                // 0x0820(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FirstInteractTime;                                 // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SecondInteractTime;                                // 0x083C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SetLockOnFirstInteract;                            // 0x0840(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SetLockOnSecondInteract;                           // 0x0841(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7029[0x6];                                     // 0x0842(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPawn*                              LastInteractingPawn;                               // 0x0848(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMultipleInteract;                               // 0x0850(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_Athena_Lock                              LockState;                                         // 0x0851(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          EverInteractSetLock;                               // 0x0852(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_702A[0x1];                                     // 0x0853(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Event_Locked;                                      // 0x0854(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Unlocked;                                    // 0x085C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          DoLockCheckFirstInteract;                          // 0x0864(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DoLockCheckSecondInteract;                         // 0x0865(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ApplyEffectOnFailCheck;                            // 0x0866(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702B[0x1];                                     // 0x0867(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_FailedCheck;                                    // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxInteractAngle;                                  // 0x0870(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_702C[0x4];                                     // 0x0874(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_RelockDelay;                                   // 0x0878(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AutoRelock;                                        // 0x08A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_702D[0x7];                                     // 0x08A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_SelfInteractEnabled;                           // 0x08A8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_DoNotLockActor;                                // 0x08D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnUnlockedDispatcher;                              // 0x08F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLockedDispatcher;                                // 0x0908(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          AutoAttachToParentActors;                          // 0x0918(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoCloseDoorOnLock;                               // 0x0919(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoDoorOnUnlock;                                  // 0x091A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AutoOpenContainersOnUnlock;                        // 0x091B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          SetsAllowInteractOnUnlock;                         // 0x091C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	Enum_MANG_Security_ID                         Lock_ID;                                           // 0x091D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_702E[0x2];                                     // 0x091E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 BlankLinkedActor;                                  // 0x0920(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnUnlockedDispatcher__DelegateSignature();
	void OnLockedDispatcher__DelegateSignature();
	void ExecuteUbergraph_BGA_Athena_Lock_Parent(int32 EntryPoint, Enum_Athena_Lock Temp_byte_Variable, class AFortPawn* K2Node_CustomEvent_InteractingPawn_1, class AFortPawn* K2Node_CustomEvent_InteractingPawn, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_LockCheck_CheckPassed, class AFortGameStateAthena* Temp_object_Variable, bool CallFunc_LockCheck_CheckPassed_1, class UFortPlaylist* Temp_object_Variable_1, const struct FGameplayTagContainer& Temp_struct_Variable, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, Enum_Athena_Lock K2Node_CustomEvent_LockState, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, float CallFunc_GetValueAtLevel_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_RowToBool_ReturnValue, bool CallFunc_RowToBool_ReturnValue_1, class AFortPawn* K2Node_Event_InteractingPawn, EInteractionBeingAttempted K2Node_Event_InteractionBeingAttempted, bool K2Node_SwitchEnum_CmpSuccess, class AActor* CallFunc_GetParentActor_ReturnValue, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess, const struct FGameplayTag& Temp_struct_Variable_1, Enum_Athena_Lock Temp_byte_Variable_1, bool CallFunc_CloseActor_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, class ABuildingContainer* K2Node_DynamicCast_AsBuilding_Container, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_BP_SpawnLoot_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_2, Enum_Athena_Lock Temp_byte_Variable_2, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput_1, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer_1, bool CallFunc_OpenActor_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, Enum_Athena_Lock Temp_byte_Variable_3, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue_1, bool CallFunc_SendComplexCustomStatEvent_QuestActive_1, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted_1, bool CallFunc_IsServer_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FGameplayTag& K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_PerformLinkingCheck_ReturnValue, class AActor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, class AController* K2Node_CustomEvent_InstigatedBy, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_HitLocation, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent, class FName K2Node_CustomEvent_BoneName, const struct FVector& K2Node_CustomEvent_Momentum, Enum_Athena_Lock Temp_byte_Variable_4, Enum_Athena_Lock K2Node_Select_Default_1);
	void ParentActorDied(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void NotEnabled();
	void UnlockOpenDoor();
	void LockCloseDoor();
	void OpenContainers();
	void ReceiveBeginPlay();
	void BlueprintOnInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted);
	void TimedRelock();
	void SetLock(Enum_Athena_Lock Param_LockState);
	void ApplyFailCheckEffect();
	void HideAndKill();
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature();
	void OnUnLocked();
	void OnLocked();
	void OnFirstInteract(class AFortPawn* InteractingPawn);
	void OnSecondInteract(class AFortPawn* InteractingPawn);
	void OnReady_19560710434050E125B3ADA0163CD609(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);
	void OnRep_LockState(bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void OnRep_EverInteractSetLock();
	void LockCheck(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, bool* CheckPassed);
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void Lock_Set_Interact_Collision(bool On);

	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, EInteractionBeingAttempted Temp_byte_Variable, class FText Temp_text_Variable, class FText K2Node_Select_Default) const;
	bool BlueprintGetInteractionTime(class AFortPawn* InteractingPawn, float* OutInteractionTime, EInteractionBeingAttempted InteractionBeingAttempted, EInteractionBeingAttempted Temp_byte_Variable, float Temp_float_Variable, float K2Node_Select_Default) const;
	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, EInteractionBeingAttempted Temp_byte_Variable, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, bool K2Node_Select_Default, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_DegAcos_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_Lock_Parent_C">();
	}
	static class ABGA_Athena_Lock_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_Lock_Parent_C>();
	}
};
static_assert(alignof(ABGA_Athena_Lock_Parent_C) == 0x000008, "Wrong alinment on ABGA_Athena_Lock_Parent_C");
static_assert(sizeof(ABGA_Athena_Lock_Parent_C) == 0x000928, "Wrong size on ABGA_Athena_Lock_Parent_C");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, UberGraphFrame) == 0x0007D0, "Member 'ABGA_Athena_Lock_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Lock) == 0x0007D8, "Member 'ABGA_Athena_Lock_Parent_C::Lock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DefaultSceneRoot) == 0x0007E0, "Member 'ABGA_Athena_Lock_Parent_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FortLinkToActor) == 0x0007E8, "Member 'ABGA_Athena_Lock_Parent_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, InteractionCollision) == 0x0007F0, "Member 'ABGA_Athena_Lock_Parent_C::InteractionCollision' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AttachedLockActor) == 0x0007F8, "Member 'ABGA_Athena_Lock_Parent_C::AttachedLockActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanFirstInteract) == 0x000800, "Member 'ABGA_Athena_Lock_Parent_C::CanFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanSecondInteract) == 0x000801, "Member 'ABGA_Athena_Lock_Parent_C::CanSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanInteractWhileUnlocked) == 0x000802, "Member 'ABGA_Athena_Lock_Parent_C::CanInteractWhileUnlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FirstInteractText) == 0x000808, "Member 'ABGA_Athena_Lock_Parent_C::FirstInteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SecondInteractText) == 0x000820, "Member 'ABGA_Athena_Lock_Parent_C::SecondInteractText' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, FirstInteractTime) == 0x000838, "Member 'ABGA_Athena_Lock_Parent_C::FirstInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SecondInteractTime) == 0x00083C, "Member 'ABGA_Athena_Lock_Parent_C::SecondInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetLockOnFirstInteract) == 0x000840, "Member 'ABGA_Athena_Lock_Parent_C::SetLockOnFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetLockOnSecondInteract) == 0x000841, "Member 'ABGA_Athena_Lock_Parent_C::SetLockOnSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LastInteractingPawn) == 0x000848, "Member 'ABGA_Athena_Lock_Parent_C::LastInteractingPawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, CanMultipleInteract) == 0x000850, "Member 'ABGA_Athena_Lock_Parent_C::CanMultipleInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, LockState) == 0x000851, "Member 'ABGA_Athena_Lock_Parent_C::LockState' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, EverInteractSetLock) == 0x000852, "Member 'ABGA_Athena_Lock_Parent_C::EverInteractSetLock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Event_Locked) == 0x000854, "Member 'ABGA_Athena_Lock_Parent_C::Event_Locked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Event_Unlocked) == 0x00085C, "Member 'ABGA_Athena_Lock_Parent_C::Event_Unlocked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DoLockCheckFirstInteract) == 0x000864, "Member 'ABGA_Athena_Lock_Parent_C::DoLockCheckFirstInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, DoLockCheckSecondInteract) == 0x000865, "Member 'ABGA_Athena_Lock_Parent_C::DoLockCheckSecondInteract' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, ApplyEffectOnFailCheck) == 0x000866, "Member 'ABGA_Athena_Lock_Parent_C::ApplyEffectOnFailCheck' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, GE_FailedCheck) == 0x000868, "Member 'ABGA_Athena_Lock_Parent_C::GE_FailedCheck' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, MaxInteractAngle) == 0x000870, "Member 'ABGA_Athena_Lock_Parent_C::MaxInteractAngle' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_RelockDelay) == 0x000878, "Member 'ABGA_Athena_Lock_Parent_C::Row_RelockDelay' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoRelock) == 0x0008A0, "Member 'ABGA_Athena_Lock_Parent_C::AutoRelock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_SelfInteractEnabled) == 0x0008A8, "Member 'ABGA_Athena_Lock_Parent_C::Row_SelfInteractEnabled' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Row_DoNotLockActor) == 0x0008D0, "Member 'ABGA_Athena_Lock_Parent_C::Row_DoNotLockActor' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, OnUnlockedDispatcher) == 0x0008F8, "Member 'ABGA_Athena_Lock_Parent_C::OnUnlockedDispatcher' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, OnLockedDispatcher) == 0x000908, "Member 'ABGA_Athena_Lock_Parent_C::OnLockedDispatcher' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoAttachToParentActors) == 0x000918, "Member 'ABGA_Athena_Lock_Parent_C::AutoAttachToParentActors' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoCloseDoorOnLock) == 0x000919, "Member 'ABGA_Athena_Lock_Parent_C::AutoCloseDoorOnLock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoDoorOnUnlock) == 0x00091A, "Member 'ABGA_Athena_Lock_Parent_C::AutoDoorOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, AutoOpenContainersOnUnlock) == 0x00091B, "Member 'ABGA_Athena_Lock_Parent_C::AutoOpenContainersOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, SetsAllowInteractOnUnlock) == 0x00091C, "Member 'ABGA_Athena_Lock_Parent_C::SetsAllowInteractOnUnlock' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, Lock_ID) == 0x00091D, "Member 'ABGA_Athena_Lock_Parent_C::Lock_ID' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_Lock_Parent_C, BlankLinkedActor) == 0x000920, "Member 'ABGA_Athena_Lock_Parent_C::BlankLinkedActor' has a wrong offset!");

}

