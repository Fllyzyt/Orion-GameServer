#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EventsSimpleTab

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass EventsSimpleTab.EventsSimpleTab_C
// 0x00E0 (0x0C80 - 0x0BA0)
class UEventsSimpleTab_C final  : public UCommonButton
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Selected;                                          // 0x0BA8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hovered;                                           // 0x0BB0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       CenterButtonTextWidget;                            // 0x0BB8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CenterButtonTextWidget_White;                      // 0x0BC0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_VariablePadding;                      // 0x0BC8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ButtonTop;                                   // 0x0BD0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ButtonBG;                                  // 0x0BD8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ToUpper;                                           // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          XL;                                                // 0x0BE1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7692[0x6];                                     // 0x0BE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ButtonNameText;                                    // 0x0BE8(0x0018)(Edit, BlueprintVisible)
	TMap<class FString, struct FLinearColor>      Color;                                             // 0x0C00(0x0050)(Edit, BlueprintVisible)
	struct FLinearColor                           GamepadButtonTextColor;                            // 0x0C50(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultTextColor;                                  // 0x0C60(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ButtonPadding;                                     // 0x0C70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisualSelectionState;                              // 0x0C78(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void BP_OnHovered();
	void BP_OnUnhovered();
	void PreConstruct(bool IsDesignTime);
	void UpdateColor(class FString& ParameterName, const struct FLinearColor& New_Color);
	void OnSelectedChangedEvent(class UCommonButton* Button, bool Param_Selected);
	void OnInitialized();
	void Construct();
	void ExecuteUbergraph_EventsSimpleTab(int32 EntryPoint, class FString& Temp_string_Variable, class FString& Temp_string_Variable_1, TDelegate<void(class UCommonButton* Button, bool Selected)> K2Node_CreateDelegate_OutputDelegate, class FText CallFunc_TextToUpper_ReturnValue, bool K2Node_Event_IsDesignTime, class FString& Temp_string_Variable_2, const struct FLinearColor& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, class FString& Temp_string_Variable_3, const struct FLinearColor& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FLinearColor& CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, const struct FLinearColor& CallFunc_Map_Find_Value_3, bool CallFunc_Map_Find_ReturnValue_3, const struct FSlateColor& K2Node_MakeStruct_SlateColor, bool Temp_bool_Variable, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, class FText K2Node_Select_Default, class FString& K2Node_CustomEvent_ParameterName, const struct FLinearColor& K2Node_CustomEvent_New_Color, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, const struct FMargin& K2Node_MakeStruct_Margin, class UCommonButton* K2Node_CustomEvent_Button, bool K2Node_CustomEvent_Selected, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue, bool CallFunc_EqualEqual_BoolBool_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimationForward_ReturnValue_1, class UUMGSequencePlayer* CallFunc_PlayAnimationReverse_ReturnValue_1, bool CallFunc_IsMobileGame_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"EventsSimpleTab_C">();
	}
	static class UEventsSimpleTab_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEventsSimpleTab_C>();
	}
};
static_assert(alignof(UEventsSimpleTab_C) == 0x000008, "Wrong alinment on UEventsSimpleTab_C");
static_assert(sizeof(UEventsSimpleTab_C) == 0x000C80, "Wrong size on UEventsSimpleTab_C");
static_assert(offsetof(UEventsSimpleTab_C, UberGraphFrame) == 0x000BA0, "Member 'UEventsSimpleTab_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, Selected) == 0x000BA8, "Member 'UEventsSimpleTab_C::Selected' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, Hovered) == 0x000BB0, "Member 'UEventsSimpleTab_C::Hovered' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, CenterButtonTextWidget) == 0x000BB8, "Member 'UEventsSimpleTab_C::CenterButtonTextWidget' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, CenterButtonTextWidget_White) == 0x000BC0, "Member 'UEventsSimpleTab_C::CenterButtonTextWidget_White' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, CommonBorder_VariablePadding) == 0x000BC8, "Member 'UEventsSimpleTab_C::CommonBorder_VariablePadding' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, Image_ButtonTop) == 0x000BD0, "Member 'UEventsSimpleTab_C::Image_ButtonTop' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, Overlay_ButtonBG) == 0x000BD8, "Member 'UEventsSimpleTab_C::Overlay_ButtonBG' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, ToUpper) == 0x000BE0, "Member 'UEventsSimpleTab_C::ToUpper' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, XL) == 0x000BE1, "Member 'UEventsSimpleTab_C::XL' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, ButtonNameText) == 0x000BE8, "Member 'UEventsSimpleTab_C::ButtonNameText' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, Color) == 0x000C00, "Member 'UEventsSimpleTab_C::Color' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, GamepadButtonTextColor) == 0x000C50, "Member 'UEventsSimpleTab_C::GamepadButtonTextColor' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, DefaultTextColor) == 0x000C60, "Member 'UEventsSimpleTab_C::DefaultTextColor' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, ButtonPadding) == 0x000C70, "Member 'UEventsSimpleTab_C::ButtonPadding' has a wrong offset!");
static_assert(offsetof(UEventsSimpleTab_C, VisualSelectionState) == 0x000C78, "Member 'UEventsSimpleTab_C::VisualSelectionState' has a wrong offset!");

}

