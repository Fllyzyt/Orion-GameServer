#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_RiftPortal_Item_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_RiftPortal_Item_Athena.BGA_RiftPortal_Item_Athena_C
// 0x01C0 (0x0A08 - 0x0848)
class ABGA_RiftPortal_Item_Athena_C final  : public AFortAthenaRiftPortal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0848(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  RiftPostProcess;                                   // 0x0850(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PostProcessRadius;                                 // 0x0858(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_RiftClosingUp;                                   // 0x0860(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Rift_Idle_Loop;                                  // 0x0868(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      OverlapCapsule;                                    // 0x0870(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0878(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Rift;                                           // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_Looping;                                     // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FragmentMovement_Glow_9A68D88241DDB9CCA0BC82888C4EC266; // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FragmentMovement_Open_9A68D88241DDB9CCA0BC82888C4EC266; // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FragmentMovement__Direction_9A68D88241DDB9CCA0BC82888C4EC266; // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7168[0x7];                                     // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FragmentMovement;                                  // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Audio_RiftDestroyed_PitchCurve_00EF53CD47287903FB5B01AC2A7BE7C6; // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Audio_RiftDestroyed__Direction_00EF53CD47287903FB5B01AC2A7BE7C6; // 0x08AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7169[0x3];                                     // 0x08AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Audio_RiftDestroyed;                               // 0x08B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         VectorScale_Open_1424CF6C4426FFF7BA2A64817506E111; // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            VectorScale__Direction_1424CF6C4426FFF7BA2A64817506E111; // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_716A[0x3];                                     // 0x08BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     VectorScale;                                       // 0x08C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        DeathEffects;                                      // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             EnteredRift;                                       // 0x08D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             RiftDestroyed;                                     // 0x08D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x08E0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TeleportLocation;                                  // 0x08E8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_716B[0x4];                                     // 0x08F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        EnterRift;                                         // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PortalOpen;                                        // 0x0900(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716C[0x7];                                     // 0x0901(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           FallingAnimation;                                  // 0x0908(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         TeleportHeight;                                    // 0x0910(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         ActiveDuration;                                    // 0x0938(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         HangTime;                                          // 0x0960(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         TeleportDelay;                                     // 0x0988(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_716D[0x4];                                     // 0x098C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AFortPlayerPawn*>                PassengerArray;                                    // 0x0990(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	class UParticleSystem*                        CrackExitRift;                                     // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             PlayerExitSkyCrack;                                // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ActorOriginalLocation;                             // 0x09B0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxSpawnHeightMultiplier;                          // 0x09BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               QuestItem;                                         // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ObjectiveBackendName;                              // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestItemDefinition*               RiftPortalLocationsQuest;                          // 0x09D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CreativeMode;                                      // 0x09D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_716E[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 OverlapActor;                                      // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RiftLocationNum;                                   // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ActorRotation;                                     // 0x09EC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TScriptInterface<class IFortVehicleInterface> VehicleInterface;                                  // 0x09F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BGA_RiftPortal_Item_Athena(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_2, class AActor* K2Node_ComponentBoundEvent_OtherActor_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_2, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_2, bool K2Node_ComponentBoundEvent_bFromSweep_1, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_1, TArray<class AActor*>& CallFunc_GetOverlappingActors_OverlappingActors, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& K2Node_CustomEvent_PlayerLocation, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, int32 Temp_int_Array_Index_Variable_1, float CallFunc_RandomFloatInRange_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class AActor* K2Node_Event_Actor, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_3, const struct FActiveGameplayEffectHandle& CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue, bool CallFunc_HasDriver_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_IsInsideHidingProp_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, TArray<class AFortPlayerPawn*>& CallFunc_GetAllPassengers_ReturnValue, bool CallFunc_HasDriver_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAtLocation_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_2, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsDrivingVehicle_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue_1, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, const struct FVector& CallFunc_GetOwnerLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AActor* K2Node_Event_VehicleActor, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface_1, bool K2Node_DynamicCast_bSuccess_5, const struct FVector& CallFunc_GetOwnerLocation_ReturnValue_1, TArray<class AFortPlayerPawn*>& CallFunc_GetAllPassengers_ReturnValue_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess_6, class FName K2Node_CustomEvent_PlaylistName, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, bool CallFunc_Athena_CheckCreativeMode_CanCompleteQuest, bool CallFunc_Athena_CheckCreativeMode_CanCompleteQuest_1, bool CallFunc_IsValid_ReturnValue_2, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, TDelegate<void(class AFortPlayerPawnAthena* FortPlayerPawnAthena)> K2Node_CreateDelegate_OutputDelegate_1, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_MakeRotator_ReturnValue_1, class AFortPlayerPawnAthena* K2Node_CustomEvent_FortPlayerPawnAthena, bool CallFunc_TeleportPlayerPawn_ReturnValue, TArray<class AActor*>& CallFunc_GetOverlappingActors_OverlappingActors_1, TDelegate<void(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Is_Flying_NewParam, bool CallFunc_Is_Flying_NewParam_1, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena_1, bool K2Node_DynamicCast_bSuccess_7, class AFortPlayerPawn* CallFunc_Array_Get_Item, bool CallFunc_LocalIsTryingToEnterVehicle_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_SelectFloat_ReturnValue, class AActor* CallFunc_GetVehicleActorPtr_ReturnValue, bool CallFunc_CanTeleport_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue_2, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult, TArray<class AFortPlayerPawn*>& CallFunc_GetAllPassengers_ReturnValue_2, const struct FVector& CallFunc_GetOwnerLocation_ReturnValue_2, class AFortPlayerPawn* CallFunc_Array_Get_Item_1, bool CallFunc_IsValid_ReturnValue_3, class AController* CallFunc_GetController_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_3, class AFortPlayerPawn* CallFunc_GetDriver_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_4, class AController* CallFunc_GetController_ReturnValue_2, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_5);
	void VehicleInteractionFailed(class AFortPlayerPawnAthena* FortPlayerPawnAthena);
	void PlaylistLoaded(class FName PlaylistName, struct FGameplayTagContainer& PlaylistContextTags);
	void NotifyTeleportedVehicle(class AActor* VehicleActor);
	void VehicleTeleportEvent();
	void OverlappingOnBeginPlay(class AActor* Actor);
	void PlayCosmeticFX();
	void PlayTeleportFX(const struct FVector& PlayerLocation);
	void ReceiveBeginPlay();
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__OverlapCapsule_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void DestroyRift();
	void FragmentMovement__UpdateFunc();
	void FragmentMovement__FinishedFunc();
	void VectorScale__UpdateFunc();
	void VectorScale__FinishedFunc();
	void Audio_RiftDestroyed__UpdateFunc();
	void Audio_RiftDestroyed__FinishedFunc();
	void PlayExpandOrCollapseAudio(bool Expand, bool Temp_bool_Variable, class USoundBase* Temp_object_Variable, class USoundBase* Temp_object_Variable_1, class USoundBase* K2Node_Select_Default, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue);
	void OnRep_TeleportLocation();
	void OnRep_Vehicle();
	void OnRep_PlayerPawn();
	void CheckForRiftLocUpdate(class AController* InController);
	void UseRiftQuestUpdate(class AController* InController, class AFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, TArray<class AFortPlayerController*>& K2Node_MakeArray_Array, bool CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestIsValid, bool CallFunc_Athena_CheckQuestAndObjectiveCompletion_QuestCompleted, bool CallFunc_Athena_CheckQuestAndObjectiveCompletion_ObjectiveCompleted, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void Is_Flying(bool* NewParam, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, class UFortMovementComp_Character* K2Node_DynamicCast_AsFort_Movement_Comp_Character, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void EjectFromTurret(class AFortPlayerPawn* Param_PlayerPawn, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_CanTeleport_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithGrantedTags_ReturnValue, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_RiftPortal_Item_Athena_C">();
	}
	static class ABGA_RiftPortal_Item_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_RiftPortal_Item_Athena_C>();
	}
};
static_assert(alignof(ABGA_RiftPortal_Item_Athena_C) == 0x000008, "Wrong alinment on ABGA_RiftPortal_Item_Athena_C");
static_assert(sizeof(ABGA_RiftPortal_Item_Athena_C) == 0x000A08, "Wrong size on ABGA_RiftPortal_Item_Athena_C");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, UberGraphFrame) == 0x000848, "Member 'ABGA_RiftPortal_Item_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, RiftPostProcess) == 0x000850, "Member 'ABGA_RiftPortal_Item_Athena_C::RiftPostProcess' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, PostProcessRadius) == 0x000858, "Member 'ABGA_RiftPortal_Item_Athena_C::PostProcessRadius' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, P_RiftClosingUp) == 0x000860, "Member 'ABGA_RiftPortal_Item_Athena_C::P_RiftClosingUp' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, P_Rift_Idle_Loop) == 0x000868, "Member 'ABGA_RiftPortal_Item_Athena_C::P_Rift_Idle_Loop' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, OverlapCapsule) == 0x000870, "Member 'ABGA_RiftPortal_Item_Athena_C::OverlapCapsule' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, Capsule) == 0x000878, "Member 'ABGA_RiftPortal_Item_Athena_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, SM_Rift) == 0x000880, "Member 'ABGA_RiftPortal_Item_Athena_C::SM_Rift' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, Audio_Looping) == 0x000888, "Member 'ABGA_RiftPortal_Item_Athena_C::Audio_Looping' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, FragmentMovement_Glow_9A68D88241DDB9CCA0BC82888C4EC266) == 0x000890, "Member 'ABGA_RiftPortal_Item_Athena_C::FragmentMovement_Glow_9A68D88241DDB9CCA0BC82888C4EC266' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, FragmentMovement_Open_9A68D88241DDB9CCA0BC82888C4EC266) == 0x000894, "Member 'ABGA_RiftPortal_Item_Athena_C::FragmentMovement_Open_9A68D88241DDB9CCA0BC82888C4EC266' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, FragmentMovement__Direction_9A68D88241DDB9CCA0BC82888C4EC266) == 0x000898, "Member 'ABGA_RiftPortal_Item_Athena_C::FragmentMovement__Direction_9A68D88241DDB9CCA0BC82888C4EC266' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, FragmentMovement) == 0x0008A0, "Member 'ABGA_RiftPortal_Item_Athena_C::FragmentMovement' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, Audio_RiftDestroyed_PitchCurve_00EF53CD47287903FB5B01AC2A7BE7C6) == 0x0008A8, "Member 'ABGA_RiftPortal_Item_Athena_C::Audio_RiftDestroyed_PitchCurve_00EF53CD47287903FB5B01AC2A7BE7C6' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, Audio_RiftDestroyed__Direction_00EF53CD47287903FB5B01AC2A7BE7C6) == 0x0008AC, "Member 'ABGA_RiftPortal_Item_Athena_C::Audio_RiftDestroyed__Direction_00EF53CD47287903FB5B01AC2A7BE7C6' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, Audio_RiftDestroyed) == 0x0008B0, "Member 'ABGA_RiftPortal_Item_Athena_C::Audio_RiftDestroyed' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, VectorScale_Open_1424CF6C4426FFF7BA2A64817506E111) == 0x0008B8, "Member 'ABGA_RiftPortal_Item_Athena_C::VectorScale_Open_1424CF6C4426FFF7BA2A64817506E111' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, VectorScale__Direction_1424CF6C4426FFF7BA2A64817506E111) == 0x0008BC, "Member 'ABGA_RiftPortal_Item_Athena_C::VectorScale__Direction_1424CF6C4426FFF7BA2A64817506E111' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, VectorScale) == 0x0008C0, "Member 'ABGA_RiftPortal_Item_Athena_C::VectorScale' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, DeathEffects) == 0x0008C8, "Member 'ABGA_RiftPortal_Item_Athena_C::DeathEffects' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, EnteredRift) == 0x0008D0, "Member 'ABGA_RiftPortal_Item_Athena_C::EnteredRift' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, RiftDestroyed) == 0x0008D8, "Member 'ABGA_RiftPortal_Item_Athena_C::RiftDestroyed' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, PlayerPawn) == 0x0008E0, "Member 'ABGA_RiftPortal_Item_Athena_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, TeleportLocation) == 0x0008E8, "Member 'ABGA_RiftPortal_Item_Athena_C::TeleportLocation' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, EnterRift) == 0x0008F8, "Member 'ABGA_RiftPortal_Item_Athena_C::EnterRift' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, PortalOpen) == 0x000900, "Member 'ABGA_RiftPortal_Item_Athena_C::PortalOpen' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, FallingAnimation) == 0x000908, "Member 'ABGA_RiftPortal_Item_Athena_C::FallingAnimation' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, TeleportHeight) == 0x000910, "Member 'ABGA_RiftPortal_Item_Athena_C::TeleportHeight' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, ActiveDuration) == 0x000938, "Member 'ABGA_RiftPortal_Item_Athena_C::ActiveDuration' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, HangTime) == 0x000960, "Member 'ABGA_RiftPortal_Item_Athena_C::HangTime' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, TeleportDelay) == 0x000988, "Member 'ABGA_RiftPortal_Item_Athena_C::TeleportDelay' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, PassengerArray) == 0x000990, "Member 'ABGA_RiftPortal_Item_Athena_C::PassengerArray' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, CrackExitRift) == 0x0009A0, "Member 'ABGA_RiftPortal_Item_Athena_C::CrackExitRift' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, PlayerExitSkyCrack) == 0x0009A8, "Member 'ABGA_RiftPortal_Item_Athena_C::PlayerExitSkyCrack' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, ActorOriginalLocation) == 0x0009B0, "Member 'ABGA_RiftPortal_Item_Athena_C::ActorOriginalLocation' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, MaxSpawnHeightMultiplier) == 0x0009BC, "Member 'ABGA_RiftPortal_Item_Athena_C::MaxSpawnHeightMultiplier' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, QuestItem) == 0x0009C0, "Member 'ABGA_RiftPortal_Item_Athena_C::QuestItem' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, ObjectiveBackendName) == 0x0009C8, "Member 'ABGA_RiftPortal_Item_Athena_C::ObjectiveBackendName' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, RiftPortalLocationsQuest) == 0x0009D0, "Member 'ABGA_RiftPortal_Item_Athena_C::RiftPortalLocationsQuest' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, CreativeMode) == 0x0009D8, "Member 'ABGA_RiftPortal_Item_Athena_C::CreativeMode' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, OverlapActor) == 0x0009E0, "Member 'ABGA_RiftPortal_Item_Athena_C::OverlapActor' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, RiftLocationNum) == 0x0009E8, "Member 'ABGA_RiftPortal_Item_Athena_C::RiftLocationNum' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, ActorRotation) == 0x0009EC, "Member 'ABGA_RiftPortal_Item_Athena_C::ActorRotation' has a wrong offset!");
static_assert(offsetof(ABGA_RiftPortal_Item_Athena_C, VehicleInterface) == 0x0009F8, "Member 'ABGA_RiftPortal_Item_Athena_C::VehicleInterface' has a wrong offset!");

}

