#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FrontendCamera_VaultRotator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FrontendCamera_VaultRotator.FrontendCamera_VaultRotator_C
// 0x0020 (0x0800 - 0x07E0)
class AFrontendCamera_VaultRotator_C final  : public AFortCameraBase
{
public:
	uint8                                         Pad_7932[0x8];                                     // 0x07D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       LoginCamera_0;                                     // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AVaultRotator_C*                        ActiveVaultRotator;                                // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetVaultRotatorLighting(class FName ItemRotatorTag, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class AVaultWorld_C*>& CallFunc_GetAllActorsOfClass_OutActors, class AVaultWorld_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class AVaultRotator_C* CallFunc_GetVaultRotator_VaultRotator, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue);
	void OnActivated(class AFortPlayerController* PlayerController);
	void OnDeactivated(class AFortPlayerController* PlayerController);
	void ExecuteUbergraph_FrontendCamera_VaultRotator(int32 EntryPoint, int32 Temp_int_Array_Index_Variable, class AFortPlayerController* K2Node_Event_PlayerController_1, class AFortTimeOfDayManager* CallFunc_GetTimeOfDayManagerFromContext_ReturnValue, TArray<class ATVPostProcessBP_C*>& CallFunc_GetAllActorsOfClass_OutActors, class AFortPlayerController* K2Node_Event_PlayerController, class ATVPostProcessBP_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FrontendCamera_VaultRotator_C">();
	}
	static class AFrontendCamera_VaultRotator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AFrontendCamera_VaultRotator_C>();
	}
};
static_assert(alignof(AFrontendCamera_VaultRotator_C) == 0x000010, "Wrong alinment on AFrontendCamera_VaultRotator_C");
static_assert(sizeof(AFrontendCamera_VaultRotator_C) == 0x000800, "Wrong size on AFrontendCamera_VaultRotator_C");
static_assert(offsetof(AFrontendCamera_VaultRotator_C, UberGraphFrame) == 0x0007E0, "Member 'AFrontendCamera_VaultRotator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AFrontendCamera_VaultRotator_C, LoginCamera_0) == 0x0007E8, "Member 'AFrontendCamera_VaultRotator_C::LoginCamera_0' has a wrong offset!");
static_assert(offsetof(AFrontendCamera_VaultRotator_C, ActiveVaultRotator) == 0x0007F0, "Member 'AFrontendCamera_VaultRotator_C::ActiveVaultRotator' has a wrong offset!");

}

