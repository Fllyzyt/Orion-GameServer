#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ProjectileTrajectory_SnapToGrid_HolidayBox

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ECardinalDirection_structs.hpp"
#include "BP_ProjectileTrajectory_Athena_SnapToGridArrow_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ProjectileTrajectory_SnapToGrid_HolidayBox.BP_ProjectileTrajectory_SnapToGrid_HolidayBox_C
// 0x00D0 (0x0430 - 0x0360)
class ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C final  : public ABP_ProjectileTrajectory_Athena_SnapToGridArrow_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ProjectileTrajectory_SnapToGrid_HolidayBox_C; // 0x0360(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Looping_Sound;                                     // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<ECardinalDirection, float>               OrientationYawOffsets;                             // 0x0370(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<ECardinalDirection, struct FVector>      OrientationLocationOffsets;                        // 0x03C0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FVector>                        BGALocations_Traced;                               // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FRotator>                       BGARotations_Traced;                               // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ProjectileTrajectory_SnapToGrid_HolidayBox(int32 EntryPoint, TArray<class AActor*>& Temp_object_Variable, class APawn* CallFunc_GetInstigator_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1, float CallFunc_Abs_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_2, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, const struct FVector& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FVector& K2Node_Event_NewLocation, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_GridSnap_Float_ReturnValue, float CallFunc_GridSnap_Float_ReturnValue_1, float CallFunc_GridSnap_Float_ReturnValue_2, float CallFunc_Subtract_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_NotEqual_RotatorRotator_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_NotEqual_VectorVector_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult, bool Temp_bool_True_if_break_was_hit_Variable, class UStaticMesh* K2Node_Select_Default, bool CallFunc_SetStaticMesh_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4, TArray<struct FHitResult>& CallFunc_BoxTraceMultiByProfile_OutHits, bool CallFunc_BoxTraceMultiByProfile_ReturnValue, const struct FHitResult& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_Less_IntInt_ReturnValue, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess, bool CallFunc_BooleanAND_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue);
	void ReceiveDestroyed();
	void HandleGridSnapUpdates(const struct FVector& NewLocation);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ProjectileTrajectory_SnapToGrid_HolidayBox_C">();
	}
	static class ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C>();
	}
};
static_assert(alignof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C) == 0x000008, "Wrong alinment on ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C");
static_assert(sizeof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C) == 0x000430, "Wrong size on ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, UberGraphFrame_BP_ProjectileTrajectory_SnapToGrid_HolidayBox_C) == 0x000360, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::UberGraphFrame_BP_ProjectileTrajectory_SnapToGrid_HolidayBox_C' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, Looping_Sound) == 0x000368, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::Looping_Sound' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, OrientationYawOffsets) == 0x000370, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::OrientationYawOffsets' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, OrientationLocationOffsets) == 0x0003C0, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::OrientationLocationOffsets' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, BGALocations_Traced) == 0x000410, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::BGALocations_Traced' has a wrong offset!");
static_assert(offsetof(ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C, BGARotations_Traced) == 0x000420, "Member 'ABP_ProjectileTrajectory_SnapToGrid_HolidayBox_C::BGARotations_Traced' has a wrong offset!");

}

