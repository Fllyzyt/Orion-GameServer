#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Car_DEFAULT

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Car_DEFAULT.Car_DEFAULT_C
// 0x01F0 (0x0D98 - 0x0BA8)
class ACar_DEFAULT_C final  : public ABuildingProp
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF; // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF; // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B20[0x3];                                     // 0x0BB5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_2;                                        // 0x0BB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983; // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983; // 0x0BC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B21[0x3];                                     // 0x0BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BounceCar;                                         // 0x0BC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7; // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7; // 0x0BD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B22[0x3];                                     // 0x0BD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0BD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverallAlarmCycleFinished;                         // 0x0BE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B23[0x3];                                     // 0x0BE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           InitialEmissiveMultiplier;                         // 0x0BE4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InitialEmissiveMultiplier2;                        // 0x0BF4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AlarmLightCounter;                                 // 0x0C04(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SoundIsRetriggerable;                              // 0x0C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CurrentFlashAnimationCycleFinished;                // 0x0C09(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B24[0x2];                                     // 0x0C0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfTimesTheLightsFlashWhenHit;                // 0x0C0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SirenLightEmissiveMultiplier;                      // 0x0C10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SirenLightOn;                                      // 0x0C14(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B25[0x3];                                     // 0x0C15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Emissive_Multiplier_2;                             // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Emissive_Multiplier;                               // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_HitAlarm;                              // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Use_Emissive_2;                                    // 0x0C30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B26[0x7];                                     // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_Minus_Jump_on_Car;                           // 0x0C38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SuspensionMovementAmount;                          // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParticleEffectHas_NOT_AlreadyBeenTriggered;        // 0x0C44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B27[0x3];                                     // 0x0C45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               EngineSteamParticleEffect;                         // 0x0C48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_Minus_Hit_AutoBody;                          // 0x0C50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanMakeJumpingNoiseAgain;                          // 0x0C58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmIsCurrentlyMakingNoise;                    // 0x0C59(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CarAlarmEnabled;                                   // 0x0C5A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RandomlyDisableSomeCarAlarms;                      // 0x0C5B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         PercentageChanceOfCarAlarmsBeingDisabled;          // 0x0C5C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   HLight1;                                           // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight1SocketLocation;                             // 0x0C68(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HLight2SocketLocation;                             // 0x0C74(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       AnimatingMIDArray;                                 // 0x0C80(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UAudioComponent*                        AudibleAlarmSound;                                 // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseCarBounce;                                      // 0x0C98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseCarAlarm;                                       // 0x0C99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B28[0x2];                                     // 0x0C9A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Headlight_Emissive_Brightness;                     // 0x0C9C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCarAlarmEnabledInitialized;                      // 0x0CA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugWind;                                         // 0x0CA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B29[0x6];                                     // 0x0CA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             OriginalMaterials;                                 // 0x0CA8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             IntenseWindMaterialsForPreview;                    // 0x0CB8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Debug_TempMaterial;                                // 0x0CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Debug_Wind_Intensity;                              // 0x0CD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B2A[0x4];                                     // 0x0CD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   Wind_Intensity_Debug_Mesh;                         // 0x0CD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanDropOilDecal;                                   // 0x0CE0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2B[0x3];                                     // 0x0CE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Wind_Yaw_Rotation;                                 // 0x0CE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight1;                                        // 0x0CE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   Taillight2;                                        // 0x0CF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TailLightBrightness;                               // 0x0CF8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TailLightsExist;                                   // 0x0CFC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HeadLightsExist;                                   // 0x0CFD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2C[0x2];                                     // 0x0CFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USpotLightComponent*                    HLight2;                                           // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeadLightLightBrightness;                          // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight1SocketLocation;                             // 0x0D0C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TLight2SocketLocation;                             // 0x0D18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Bounce_Offset;                                     // 0x0D24(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Hlight2_Minus_impact_bounce_light_location;        // 0x0D30(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight2_Minus_impact_bounce_light_location;        // 0x0D3C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Car_Currently_Bouncing_From_Jump;                  // 0x0D48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2D[0x3];                                     // 0x0D49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Hlight1_Minus_impact_bounce_light_location;        // 0x0D4C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Tlight1_Minus_impact_bounce_light_location;        // 0x0D58(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Randomly_start_with_some_cars_lights_on;           // 0x0D64(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B2E[0x3];                                     // 0x0D65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Percentage_chance_of_lights_being_left_off;        // 0x0D68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Final_Random_Light_Intensity_Variance;             // 0x0D6C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          This_Car_s_Lights_Have_Been_Enabled;               // 0x0D70(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TurnHeadLightsOn;                                  // 0x0D71(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_5B2F[0x2];                                     // 0x0D72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         TimeSinceLastJumpSound;                            // 0x0D74(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTimeBetweenJumpSound;                           // 0x0D78(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B30[0x4];                                     // 0x0D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnPlayDeathEffects;                                // 0x0D80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         CurrentLightRuntimeIntensity;                      // 0x0D90(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void OnPlayDeathEffects__DelegateSignature();
	void ExecuteUbergraph_Car_DEFAULT(int32 EntryPoint, float CallFunc_GetScalarParameterValue_ReturnValue, float CallFunc_GetScalarParameterValue_ReturnValue_1, float CallFunc_GetScalarParameterValue_ReturnValue_2, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable_1, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, bool Temp_bool_IsClosed_Variable_1, float CallFunc_GetScalarParameterValue_ReturnValue_3, bool CallFunc_IsDedicatedServer_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, bool Temp_bool_Variable, class UMaterialInstanceDynamic* CallFunc_GetOrCreateMIDOnDefaultMesh_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class UPrimitiveComponent* K2Node_Event_MyComp, class AActor* K2Node_Event_Other, class UPrimitiveComponent* K2Node_Event_OtherComp, bool K2Node_Event_bSelfMoved, const struct FVector& K2Node_Event_HitLocation, const struct FVector& K2Node_Event_HitNormal, const struct FVector& K2Node_Event_NormalImpulse, struct FHitResult& K2Node_Event_Hit, bool CallFunc_EqualEqual_VectorVector_ReturnValue, bool CallFunc_EqualEqual_VectorVector_ReturnValue_1, const struct FVector& CallFunc_GetComponentVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_LessEqual_FloatFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, const struct FVector& CallFunc_MakeVector_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue, bool CallFunc_DoesSocketExist_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, float K2Node_Event_Damage_2, struct FGameplayTagContainer& K2Node_Event_DamageTags_2, const struct FVector& K2Node_Event_Momentum_2, struct FHitResult& K2Node_Event_HitInfo_2, class AFortPawn* K2Node_Event_InstigatedBy_2, class AActor* K2Node_Event_DamageCauser_2, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_2, float K2Node_Event_Damage_1, struct FGameplayTagContainer& K2Node_Event_DamageTags_1, const struct FVector& K2Node_Event_Momentum_1, struct FHitResult& K2Node_Event_HitInfo_1, class AFortPawn* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_GetBuildingHealthPercentage_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_2, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, EEndPlayReason K2Node_Event_EndPlayReason, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_HasHealthLeft_ReturnValue, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, class APawn* CallFunc_K2_GetPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& K2Node_Select_Default, const struct FVector& Temp_struct_Variable, struct FFortBounceData& K2Node_Event_Data, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, float CallFunc_BreakColor_R_1, float CallFunc_BreakColor_G_1, float CallFunc_BreakColor_B_1, float CallFunc_BreakColor_A_1, float CallFunc_BreakColor_R_2, float CallFunc_BreakColor_G_2, float CallFunc_BreakColor_B_2, float CallFunc_BreakColor_A_2, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue_2, float CallFunc_BreakColor_R_3, float CallFunc_BreakColor_G_3, float CallFunc_BreakColor_B_3, float CallFunc_BreakColor_A_3, float CallFunc_BreakColor_R_4, float CallFunc_BreakColor_G_4, float CallFunc_BreakColor_B_4, float CallFunc_BreakColor_A_4, const struct FVector& CallFunc_MakeVector_ReturnValue_3, const struct FVector& CallFunc_MakeVector_ReturnValue_4, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, float CallFunc_BreakColor_R_5, float CallFunc_BreakColor_G_5, float CallFunc_BreakColor_B_5, float CallFunc_BreakColor_A_5, float CallFunc_BreakColor_R_6, float CallFunc_BreakColor_G_6, float CallFunc_BreakColor_B_6, float CallFunc_BreakColor_A_6, const struct FVector& CallFunc_MakeVector_ReturnValue_5, const struct FVector& CallFunc_MakeVector_ReturnValue_6, float CallFunc_BreakColor_R_7, float CallFunc_BreakColor_G_7, float CallFunc_BreakColor_B_7, float CallFunc_BreakColor_A_7, float CallFunc_BreakColor_R_8, float CallFunc_BreakColor_G_8, float CallFunc_BreakColor_B_8, float CallFunc_BreakColor_A_8, const struct FVector& CallFunc_MakeVector_ReturnValue_7, const struct FVector& CallFunc_MakeVector_ReturnValue_8, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, float CallFunc_VSize_ReturnValue, float CallFunc_VSize_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, float CallFunc_FClamp_ReturnValue, float CallFunc_FClamp_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_SelectFloat_ReturnValue, float CallFunc_SelectFloat_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_4, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_5, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool Temp_bool_Variable_1, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, const struct FVector& K2Node_Select_Default_1, float CallFunc_VSize_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_3, float CallFunc_FClamp_ReturnValue_2, float CallFunc_VSize_ReturnValue_3, float CallFunc_Subtract_FloatFloat_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue_3, float CallFunc_SelectFloat_ReturnValue_2, float CallFunc_FClamp_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_6, float CallFunc_Subtract_FloatFloat_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_7, float CallFunc_SelectFloat_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_8, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_9, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_10, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_11, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_12, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_4, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_5, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult_1, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_13, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_6, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_7, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult_3, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_2, ESubGame CallFunc_GetSubGame_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_4, float CallFunc_RandomFloatInRange_ReturnValue, EFortDayPhase K2Node_Event_CurrentDayPhase, EFortDayPhase K2Node_Event_PreviousDayPhase, bool K2Node_Event_bAtCreation, float CallFunc_RandomFloatInRange_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue_2, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, float CallFunc_Conv_BoolToFloat_ReturnValue, float CallFunc_RandomFloat_ReturnValue, bool CallFunc_RandomBool_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_SelectFloat_ReturnValue_4, const struct FVector& CallFunc_MakeVector_ReturnValue_9, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue_2, const struct FRotator& CallFunc_MakeRotator_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_2, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_3, bool CallFunc_DoesSocketExist_ReturnValue_1, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_3, const struct FVector& CallFunc_InverseTransformLocation_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_8, const struct FVector& CallFunc_TransformLocation_ReturnValue, class UDecalComponent* CallFunc_SpawnDecalAtLocation_ReturnValue);
	void OnDayPhaseChanged(EFortDayPhase CurrentDayPhase, EFortDayPhase PreviousDayPhase, bool bAtCreation);
	void Player_jump_based_bounce_();
	void Hit_Bounce_Finished();
	void OnBounceAnimationUpdate(struct FFortBounceData& Data);
	void FireOffCarAlarm();
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void TriggerLowHealthParticleEffect();
	void FadeSirenLight();
	void StartSirenLight();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void Timeline_2__FireOffNoise__EventFunc();
	void Timeline_2__UpdateFunc();
	void Timeline_2__FinishedFunc();
	void BounceCar__UpdateFunc();
	void BounceCar__FinishedFunc();
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript(const TArray<class FName>& ParametersToLerp, class FName Wind_offset_1, class FName Wind_1_Random_Rotation_Influence, class FName Max_Rotation_1, class FName Wind_1_Random_Rotation_Change_Rate, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_construct_ValidateLightsOnVars_doesHaveLights, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue, bool CallFunc_DoesSocketExist_ReturnValue, bool CallFunc_DoesSocketExist_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, TArray<class UMaterialInterface*>& CallFunc_GetIntenseWindMaterialsForPreview_Materials, bool CallFunc_GetIntenseWindMaterialsForPreview_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable_1, class FName CallFunc_Array_Get_Item, class UCurveLinearColor* CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue, bool CallFunc_IsValid_ReturnValue, const class FString& CallFunc_GetDisplayName_ReturnValue, class UCurveLinearColor* CallFunc_GetWindSpeedCurveForPreview_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_1, TArray<class FName>& K2Node_MakeArray_Array, class UMaterialInterface* CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue_1, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, struct FTransform& Temp_struct_Variable, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, class UStaticMeshComponent* CallFunc_AddComponent_ReturnValue, class UMaterialInterface* CallFunc_Array_Get_Item_2, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, float CallFunc_K2_GetScalarParameterValue_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FLinearColor& CallFunc_MakeColor_ReturnValue, class UCurveLinearColor* CallFunc_GetWindPannerSpeedCurveForPreview_ReturnValue_1, class UCurveLinearColor* CallFunc_GetWindSpeedCurveForPreview_ReturnValue_1, const struct FLinearColor& CallFunc_GetLinearColorValue_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, const struct FLinearColor& CallFunc_GetLinearColorValue_ReturnValue_1, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_2, float CallFunc_BreakColor_R_1, float CallFunc_BreakColor_G_1, float CallFunc_BreakColor_B_1, float CallFunc_BreakColor_A_1, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue_1, class UMaterialInterface* CallFunc_Array_Get_Item_3, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_2, float CallFunc_K2_GetScalarParameterValue_ReturnValue_1, float CallFunc_Lerp_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_3, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_1, class USpotLightComponent* CallFunc_AddComponent_ReturnValue_1, class USpotLightComponent* CallFunc_AddComponent_ReturnValue_2, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_2, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_3, class USpotLightComponent* CallFunc_AddComponent_ReturnValue_3, class USpotLightComponent* CallFunc_AddComponent_ReturnValue_4, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_4, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_5, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_6, const struct FTransform& CallFunc_GetSocketTransform_ReturnValue_7, const struct FVector& CallFunc_BreakTransform_Location_2, const struct FRotator& CallFunc_BreakTransform_Rotation_2, const struct FVector& CallFunc_BreakTransform_Scale_2, const struct FVector& CallFunc_BreakTransform_Location_3, const struct FRotator& CallFunc_BreakTransform_Rotation_3, const struct FVector& CallFunc_BreakTransform_Scale_3, bool CallFunc_DoesSocketExist_ReturnValue_2, bool CallFunc_DoesSocketExist_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1);
	void StopCarAlarmFromPlaying();
	void Setcanmakebouncingnoisetrue();
	float SetCarAlarmEnabledBasedOnLocation(const struct FVector& Location, bool* NewParam, float Random_Value_5_59614, const struct FVector& CallFunc_Add_VectorFloat_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, int32 CallFunc_FCeil_ReturnValue, int32 CallFunc_FCeil_ReturnValue_1, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue_2, float CallFunc_MaterialEditorSine_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_3, float CallFunc_MaterialEditorSine_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_3, float CallFunc_Add_FloatFloat_ReturnValue_4, float CallFunc_MaterialEditorSine_ReturnValue_2, float CallFunc_Multiply_FloatFloat_ReturnValue_4, float CallFunc_Multiply_FloatFloat_ReturnValue_5, float CallFunc_Fraction_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	float MaterialEditorSine(float Look_up_value, float Period, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_DegSin_ReturnValue);
	void Set_Light_Brightness(float ZeroMinus1_Intensity, bool Include_Second_Emissive_Channel, bool Force, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_NearlyEqual_FloatFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FLinearColor& Temp_struct_Variable, bool CallFunc_IsValid_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, int32 Temp_int_Array_Index_Variable, float CallFunc_Multiply_FloatFloat_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_FClamp_ReturnValue, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, bool CallFunc_Greater_FloatFloat_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue_4, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, float CallFunc_BreakColor_R_1, float CallFunc_BreakColor_G_1, float CallFunc_BreakColor_B_1, float CallFunc_BreakColor_A_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue, const struct FLinearColor& CallFunc_Conv_VectorToLinearColor_ReturnValue_1, const struct FLinearColor& K2Node_Select_Default);
	void Randomize_the_target_brightness_levels(float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_Multiply_FloatFloat_ReturnValue_3, float CallFunc_RandomFloatInRange_ReturnValue);
	void Toggle_light_visibility(bool bNewVisibility, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);
	void PlayJumpOnCarSound(const struct FVector& Location, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void GetCarMatsForLights(TArray<class UMaterialInstanceDynamic*>* OutMaterials, const TArray<class UMaterialInstanceDynamic*>& L_finalOutput, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue, class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, TArray<class FName>& CallFunc_GetMaterialSlotNames_ReturnValue, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Add_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Contains_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue);
	void GenerateMeshMIDs(class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue, int32 CallFunc_GetNumMaterials_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, int32 CallFunc_Array_Add_ReturnValue, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_2, class UStaticMeshComponent* CallFunc_GetBuildingMeshComponent_ReturnValue_3, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, TArray<class FName>& CallFunc_GetMaterialSlotNames_ReturnValue, int32 CallFunc_Array_Add_ReturnValue_1, class FName CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Contains_ReturnValue);
	void ValidateLightVisibility(EFortDayPhase L_validatedTimeOfDay, float Temp_float_Variable, float Temp_float_Variable_1, float Temp_float_Variable_2, float Temp_float_Variable_3, bool Temp_bool_Variable, EFortDayPhase Temp_byte_Variable, int32 Temp_int_Array_Index_Variable, EFortDayPhase Temp_byte_Variable_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, float K2Node_Select_Default, bool K2Node_SwitchEnum_CmpSuccess, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, EFortDayPhase CallFunc_GetCurrentDayPhase_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, EFortDayPhase K2Node_Select_Default_1);
	void Construct_ValidateLightsOnVars(bool* DoesHaveLights, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_SetCarAlarmEnabledBasedOnLocation_NewParam, float CallFunc_SetCarAlarmEnabledBasedOnLocation_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);
	void Construct_Clean_Up_Lights(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Car_DEFAULT_C">();
	}
	static class ACar_DEFAULT_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACar_DEFAULT_C>();
	}
};
static_assert(alignof(ACar_DEFAULT_C) == 0x000008, "Wrong alinment on ACar_DEFAULT_C");
static_assert(sizeof(ACar_DEFAULT_C) == 0x000D98, "Wrong size on ACar_DEFAULT_C");
static_assert(offsetof(ACar_DEFAULT_C, UberGraphFrame) == 0x000BA8, "Member 'ACar_DEFAULT_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF) == 0x000BB0, "Member 'ACar_DEFAULT_C::Timeline_2_SirenLightMultiplier_432AD11E41A8AFC288A559BCD8B4B9AF' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF) == 0x000BB4, "Member 'ACar_DEFAULT_C::Timeline_2__Direction_432AD11E41A8AFC288A559BCD8B4B9AF' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_2) == 0x000BB8, "Member 'ACar_DEFAULT_C::Timeline_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983) == 0x000BC0, "Member 'ACar_DEFAULT_C::BounceCar_Vertical_Bounce_Component_80AD679E42DD1FF308EBD994998BB983' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983) == 0x000BC4, "Member 'ACar_DEFAULT_C::BounceCar__Direction_80AD679E42DD1FF308EBD994998BB983' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, BounceCar) == 0x000BC8, "Member 'ACar_DEFAULT_C::BounceCar' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7) == 0x000BD0, "Member 'ACar_DEFAULT_C::Timeline_0_AlarmLightMultiplier_431FAFC04FFC4DEBB684B3B6AF7510E7' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7) == 0x000BD4, "Member 'ACar_DEFAULT_C::Timeline_0__Direction_431FAFC04FFC4DEBB684B3B6AF7510E7' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Timeline_0) == 0x000BD8, "Member 'ACar_DEFAULT_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OverallAlarmCycleFinished) == 0x000BE0, "Member 'ACar_DEFAULT_C::OverallAlarmCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, InitialEmissiveMultiplier) == 0x000BE4, "Member 'ACar_DEFAULT_C::InitialEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, InitialEmissiveMultiplier2) == 0x000BF4, "Member 'ACar_DEFAULT_C::InitialEmissiveMultiplier2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AlarmLightCounter) == 0x000C04, "Member 'ACar_DEFAULT_C::AlarmLightCounter' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SoundIsRetriggerable) == 0x000C08, "Member 'ACar_DEFAULT_C::SoundIsRetriggerable' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CurrentFlashAnimationCycleFinished) == 0x000C09, "Member 'ACar_DEFAULT_C::CurrentFlashAnimationCycleFinished' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, NumberOfTimesTheLightsFlashWhenHit) == 0x000C0C, "Member 'ACar_DEFAULT_C::NumberOfTimesTheLightsFlashWhenHit' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SirenLightEmissiveMultiplier) == 0x000C10, "Member 'ACar_DEFAULT_C::SirenLightEmissiveMultiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SirenLightOn) == 0x000C14, "Member 'ACar_DEFAULT_C::SirenLightOn' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Emissive_Multiplier_2) == 0x000C18, "Member 'ACar_DEFAULT_C::Emissive_Multiplier_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Emissive_Multiplier) == 0x000C20, "Member 'ACar_DEFAULT_C::Emissive_Multiplier' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_HitAlarm) == 0x000C28, "Member 'ACar_DEFAULT_C::Sound_Minus_HitAlarm' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Use_Emissive_2) == 0x000C30, "Member 'ACar_DEFAULT_C::Use_Emissive_2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_Jump_on_Car) == 0x000C38, "Member 'ACar_DEFAULT_C::Sound_Minus_Jump_on_Car' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, SuspensionMovementAmount) == 0x000C40, "Member 'ACar_DEFAULT_C::SuspensionMovementAmount' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, ParticleEffectHas_NOT_AlreadyBeenTriggered) == 0x000C44, "Member 'ACar_DEFAULT_C::ParticleEffectHas_NOT_AlreadyBeenTriggered' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, EngineSteamParticleEffect) == 0x000C48, "Member 'ACar_DEFAULT_C::EngineSteamParticleEffect' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Sound_Minus_Hit_AutoBody) == 0x000C50, "Member 'ACar_DEFAULT_C::Sound_Minus_Hit_AutoBody' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CanMakeJumpingNoiseAgain) == 0x000C58, "Member 'ACar_DEFAULT_C::CanMakeJumpingNoiseAgain' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CarAlarmIsCurrentlyMakingNoise) == 0x000C59, "Member 'ACar_DEFAULT_C::CarAlarmIsCurrentlyMakingNoise' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CarAlarmEnabled) == 0x000C5A, "Member 'ACar_DEFAULT_C::CarAlarmEnabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, RandomlyDisableSomeCarAlarms) == 0x000C5B, "Member 'ACar_DEFAULT_C::RandomlyDisableSomeCarAlarms' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, PercentageChanceOfCarAlarmsBeingDisabled) == 0x000C5C, "Member 'ACar_DEFAULT_C::PercentageChanceOfCarAlarmsBeingDisabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight1) == 0x000C60, "Member 'ACar_DEFAULT_C::HLight1' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight1SocketLocation) == 0x000C68, "Member 'ACar_DEFAULT_C::HLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight2SocketLocation) == 0x000C74, "Member 'ACar_DEFAULT_C::HLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AnimatingMIDArray) == 0x000C80, "Member 'ACar_DEFAULT_C::AnimatingMIDArray' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, AudibleAlarmSound) == 0x000C90, "Member 'ACar_DEFAULT_C::AudibleAlarmSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, UseCarBounce) == 0x000C98, "Member 'ACar_DEFAULT_C::UseCarBounce' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, UseCarAlarm) == 0x000C99, "Member 'ACar_DEFAULT_C::UseCarAlarm' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Headlight_Emissive_Brightness) == 0x000C9C, "Member 'ACar_DEFAULT_C::Headlight_Emissive_Brightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, IsCarAlarmEnabledInitialized) == 0x000CA0, "Member 'ACar_DEFAULT_C::IsCarAlarmEnabledInitialized' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, DebugWind) == 0x000CA1, "Member 'ACar_DEFAULT_C::DebugWind' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OriginalMaterials) == 0x000CA8, "Member 'ACar_DEFAULT_C::OriginalMaterials' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, IntenseWindMaterialsForPreview) == 0x000CB8, "Member 'ACar_DEFAULT_C::IntenseWindMaterialsForPreview' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Debug_TempMaterial) == 0x000CC8, "Member 'ACar_DEFAULT_C::Debug_TempMaterial' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Debug_Wind_Intensity) == 0x000CD0, "Member 'ACar_DEFAULT_C::Debug_Wind_Intensity' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Wind_Intensity_Debug_Mesh) == 0x000CD8, "Member 'ACar_DEFAULT_C::Wind_Intensity_Debug_Mesh' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CanDropOilDecal) == 0x000CE0, "Member 'ACar_DEFAULT_C::CanDropOilDecal' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Wind_Yaw_Rotation) == 0x000CE4, "Member 'ACar_DEFAULT_C::Wind_Yaw_Rotation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Taillight1) == 0x000CE8, "Member 'ACar_DEFAULT_C::Taillight1' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Taillight2) == 0x000CF0, "Member 'ACar_DEFAULT_C::Taillight2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TailLightBrightness) == 0x000CF8, "Member 'ACar_DEFAULT_C::TailLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TailLightsExist) == 0x000CFC, "Member 'ACar_DEFAULT_C::TailLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HeadLightsExist) == 0x000CFD, "Member 'ACar_DEFAULT_C::HeadLightsExist' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HLight2) == 0x000D00, "Member 'ACar_DEFAULT_C::HLight2' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, HeadLightLightBrightness) == 0x000D08, "Member 'ACar_DEFAULT_C::HeadLightLightBrightness' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TLight1SocketLocation) == 0x000D0C, "Member 'ACar_DEFAULT_C::TLight1SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TLight2SocketLocation) == 0x000D18, "Member 'ACar_DEFAULT_C::TLight2SocketLocation' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Bounce_Offset) == 0x000D24, "Member 'ACar_DEFAULT_C::Bounce_Offset' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Hlight2_Minus_impact_bounce_light_location) == 0x000D30, "Member 'ACar_DEFAULT_C::Hlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Tlight2_Minus_impact_bounce_light_location) == 0x000D3C, "Member 'ACar_DEFAULT_C::Tlight2_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Car_Currently_Bouncing_From_Jump) == 0x000D48, "Member 'ACar_DEFAULT_C::Car_Currently_Bouncing_From_Jump' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Hlight1_Minus_impact_bounce_light_location) == 0x000D4C, "Member 'ACar_DEFAULT_C::Hlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Tlight1_Minus_impact_bounce_light_location) == 0x000D58, "Member 'ACar_DEFAULT_C::Tlight1_Minus_impact_bounce_light_location' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Randomly_start_with_some_cars_lights_on) == 0x000D64, "Member 'ACar_DEFAULT_C::Randomly_start_with_some_cars_lights_on' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Percentage_chance_of_lights_being_left_off) == 0x000D68, "Member 'ACar_DEFAULT_C::Percentage_chance_of_lights_being_left_off' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, Final_Random_Light_Intensity_Variance) == 0x000D6C, "Member 'ACar_DEFAULT_C::Final_Random_Light_Intensity_Variance' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, This_Car_s_Lights_Have_Been_Enabled) == 0x000D70, "Member 'ACar_DEFAULT_C::This_Car_s_Lights_Have_Been_Enabled' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TurnHeadLightsOn) == 0x000D71, "Member 'ACar_DEFAULT_C::TurnHeadLightsOn' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, TimeSinceLastJumpSound) == 0x000D74, "Member 'ACar_DEFAULT_C::TimeSinceLastJumpSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, MinTimeBetweenJumpSound) == 0x000D78, "Member 'ACar_DEFAULT_C::MinTimeBetweenJumpSound' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, OnPlayDeathEffects) == 0x000D80, "Member 'ACar_DEFAULT_C::OnPlayDeathEffects' has a wrong offset!");
static_assert(offsetof(ACar_DEFAULT_C, CurrentLightRuntimeIntensity) == 0x000D90, "Member 'ACar_DEFAULT_C::CurrentLightRuntimeIntensity' has a wrong offset!");

}

