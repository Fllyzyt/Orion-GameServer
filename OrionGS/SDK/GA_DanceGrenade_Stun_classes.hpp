#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DanceGrenade_Stun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_DanceGrenade_Stun.GA_DanceGrenade_Stun_C
// 0x0020 (0x0AD8 - 0x0AB8)
class UGA_DanceGrenade_Stun_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           AnimMontage;                                       // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldUseSharedAnim;                               // 0x0AC8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6293[0x3];                                     // 0x0AC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   DanceGrenadeHolsterId;                             // 0x0ACC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSkydiving;                                       // 0x0AD4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_GA_DanceGrenade_Stun(int32 EntryPoint, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UFortAbilitySystemComponent* K2Node_DynamicCast_AsFort_Ability_System_Component, bool K2Node_DynamicCast_bSuccess_1, bool K2Node_Event_bWasCancelled, bool CallFunc_K2_CommitAbility_ReturnValue, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue_1, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn_1, bool K2Node_DynamicCast_bSuccess_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue, const struct FGameplayAbilityTargetDataHandle& CallFunc_AbilityTargetDataFromActor_ReturnValue, TArray<struct FActiveGameplayEffectHandle>& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_4, float CallFunc_PlayAnimMontage_ReturnValue, bool CallFunc_IsSkydiving_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, class UFortAbilitySystemComponent* K2Node_DynamicCast_AsFort_Ability_System_Component_1, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_IsValid_ReturnValue_1, class AFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess_6);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_DanceGrenade_Stun_C">();
	}
	static class UGA_DanceGrenade_Stun_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_DanceGrenade_Stun_C>();
	}
};
static_assert(alignof(UGA_DanceGrenade_Stun_C) == 0x000008, "Wrong alinment on UGA_DanceGrenade_Stun_C");
static_assert(sizeof(UGA_DanceGrenade_Stun_C) == 0x000AD8, "Wrong size on UGA_DanceGrenade_Stun_C");
static_assert(offsetof(UGA_DanceGrenade_Stun_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_DanceGrenade_Stun_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_DanceGrenade_Stun_C, AnimMontage) == 0x000AC0, "Member 'UGA_DanceGrenade_Stun_C::AnimMontage' has a wrong offset!");
static_assert(offsetof(UGA_DanceGrenade_Stun_C, ShouldUseSharedAnim) == 0x000AC8, "Member 'UGA_DanceGrenade_Stun_C::ShouldUseSharedAnim' has a wrong offset!");
static_assert(offsetof(UGA_DanceGrenade_Stun_C, DanceGrenadeHolsterId) == 0x000ACC, "Member 'UGA_DanceGrenade_Stun_C::DanceGrenadeHolsterId' has a wrong offset!");
static_assert(offsetof(UGA_DanceGrenade_Stun_C, IsSkydiving) == 0x000AD4, "Member 'UGA_DanceGrenade_Stun_C::IsSkydiving' has a wrong offset!");

}

