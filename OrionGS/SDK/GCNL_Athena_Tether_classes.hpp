#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GCNL_Athena_Tether

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GCNL_Athena_Tether.GCNL_Athena_Tether_C
// 0x0078 (0x0838 - 0x07C0)
class AGCNL_Athena_Tether_C final  : public AFortGameplayCueNotify_Loop
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortLayeredAudioComponent*             FortLayeredAudio;                                  // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      LandFX;                                            // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      WaterFX;                                           // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightSki;                                          // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftSki;                                           // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleInSkis_SkiScalar_93783D4A4F91BF9F887B16977978DDB4; // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ScaleInSkis__Direction_93783D4A4F91BF9F887B16977978DDB4; // 0x07F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D88[0x3];                                     // 0x07F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ScaleInSkis;                                       // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        OwningFPP;                                         // 0x0800(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInWater;                                         // 0x0808(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D89[0x3];                                     // 0x0809(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NormalizedSpeed;                                   // 0x080C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TurnSpeed;                                         // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D8A[0x4];                                     // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEmitterCameraLensEffectBase*           CameraLensEffect;                                  // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceFeedbackIntensity;                            // 0x0820(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D8B[0x4];                                     // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           ScaleInSkisTimerHandle;                            // 0x0828(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SkiScaleInDelay;                                   // 0x0830(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GCNL_Athena_Tether(int32 EntryPoint, float CallFunc_FClamp_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetForwardVector_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_4, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, EDynamicForceFeedbackAction Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue_5, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, float K2Node_Event_DeltaSeconds, class AActor* K2Node_Event_MyTarget_1, struct FGameplayCueParameters& K2Node_Event_Parameters_1, TArray<class UParticleSystemComponent*>& K2Node_Event_ParticleComponents_1, TArray<class UAudioComponent*>& K2Node_Event_AudioComponents_1, class UMatineeCameraShake* K2Node_Event_BurstCameraShakeInstance_1, class ADecalActor* K2Node_Event_BurstDecalInstance_1, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult, uint8 CallFunc_MakeLiteralByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, class AActor* K2Node_Event_MyTarget, struct FGameplayCueParameters& K2Node_Event_Parameters, TArray<class UParticleSystemComponent*>& K2Node_Event_ParticleComponents, TArray<class UAudioComponent*>& K2Node_Event_AudioComponents, class UMatineeCameraShake* K2Node_Event_BurstCameraShakeInstance, class ADecalActor* K2Node_Event_BurstDecalInstance, const struct FVector& CallFunc_GetForwardVector_ReturnValue_1, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, const struct FHitResult& CallFunc_K2_SetRelativeRotation_SweepHitResult_1, class UAudioComponent* K2Node_ComponentBoundEvent_AudioComponent, class FName K2Node_ComponentBoundEvent_ParameterName, int32 K2Node_ComponentBoundEvent_OneshotIndex, int32 CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue, bool CallFunc_K2_AttachToComponent_ReturnValue_1, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1, class AActor* CallFunc_GetViewTarget_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, class ANPC_Pawn_Wildlife_Parent_C* K2Node_DynamicCast_AsNPC_Pawn_Wildlife_Parent, bool K2Node_DynamicCast_bSuccess, float CallFunc_Dot_VectorVector_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, class AEmitterCameraLensEffectBase* CallFunc_AddCameraLensEffect_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, float CallFunc_Abs_ReturnValue, float CallFunc_FClamp_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_3, const struct FVector& CallFunc_GetVelocity_ReturnValue_1, class AFortWaterBodyActor* CallFunc_GetCurrentWaterBody_ReturnValue, float CallFunc_VSize_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_Greater_FloatFloat_ReturnValue_1, class UObject* K2Node_CustomEvent_Object, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_SetCommonWaterFXParams_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_EqualEqual_ByteByte_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue);
	void ScaleInSkisForPlayer();
	void ReceiveBeginPlay();
	void InitializeTetherGCNL(class UObject* Object);
	void StopFF();
	void UpdateFF();
	void StartFF();
	void BndEvt__FortLayeredAudio_K2Node_ComponentBoundEvent_0_OnLayeredAudioComponentOneshot__DelegateSignature(class UAudioComponent* AudioComponent, class FName ParameterName, int32 OneshotIndex);
	void OnRemoval(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void OnApplication(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, TArray<class UParticleSystemComponent*>& ParticleComponents, TArray<class UAudioComponent*>& AudioComponents, class UMatineeCameraShake* BurstCameraShakeInstance, class ADecalActor* BurstDecalInstance);
	void ReceiveTick(float DeltaSeconds);
	void ScaleInSkis__UpdateFunc();
	void ScaleInSkis__FinishedFunc();
	void UpdateAudio(int32 Surface, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue);
	bool WhileActive(class AActor* MyTarget, struct FGameplayCueParameters& Parameters);
	bool OnRemove(class AActor* MyTarget, struct FGameplayCueParameters& Parameters, bool CallFunc_K2_IsValidTimerHandle_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GCNL_Athena_Tether_C">();
	}
	static class AGCNL_Athena_Tether_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGCNL_Athena_Tether_C>();
	}
};
static_assert(alignof(AGCNL_Athena_Tether_C) == 0x000008, "Wrong alinment on AGCNL_Athena_Tether_C");
static_assert(sizeof(AGCNL_Athena_Tether_C) == 0x000838, "Wrong size on AGCNL_Athena_Tether_C");
static_assert(offsetof(AGCNL_Athena_Tether_C, UberGraphFrame) == 0x0007C0, "Member 'AGCNL_Athena_Tether_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, FortLayeredAudio) == 0x0007C8, "Member 'AGCNL_Athena_Tether_C::FortLayeredAudio' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, LandFX) == 0x0007D0, "Member 'AGCNL_Athena_Tether_C::LandFX' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, WaterFX) == 0x0007D8, "Member 'AGCNL_Athena_Tether_C::WaterFX' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, RightSki) == 0x0007E0, "Member 'AGCNL_Athena_Tether_C::RightSki' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, LeftSki) == 0x0007E8, "Member 'AGCNL_Athena_Tether_C::LeftSki' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, ScaleInSkis_SkiScalar_93783D4A4F91BF9F887B16977978DDB4) == 0x0007F0, "Member 'AGCNL_Athena_Tether_C::ScaleInSkis_SkiScalar_93783D4A4F91BF9F887B16977978DDB4' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, ScaleInSkis__Direction_93783D4A4F91BF9F887B16977978DDB4) == 0x0007F4, "Member 'AGCNL_Athena_Tether_C::ScaleInSkis__Direction_93783D4A4F91BF9F887B16977978DDB4' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, ScaleInSkis) == 0x0007F8, "Member 'AGCNL_Athena_Tether_C::ScaleInSkis' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, OwningFPP) == 0x000800, "Member 'AGCNL_Athena_Tether_C::OwningFPP' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, IsInWater) == 0x000808, "Member 'AGCNL_Athena_Tether_C::IsInWater' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, NormalizedSpeed) == 0x00080C, "Member 'AGCNL_Athena_Tether_C::NormalizedSpeed' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, TurnSpeed) == 0x000810, "Member 'AGCNL_Athena_Tether_C::TurnSpeed' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, CameraLensEffect) == 0x000818, "Member 'AGCNL_Athena_Tether_C::CameraLensEffect' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, ForceFeedbackIntensity) == 0x000820, "Member 'AGCNL_Athena_Tether_C::ForceFeedbackIntensity' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, ScaleInSkisTimerHandle) == 0x000828, "Member 'AGCNL_Athena_Tether_C::ScaleInSkisTimerHandle' has a wrong offset!");
static_assert(offsetof(AGCNL_Athena_Tether_C, SkiScaleInDelay) == 0x000830, "Member 'AGCNL_Athena_Tether_C::SkiScaleInDelay' has a wrong offset!");

}

