#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameplayMessages

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK
{

// Enum GameplayMessages.EGameplayMessageMatchType
// NumValues: 0x0003
enum class EGameplayMessageMatchType : uint8
{
	ExactMatch                               = 0,
	PartialMatch                             = 1,
	EGameplayMessageMatchType_MAX            = 2,
};

// ScriptStruct GameplayMessages.ReplicatedMessage
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FReplicatedMessage final 
{
public:
	uint8                                         Pad_4ED8[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FReplicatedMessage) == 0x000008, "Wrong alinment on FReplicatedMessage");
static_assert(sizeof(FReplicatedMessage) == 0x000010, "Wrong size on FReplicatedMessage");

// ScriptStruct GameplayMessages.ReplicatedMessageData
// 0x0018 (0x0018 - 0x0000)
struct FReplicatedMessageData final 
{
public:
	class UScriptStruct*                          StructType;                                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4ED9[0x10];                                    // 0x0008(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FReplicatedMessageData) == 0x000008, "Wrong alinment on FReplicatedMessageData");
static_assert(sizeof(FReplicatedMessageData) == 0x000018, "Wrong size on FReplicatedMessageData");
static_assert(offsetof(FReplicatedMessageData, StructType) == 0x000000, "Member 'FReplicatedMessageData::StructType' has a wrong offset!");

// ScriptStruct GameplayMessages.GameplayMessageReceiverData
// 0x0060 (0x0060 - 0x0000)
struct alignas(0x10) FGameplayMessageReceiverData final 
{
public:
	uint8                                         Pad_4EDA[0x48];                                    // 0x0000(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UScriptStruct*                          ReceiverStructType;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4EDB[0x10];                                    // 0x0050(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGameplayMessageReceiverData) == 0x000010, "Wrong alinment on FGameplayMessageReceiverData");
static_assert(sizeof(FGameplayMessageReceiverData) == 0x000060, "Wrong size on FGameplayMessageReceiverData");
static_assert(offsetof(FGameplayMessageReceiverData, ReceiverStructType) == 0x000048, "Member 'FGameplayMessageReceiverData::ReceiverStructType' has a wrong offset!");

// ScriptStruct GameplayMessages.EventMessageTag
// 0x0000 (0x0008 - 0x0008)
struct FEventMessageTag final  : public FGameplayTag
{
};
static_assert(alignof(FEventMessageTag) == 0x000004, "Wrong alinment on FEventMessageTag");
static_assert(sizeof(FEventMessageTag) == 0x000008, "Wrong size on FEventMessageTag");

// ScriptStruct GameplayMessages.GameplayMessageReceiverHandle
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FGameplayMessageReceiverHandle final 
{
public:
	TWeakObjectPtr<class UGameplayMessageRouter>  Subsystem;                                         // 0x0000(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FEventMessageTag                       Channel;                                           // 0x0008(0x0008)(Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int32                                         ID;                                                // 0x0010(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4EDC[0xC];                                     // 0x0014(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FGameplayMessageReceiverHandle) == 0x000008, "Wrong alinment on FGameplayMessageReceiverHandle");
static_assert(sizeof(FGameplayMessageReceiverHandle) == 0x000020, "Wrong size on FGameplayMessageReceiverHandle");
static_assert(offsetof(FGameplayMessageReceiverHandle, Subsystem) == 0x000000, "Member 'FGameplayMessageReceiverHandle::Subsystem' has a wrong offset!");
static_assert(offsetof(FGameplayMessageReceiverHandle, Channel) == 0x000008, "Member 'FGameplayMessageReceiverHandle::Channel' has a wrong offset!");
static_assert(offsetof(FGameplayMessageReceiverHandle, ID) == 0x000010, "Member 'FGameplayMessageReceiverHandle::ID' has a wrong offset!");

}

