#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_HeldObject_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Enum_HeldObject_GenericWeights_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_HeldObject_Parent.BGA_HeldObject_Parent_C
// 0x01E0 (0x09B0 - 0x07D0)
class ABGA_HeldObject_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortWaterInteractionComponent*         FortWaterInteraction;                              // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortHeldObjectComponent*               FortHeldObject;                                    // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortProjectileMovementComponent*       FortProjectileMovement;                            // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         RepStartMoving;                                    // 0x0800(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FGameplayTag                           GC_HitPlayer;                                      // 0x0804(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_HitWorld;                                       // 0x080C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Throw;                                          // 0x0814(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_EnterWater;                                     // 0x081C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Pickup;                                         // 0x0824(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Death;                                          // 0x082C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayDeathGC;                                       // 0x0834(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RepHideActor;                                      // 0x0835(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor, AdvancedDisplay)
	bool                                          SetHideActorOnDeath;                               // 0x0836(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsDestructable;                                    // 0x0837(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           GC_GenericDeath;                                   // 0x0838(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         WorldStopSlop;                                     // 0x0840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttachToWallsAndCeilings;                          // 0x0844(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CCE[0x3];                                     // 0x0845(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<ELinkToDirection, struct FVector>        Map_DirectionToRelativeVector;                     // 0x0848(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, AdvancedDisplay)
	ELinkToDirection                              DirectionToAttach;                                 // 0x0898(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_6CCF[0x7];                                     // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 EmptyAttachLinkActor;                              // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_6CD0[0x8];                                     // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             AttachRelativeTrans;                               // 0x08B0(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, AdvancedDisplay)
	struct FTransform                             AttachTransform;                                   // 0x08E0(0x0030)(Edit, BlueprintVisible, Net, DisableEditOnInstance, SaveGame, IsPlainOldData, RepNotify, NoDestructor)
	class FText                                   FirstInteractString;                               // 0x0910(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   SecondInteractString;                              // 0x0928(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SecondInteractTime;                                // 0x0940(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FirstInteractTime;                                 // 0x0944(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EverBeenThrownPlaced;                              // 0x0948(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          AutoEnableInteractionsOnStop;                      // 0x0949(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AlreadySavedDefaultTransform;                      // 0x094A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, AdvancedDisplay)
	Enum_HeldObject_GenericWeights                ObjectWeights;                                     // 0x094B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StopOnFlatSurface;                                 // 0x094C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CD1[0x3];                                     // 0x094D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  ThrownQuestCreditTargetTag;                        // 0x0950(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FGameplayTagContainer                  TC_BlockPickup;                                    // 0x0970(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         Hit_Velocity_Threshold;                            // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldKillWhenSpawningUnderwater;                  // 0x0994(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6CD2[0x3];                                     // 0x0995(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponentToAttachTo;                            // 0x0998(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CapsuleDefaultCollisionResponseToPawn;             // 0x09A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RestoreDefaultPawnCollisionOnInteract;             // 0x09A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAttachedToVehicle;                               // 0x09A2(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_6CD3[0x5];                                     // 0x09A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 VehicleAttached;                                   // 0x09A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_HeldObject_Parent(int32 EntryPoint, struct FHitResult& K2Node_ComponentBoundEvent_ImpactResult_1, struct FVector& K2Node_ComponentBoundEvent_ImpactVelocity, class AFortWaterBodyActor* K2Node_ComponentBoundEvent_WaterBody, class UFortWaterInteractionComponent* K2Node_ComponentBoundEvent_WaterInteractionComponent, bool K2Node_ComponentBoundEvent_bIsFirstBody, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_BreakHitResult_bBlockingHit_1, bool CallFunc_BreakHitResult_bInitialOverlap_1, float CallFunc_BreakHitResult_Time_1, float CallFunc_BreakHitResult_Distance_1, const struct FVector& CallFunc_BreakHitResult_Location_1, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_1, const struct FVector& CallFunc_BreakHitResult_Normal_1, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_1, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_1, class AActor* CallFunc_BreakHitResult_HitActor_1, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_1, class FName CallFunc_BreakHitResult_HitBoneName_1, int32 CallFunc_BreakHitResult_HitItem_1, int32 CallFunc_BreakHitResult_ElementIndex_1, int32 CallFunc_BreakHitResult_FaceIndex_1, const struct FVector& CallFunc_BreakHitResult_TraceStart_1, const struct FVector& CallFunc_BreakHitResult_TraceEnd_1, bool CallFunc_ComponentHasTag_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, float CallFunc_VSize_ReturnValue, class AFortPlayerPawn* CallFunc_GetInstigator_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, class AActor* CallFunc_GetHeldObjectAttachedToPlayer_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition, float CallFunc_GetLastWaterSurfaceInfo_WaterDepth, int32 CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterVelocity, float CallFunc_Conv_IntToFloat_ReturnValue, bool CallFunc_PerformLinkingCheck_ReturnValue, struct FHitResult& K2Node_ComponentBoundEvent_ImpactResult, bool CallFunc_IsServer_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit_2, bool CallFunc_BreakHitResult_bInitialOverlap_2, float CallFunc_BreakHitResult_Time_2, float CallFunc_BreakHitResult_Distance_2, const struct FVector& CallFunc_BreakHitResult_Location_2, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_2, const struct FVector& CallFunc_BreakHitResult_Normal_2, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_2, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_2, class AActor* CallFunc_BreakHitResult_HitActor_2, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_2, class FName CallFunc_BreakHitResult_HitBoneName_2, int32 CallFunc_BreakHitResult_HitItem_2, int32 CallFunc_BreakHitResult_ElementIndex_2, int32 CallFunc_BreakHitResult_FaceIndex_2, const struct FVector& CallFunc_BreakHitResult_TraceStart_2, const struct FVector& CallFunc_BreakHitResult_TraceEnd_2, bool CallFunc_BreakHitResult_bBlockingHit_3, bool CallFunc_BreakHitResult_bInitialOverlap_3, float CallFunc_BreakHitResult_Time_3, float CallFunc_BreakHitResult_Distance_3, const struct FVector& CallFunc_BreakHitResult_Location_3, const struct FVector& CallFunc_BreakHitResult_ImpactPoint_3, const struct FVector& CallFunc_BreakHitResult_Normal_3, const struct FVector& CallFunc_BreakHitResult_ImpactNormal_3, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat_3, class AActor* CallFunc_BreakHitResult_HitActor_3, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent_3, class FName CallFunc_BreakHitResult_HitBoneName_3, int32 CallFunc_BreakHitResult_HitItem_3, int32 CallFunc_BreakHitResult_ElementIndex_3, int32 CallFunc_BreakHitResult_FaceIndex_3, const struct FVector& CallFunc_BreakHitResult_TraceStart_3, const struct FVector& CallFunc_BreakHitResult_TraceEnd_3, struct FVector& K2Node_CustomEvent_Location, struct FVector& K2Node_CustomEvent_HitNormal, bool K2Node_CustomEvent_NewParam, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface_1, bool K2Node_DynamicCast_bSuccess_3, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, float CallFunc_GetAngleBetweenTwoVectors_Angle__Degrees_, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_VSize_ReturnValue_1, class USceneComponent* CallFunc_GetAttachComponent_Component, const struct FHitResult& CallFunc_K2_SetRelativeTransform_SweepHitResult, float CallFunc_RandomFloat_ReturnValue, class UPrimitiveComponent* K2Node_Event_MyComp, class AActor* K2Node_Event_Other, class UPrimitiveComponent* K2Node_Event_OtherComp, bool K2Node_Event_bSelfMoved, const struct FVector& K2Node_Event_HitLocation, const struct FVector& K2Node_Event_HitNormal, const struct FVector& K2Node_Event_NormalImpulse, struct FHitResult& K2Node_Event_Hit, const struct FVector& CallFunc_Conv_FloatToVector_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn_1, bool K2Node_DynamicCast_bSuccess_4, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, class AFortPawn* K2Node_CustomEvent_Interacting_Pawn, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsServer_ReturnValue_1, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FRotator& CallFunc_MakeRotFromXZ_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, class AFortGameStateAthena* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, class AFortPawn* K2Node_CustomEvent_InteractingPawn, class UFortPlaylist* Temp_object_Variable_1, const struct FGameplayTagContainer& Temp_struct_Variable, bool CallFunc_IsInWater_ReturnValue, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, int32 CallFunc_Conv_ByteToInt_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_1, int32 CallFunc_Conv_ByteToInt_ReturnValue_2, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_2, int32 CallFunc_Conv_ByteToInt_ReturnValue_3, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_3, int32 CallFunc_Conv_ByteToInt_ReturnValue_4, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_4, int32 CallFunc_Conv_ByteToInt_ReturnValue_5, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue_4, bool CallFunc_IsServer_ReturnValue_2, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_5, class AFortPlayerPawn* CallFunc_GetInstigator_ReturnValue_1, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, bool Temp_bool_Variable, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_IsActorSubmergedInOcean_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, float CallFunc_GetOceanTotalHeight_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, float CallFunc_RandomFloatInRange_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_2, class AFortPawn* K2Node_Event_InteractingPawn, EInteractionBeingAttempted K2Node_Event_InteractionBeingAttempted, bool K2Node_SwitchEnum_CmpSuccess, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_5, ECollisionResponse CallFunc_GetCollisionResponseToChannel_ReturnValue, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate, class AActor* K2Node_CustomEvent_DestroyedActor, bool CallFunc_EqualEqual_ObjectObject_ReturnValue_1, float Temp_float_Variable, float K2Node_Select_Default, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue_1);
	void OnVehicleDestroyed(class AActor* DestroyedActor);
	void BlueprintOnInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted);
	void ReceiveDestroyed();
	void OnSecondInteract(class AFortPawn* InteractingPawn);
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_5_OnHeldObjectPlaced__DelegateSignature();
	void OnFirstInteract(class AFortPawn* Interacting_Pawn);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_0_OnLinkedActorDestroyed__DelegateSignature();
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void ResetRelativeTransformOnAttach();
	void ReceiveBeginPlay();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_6_OnHeldObjectPickedUp__DelegateSignature();
	void AttachSetup(struct FVector& Location, struct FVector& HitNormal, bool NewParam);
	void BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_4_OnProjectileStopDelegate__DelegateSignature(struct FHitResult& ImpactResult);
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectThrown__DelegateSignature();
	void BndEvt__FortWaterInteraction_K2Node_ComponentBoundEvent_3_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent, bool bIsFirstBody);
	void BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_1_OnProjectileBounceDelegate__DelegateSignature(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity);
	void PlayGenericDeath();
	void HideActor();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnReady_BC2B03BE47B5044C184341970EAD7AAB(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);
	void OnRep_RepStartMoving(class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void OnRep_RepHideActor();
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void FindAttachAngle(const struct FVector& HitLoc, float CurrentLowest, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_GetActorRightVector_ReturnValue, TArray<ELinkToDirection>& CallFunc_Map_Keys_Keys, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, ELinkToDirection CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, const struct FVector& CallFunc_GetActorUpVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, bool CallFunc_Less_FloatFloat_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const TMap<ELinkToDirection, struct FVector>& K2Node_MakeMap_Map);
	void GetAttachComponent(class USceneComponent** Component);
	void SetAttachDefaultTransform(bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsServer_ReturnValue, class USceneComponent* CallFunc_GetAttachComponent_Component, bool CallFunc_BooleanAND_ReturnValue, const struct FTransform& CallFunc_GetRelativeTransform_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1);
	void OnRep_AttachTransform(const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FVector& CallFunc_GetUpVector_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_GetForwardVector_ReturnValue, class USceneComponent* CallFunc_GetAttachComponent_Component, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, const struct FVector& CallFunc_K2_GetComponentScale_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldTransform_SweepHitResult);
	void SetBeenThrownPlaced();
	void OnRep_IsAttachedToVehicle();
	void OnAttachedToVehicle(bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate);
	void OnDetachFromVehicle(bool CallFunc_IsHeld_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue);
	void Server_Only_Handle_Attach_To_Vehicle(const struct FVector& HitLoc, class UPrimitiveComponent* Param_HitComponentToAttachTo, bool CallFunc_PerformLinkingCheck_ReturnValue, class AActor* CallFunc_GetOwner_ReturnValue);
	void Server_Only_Handle_Player_Controller_OnUnPossess(class APawn* PlayerPawn);
	void BindPlayerControllerOnUnPosses(TDelegate<void(class APawn* Pawn)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_HasAuthority_ReturnValue, class AFortPlayerPawn* CallFunc_GetInstigator_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue);
	void UbindPlayerControllerOnUnPosses(TDelegate<void(class APawn* Pawn)> K2Node_CreateDelegate_OutputDelegate, class AFortPlayerPawn* CallFunc_GetInstigator_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess);

	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType, bool CallFunc_EqualEqual_ByteByte_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_GetCanFirstInteract_Return, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_CanInteract_ReturnValue, bool CallFunc_BooleanAND_ReturnValue) const;
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, EInteractionBeingAttempted Temp_byte_Variable, class FText Temp_text_Variable, class FText K2Node_Select_Default) const;
	bool BlueprintGetInteractionTime(class AFortPawn* InteractingPawn, float* OutInteractionTime, EInteractionBeingAttempted InteractionBeingAttempted, EInteractionBeingAttempted Temp_byte_Variable, float Temp_float_Variable, float K2Node_Select_Default) const;
	void GetCanFirstInteract(class AFortPawn* InteractingPawn, bool* Return) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_HeldObject_Parent_C">();
	}
	static class ABGA_HeldObject_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_HeldObject_Parent_C>();
	}
};
static_assert(alignof(ABGA_HeldObject_Parent_C) == 0x000010, "Wrong alinment on ABGA_HeldObject_Parent_C");
static_assert(sizeof(ABGA_HeldObject_Parent_C) == 0x0009B0, "Wrong size on ABGA_HeldObject_Parent_C");
static_assert(offsetof(ABGA_HeldObject_Parent_C, UberGraphFrame) == 0x0007D0, "Member 'ABGA_HeldObject_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FortWaterInteraction) == 0x0007D8, "Member 'ABGA_HeldObject_Parent_C::FortWaterInteraction' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FortLinkToActor) == 0x0007E0, "Member 'ABGA_HeldObject_Parent_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FortHeldObject) == 0x0007E8, "Member 'ABGA_HeldObject_Parent_C::FortHeldObject' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FortProjectileMovement) == 0x0007F0, "Member 'ABGA_HeldObject_Parent_C::FortProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, Capsule) == 0x0007F8, "Member 'ABGA_HeldObject_Parent_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, RepStartMoving) == 0x000800, "Member 'ABGA_HeldObject_Parent_C::RepStartMoving' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_HitPlayer) == 0x000804, "Member 'ABGA_HeldObject_Parent_C::GC_HitPlayer' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_HitWorld) == 0x00080C, "Member 'ABGA_HeldObject_Parent_C::GC_HitWorld' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_Throw) == 0x000814, "Member 'ABGA_HeldObject_Parent_C::GC_Throw' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_EnterWater) == 0x00081C, "Member 'ABGA_HeldObject_Parent_C::GC_EnterWater' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_Pickup) == 0x000824, "Member 'ABGA_HeldObject_Parent_C::GC_Pickup' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_Death) == 0x00082C, "Member 'ABGA_HeldObject_Parent_C::GC_Death' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, PlayDeathGC) == 0x000834, "Member 'ABGA_HeldObject_Parent_C::PlayDeathGC' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, RepHideActor) == 0x000835, "Member 'ABGA_HeldObject_Parent_C::RepHideActor' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, SetHideActorOnDeath) == 0x000836, "Member 'ABGA_HeldObject_Parent_C::SetHideActorOnDeath' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, IsDestructable) == 0x000837, "Member 'ABGA_HeldObject_Parent_C::IsDestructable' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, GC_GenericDeath) == 0x000838, "Member 'ABGA_HeldObject_Parent_C::GC_GenericDeath' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, WorldStopSlop) == 0x000840, "Member 'ABGA_HeldObject_Parent_C::WorldStopSlop' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, AttachToWallsAndCeilings) == 0x000844, "Member 'ABGA_HeldObject_Parent_C::AttachToWallsAndCeilings' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, Map_DirectionToRelativeVector) == 0x000848, "Member 'ABGA_HeldObject_Parent_C::Map_DirectionToRelativeVector' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, DirectionToAttach) == 0x000898, "Member 'ABGA_HeldObject_Parent_C::DirectionToAttach' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, EmptyAttachLinkActor) == 0x0008A0, "Member 'ABGA_HeldObject_Parent_C::EmptyAttachLinkActor' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, AttachRelativeTrans) == 0x0008B0, "Member 'ABGA_HeldObject_Parent_C::AttachRelativeTrans' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, AttachTransform) == 0x0008E0, "Member 'ABGA_HeldObject_Parent_C::AttachTransform' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FirstInteractString) == 0x000910, "Member 'ABGA_HeldObject_Parent_C::FirstInteractString' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, SecondInteractString) == 0x000928, "Member 'ABGA_HeldObject_Parent_C::SecondInteractString' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, SecondInteractTime) == 0x000940, "Member 'ABGA_HeldObject_Parent_C::SecondInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, FirstInteractTime) == 0x000944, "Member 'ABGA_HeldObject_Parent_C::FirstInteractTime' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, EverBeenThrownPlaced) == 0x000948, "Member 'ABGA_HeldObject_Parent_C::EverBeenThrownPlaced' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, AutoEnableInteractionsOnStop) == 0x000949, "Member 'ABGA_HeldObject_Parent_C::AutoEnableInteractionsOnStop' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, AlreadySavedDefaultTransform) == 0x00094A, "Member 'ABGA_HeldObject_Parent_C::AlreadySavedDefaultTransform' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, ObjectWeights) == 0x00094B, "Member 'ABGA_HeldObject_Parent_C::ObjectWeights' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, StopOnFlatSurface) == 0x00094C, "Member 'ABGA_HeldObject_Parent_C::StopOnFlatSurface' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, ThrownQuestCreditTargetTag) == 0x000950, "Member 'ABGA_HeldObject_Parent_C::ThrownQuestCreditTargetTag' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, TC_BlockPickup) == 0x000970, "Member 'ABGA_HeldObject_Parent_C::TC_BlockPickup' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, Hit_Velocity_Threshold) == 0x000990, "Member 'ABGA_HeldObject_Parent_C::Hit_Velocity_Threshold' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, ShouldKillWhenSpawningUnderwater) == 0x000994, "Member 'ABGA_HeldObject_Parent_C::ShouldKillWhenSpawningUnderwater' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, HitComponentToAttachTo) == 0x000998, "Member 'ABGA_HeldObject_Parent_C::HitComponentToAttachTo' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, CapsuleDefaultCollisionResponseToPawn) == 0x0009A0, "Member 'ABGA_HeldObject_Parent_C::CapsuleDefaultCollisionResponseToPawn' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, RestoreDefaultPawnCollisionOnInteract) == 0x0009A1, "Member 'ABGA_HeldObject_Parent_C::RestoreDefaultPawnCollisionOnInteract' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, IsAttachedToVehicle) == 0x0009A2, "Member 'ABGA_HeldObject_Parent_C::IsAttachedToVehicle' has a wrong offset!");
static_assert(offsetof(ABGA_HeldObject_Parent_C, VehicleAttached) == 0x0009A8, "Member 'ABGA_HeldObject_Parent_C::VehicleAttached' has a wrong offset!");

}

