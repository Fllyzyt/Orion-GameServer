#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cinematic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Cinematic.Cinematic_C
// 0x0060 (0x0518 - 0x04B8)
class UCinematic_C final  : public UFortUIStateWidget_NUI
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UNamedSlot*                             LocalizedAudioOnlyMovieSlot;                       // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetStack*                     MainContentStack;                                  // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             MovieSlot;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayMovieOverlay;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USubtitles_C*                           Subtitles;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTeamMicStack_C*                        TeamMicStack;                                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBuildWatermark_C*                      Widget_BuildWatermark;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULegacy_MovieWidget_C*                  MovieWidget;                                       // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortMediaSubtitlesPlayer*              SubtitlesPlayer;                                   // 0x0500(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CinematicMediaSoundWave;                           // 0x0508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinished;                                         // 0x0510(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Cinematic(int32 EntryPoint, class UObject* K2Node_HandleClientEvent_EventSource, class UObject* K2Node_HandleClientEvent_EventFocus, struct FFortClientEvent& K2Node_HandleClientEvent_ClientEvent, class UObject* K2Node_HandleClientEvent_EventSource_1, class UObject* K2Node_HandleClientEvent_EventFocus_1, struct FFortClientEvent& K2Node_HandleClientEvent_ClientEvent_1, class UFortMediaSubtitlesPlayer* K2Node_DynamicCast_AsFort_Media_Subtitles_Player, bool K2Node_DynamicCast_bSuccess, class UFortMediaInfo* K2Node_DynamicCast_AsFort_Media_Info, bool K2Node_DynamicCast_bSuccess_1, class UWidget* K2Node_Event_Widget, const struct FContentPushState& K2Node_Event_State, EFortUIState K2Node_Event_PreviousUIState, EFortUIState K2Node_Event_NextUIState, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class UMediaPlayer* CallFunc_GetMediaPlayer_ReturnValue, class UMediaPlayer* CallFunc_GetMediaPlayer_ReturnValue_1, bool CallFunc_IsPreparing_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_BooleanOR_ReturnValue);
	void OnExitState(EFortUIState NextUIState);
	void OnEnterState(EFortUIState PreviousUIState);
	void PushContentWidgetInternal(class UWidget* Widget, const struct FContentPushState& State);
	void HandleClientEvent_SkipCinematic(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
	void HandleEndReached();
	void Destruct();
	void HandleClientEvent_QueueCinematic(class UObject* EventSource, class UObject* EventFocus, struct FFortClientEvent& ClientEvent);
	void Construct();
	void ShowMovie(class UMediaPlayer* MediaPlayer, class UMediaSource* MediaSource, class UNamedSlot*& Param_MovieSlot, class ULegacy_MovieWidget_C*& Param_MovieWidget, int32 CallFunc_GetAudioTrackIndex_AudioTrack, class UPanelSlot* CallFunc_AddChild_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UMediaPlayer* CallFunc_GetMediaPlayer_ReturnValue, class ULegacy_MovieWidget_C* CallFunc_Create_ReturnValue);
	void ClearMovie();
	void SkipMovie(class UMediaPlayer* CallFunc_GetMediaPlayer_ReturnValue, bool CallFunc_IsPlaying_ReturnValue, bool CallFunc_Pause_ReturnValue);
	class UWidget* PopContentWidgetInternal(const struct FContentPushState& State, class UWidget* CallFunc_PopWidget_ReturnValue);
	void ClearMovieSlot(class UPanelWidget*& MovieSlotToClear);
	void ClearMovieWidget(class UFortMovieWidget*& MovieWidgetToClear, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue, class UMediaPlayer* CallFunc_GetMediaPlayer_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SetMoviePlaying(bool MoviePlaying);
	void ClearOldSubtitlesIfNecessary(bool NewSubtitlesExist, class UFortMediaSubtitlesPlayer* NewSubtitles, const class FString& Temp_string_Variable, const class FString& Temp_string_Variable_1, bool Temp_bool_Variable, const class FString& K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue);
	void StopAndClearSubtitles(bool CallFunc_IsValid_ReturnValue);
	void GetAudioTrackIndex(int32* AudioTrack, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, TArray<class FString>& CallFunc_GetPreferredLanguages_ReturnValue, TArray<class FName>& CallFunc_GetDataTableRowNames_OutRowNames, const class FString& CallFunc_Array_Get_Item, class FName CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, const struct FCinematicLanuageToTrackStruct& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_EqualEqual_StriStri_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cinematic_C">();
	}
	static class UCinematic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCinematic_C>();
	}
};
static_assert(alignof(UCinematic_C) == 0x000008, "Wrong alinment on UCinematic_C");
static_assert(sizeof(UCinematic_C) == 0x000518, "Wrong size on UCinematic_C");
static_assert(offsetof(UCinematic_C, UberGraphFrame) == 0x0004B8, "Member 'UCinematic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCinematic_C, LocalizedAudioOnlyMovieSlot) == 0x0004C0, "Member 'UCinematic_C::LocalizedAudioOnlyMovieSlot' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MainContentStack) == 0x0004C8, "Member 'UCinematic_C::MainContentStack' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MovieSlot) == 0x0004D0, "Member 'UCinematic_C::MovieSlot' has a wrong offset!");
static_assert(offsetof(UCinematic_C, OverlayMovieOverlay) == 0x0004D8, "Member 'UCinematic_C::OverlayMovieOverlay' has a wrong offset!");
static_assert(offsetof(UCinematic_C, Subtitles) == 0x0004E0, "Member 'UCinematic_C::Subtitles' has a wrong offset!");
static_assert(offsetof(UCinematic_C, TeamMicStack) == 0x0004E8, "Member 'UCinematic_C::TeamMicStack' has a wrong offset!");
static_assert(offsetof(UCinematic_C, Widget_BuildWatermark) == 0x0004F0, "Member 'UCinematic_C::Widget_BuildWatermark' has a wrong offset!");
static_assert(offsetof(UCinematic_C, MovieWidget) == 0x0004F8, "Member 'UCinematic_C::MovieWidget' has a wrong offset!");
static_assert(offsetof(UCinematic_C, SubtitlesPlayer) == 0x000500, "Member 'UCinematic_C::SubtitlesPlayer' has a wrong offset!");
static_assert(offsetof(UCinematic_C, CinematicMediaSoundWave) == 0x000508, "Member 'UCinematic_C::CinematicMediaSoundWave' has a wrong offset!");
static_assert(offsetof(UCinematic_C, bFinished) == 0x000510, "Member 'UCinematic_C::bFinished' has a wrong offset!");

}

