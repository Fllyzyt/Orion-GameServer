#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MilitaryBase_Door_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Parent_BuildingWall_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass MilitaryBase_Door_01.MilitaryBase_Door_01_C
// 0x0090 (0x0CB8 - 0x0C28)
class AMilitaryBase_Door_01_C final  : public AParent_BuildingWall_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0C28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DoorSlideOverlapVolume;                            // 0x0C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DoorStaticMesh1;                                   // 0x0C38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_EmissiveColorLerp_75727DFA4F9CA24A009D23ADC967876F; // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_SlideAnimation_75727DFA4F9CA24A009D23ADC967876F; // 0x0C44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_75727DFA4F9CA24A009D23ADC967876F; // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6306[0x7];                                     // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0C50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfPawnsWithinVolume;                         // 0x0C58(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorOpen;                                          // 0x0C5C(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_6307[0x3];                                     // 0x0C5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DoorMID;                                           // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           DefaultDoorEmissiveValue;                          // 0x0C68(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ActiveDoorEmissiveValue;                           // 0x0C78(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     DoorBaseMaterial;                                  // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Door_Source_Materials;                             // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SlidingDoorClose_Sound;                            // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SlidingDoorOpen_Sound;                             // 0x0CA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnDoorOpened;                                      // 0x0CA8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void OnDoorOpened__DelegateSignature();
	void ExecuteUbergraph_MilitaryBase_Door_01(int32 EntryPoint, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class AFortAthenaVehicle* K2Node_DynamicCast_AsFort_Athena_Vehicle, bool K2Node_DynamicCast_bSuccess, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_HasAuthority_ReturnValue_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, class AFortAthenaVehicle* K2Node_DynamicCast_AsFort_Athena_Vehicle_1, bool K2Node_DynamicCast_bSuccess_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_3, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_Max_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FLinearColor& CallFunc_LinearColorLerp_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class AController* K2Node_Event_ControllerInstigator_1, class AController* K2Node_Event_ControllerInstigator);
	void OnLocked();
	void OnUnLocked();
	void Close(class AController* ControllerInstigator);
	void Open(class AController* ControllerInstigator);
	void CloseDoor();
	void OpenDoor();
	void BndEvt__DoorSlideOverlapVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__DoorSlideOverlapVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript(bool CallFunc_IsDedicatedServer_ReturnValue, class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, class UMaterialInstanceConstant* K2Node_DynamicCast_AsMaterial_Instance_Constant, bool K2Node_DynamicCast_bSuccess, const struct FLinearColor& CallFunc_K2_GetVectorParameterValue_ReturnValue);
	void GetDoorMID(class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* K2Node_DynamicCast_AsMaterial_Instance_Dynamic, bool K2Node_DynamicCast_bSuccess);
	void OnRep_DoorOpen();
	TArray<class UPrimitiveComponent*> GetComponentToLock(TArray<class UPrimitiveComponent*>& K2Node_MakeArray_Array);

	bool IsOpen() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MilitaryBase_Door_01_C">();
	}
	static class AMilitaryBase_Door_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AMilitaryBase_Door_01_C>();
	}
};
static_assert(alignof(AMilitaryBase_Door_01_C) == 0x000008, "Wrong alinment on AMilitaryBase_Door_01_C");
static_assert(sizeof(AMilitaryBase_Door_01_C) == 0x000CB8, "Wrong size on AMilitaryBase_Door_01_C");
static_assert(offsetof(AMilitaryBase_Door_01_C, UberGraphFrame) == 0x000C28, "Member 'AMilitaryBase_Door_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DoorSlideOverlapVolume) == 0x000C30, "Member 'AMilitaryBase_Door_01_C::DoorSlideOverlapVolume' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DoorStaticMesh1) == 0x000C38, "Member 'AMilitaryBase_Door_01_C::DoorStaticMesh1' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, Timeline_0_EmissiveColorLerp_75727DFA4F9CA24A009D23ADC967876F) == 0x000C40, "Member 'AMilitaryBase_Door_01_C::Timeline_0_EmissiveColorLerp_75727DFA4F9CA24A009D23ADC967876F' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, Timeline_0_SlideAnimation_75727DFA4F9CA24A009D23ADC967876F) == 0x000C44, "Member 'AMilitaryBase_Door_01_C::Timeline_0_SlideAnimation_75727DFA4F9CA24A009D23ADC967876F' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, Timeline_0__Direction_75727DFA4F9CA24A009D23ADC967876F) == 0x000C48, "Member 'AMilitaryBase_Door_01_C::Timeline_0__Direction_75727DFA4F9CA24A009D23ADC967876F' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, Timeline_0) == 0x000C50, "Member 'AMilitaryBase_Door_01_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, NumberOfPawnsWithinVolume) == 0x000C58, "Member 'AMilitaryBase_Door_01_C::NumberOfPawnsWithinVolume' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DoorOpen) == 0x000C5C, "Member 'AMilitaryBase_Door_01_C::DoorOpen' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DoorMID) == 0x000C60, "Member 'AMilitaryBase_Door_01_C::DoorMID' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DefaultDoorEmissiveValue) == 0x000C68, "Member 'AMilitaryBase_Door_01_C::DefaultDoorEmissiveValue' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, ActiveDoorEmissiveValue) == 0x000C78, "Member 'AMilitaryBase_Door_01_C::ActiveDoorEmissiveValue' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, DoorBaseMaterial) == 0x000C88, "Member 'AMilitaryBase_Door_01_C::DoorBaseMaterial' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, Door_Source_Materials) == 0x000C90, "Member 'AMilitaryBase_Door_01_C::Door_Source_Materials' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, SlidingDoorClose_Sound) == 0x000C98, "Member 'AMilitaryBase_Door_01_C::SlidingDoorClose_Sound' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, SlidingDoorOpen_Sound) == 0x000CA0, "Member 'AMilitaryBase_Door_01_C::SlidingDoorOpen_Sound' has a wrong offset!");
static_assert(offsetof(AMilitaryBase_Door_01_C, OnDoorOpened) == 0x000CA8, "Member 'AMilitaryBase_Door_01_C::OnDoorOpened' has a wrong offset!");

}

