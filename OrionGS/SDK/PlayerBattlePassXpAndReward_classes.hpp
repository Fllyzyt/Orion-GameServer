#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBattlePassXpAndReward

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerBattlePassXpAndReward.PlayerBattlePassXpAndReward_C
// 0x0028 (0x02E8 - 0x02C0)
class UPlayerBattlePassXpAndReward_C final  : public UFortAccountWidgetBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAthenaPlayerLevelCompact_C*            AthenaPlayerLevel;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SeasonNameLabel;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_SeasonNumber;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowSeasonText;                                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShowSeasonNumberText;                             // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void SetupReward(class UWidget* Container, class UTextBlock* RewardText, class UDailyQuestRewardInfo_C* RewardInfoWidget, bool HasReward, const struct FFortItemQuantityPair& RewardItem, int32 LevelRewarded, ESlateVisibility Temp_byte_Variable, class FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, ESlateVisibility K2Node_Select_Default);
	void Refresh(struct FFortPublicAccountInfo& FortPublicAccountInfo, class FText CallFunc_GetCurrentSeasonNumberAsText_ReturnValue, class FText CallFunc_GetCurrentChapterAsText_ReturnValue);
	void PreConstruct(bool IsDesignTime);
	void OnAccountInfoChanged(struct FFortPublicAccountInfo& Result);
	void ExecuteUbergraph_PlayerBattlePassXpAndReward(int32 EntryPoint, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, bool K2Node_Event_IsDesignTime, struct FFortPublicAccountInfo& K2Node_Event_Result, ESlateVisibility K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerBattlePassXpAndReward_C">();
	}
	static class UPlayerBattlePassXpAndReward_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBattlePassXpAndReward_C>();
	}
};
static_assert(alignof(UPlayerBattlePassXpAndReward_C) == 0x000008, "Wrong alinment on UPlayerBattlePassXpAndReward_C");
static_assert(sizeof(UPlayerBattlePassXpAndReward_C) == 0x0002E8, "Wrong size on UPlayerBattlePassXpAndReward_C");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, UberGraphFrame) == 0x0002C0, "Member 'UPlayerBattlePassXpAndReward_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, AthenaPlayerLevel) == 0x0002C8, "Member 'UPlayerBattlePassXpAndReward_C::AthenaPlayerLevel' has a wrong offset!");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, SeasonNameLabel) == 0x0002D0, "Member 'UPlayerBattlePassXpAndReward_C::SeasonNameLabel' has a wrong offset!");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, Text_SeasonNumber) == 0x0002D8, "Member 'UPlayerBattlePassXpAndReward_C::Text_SeasonNumber' has a wrong offset!");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, ShowSeasonText) == 0x0002E0, "Member 'UPlayerBattlePassXpAndReward_C::ShowSeasonText' has a wrong offset!");
static_assert(offsetof(UPlayerBattlePassXpAndReward_C, bShowSeasonNumberText) == 0x0002E1, "Member 'UPlayerBattlePassXpAndReward_C::bShowSeasonNumberText' has a wrong offset!");

}

