#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Trap_Floor_Player_Campfire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Trap_Floor_Player_Campfire.Trap_Floor_Player_Campfire_C
// 0x01A8 (0x0E50 - 0x0CA8)
class ATrap_Floor_Player_Campfire_C final  : public ABuildingTrapFloor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0CA8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               P_Smoke;                                           // 0x0CB0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wood;                                              // 0x0CB8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CampfirePit;                                       // 0x0CC0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Master;                                            // 0x0CC8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Athena_Campfire_Doused;                          // 0x0CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio;                                             // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Athena_Campfire;                                 // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PlacementSoundLocation;                            // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ProximityTraceOrigin;                              // 0x0CF0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DarkenLogs_Lerp_2F1CB1BF43762B3942D07DA06E56DCA6;  // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DarkenLogs__Direction_2F1CB1BF43762B3942D07DA06E56DCA6; // 0x0CFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CE5[0x3];                                     // 0x0CFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DarkenLogs;                                        // 0x0D00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeDoused_Fade_87602AFE48A3F8C64AA9BD9884FBF57E;  // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeDoused__Direction_87602AFE48A3F8C64AA9BD9884FBF57E; // 0x0D0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CE6[0x3];                                     // 0x0D0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeDoused;                                        // 0x0D10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Placed_Sound;                                 // 0x0D18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Active_Sound;                                 // 0x0D20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Fire_Sound;                                   // 0x0D28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Reload_Sound;                                 // 0x0D30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              Trap_Explode_Sound;                                // 0x0D38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActive;                                          // 0x0D40(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_5CE7[0x3];                                     // 0x0D41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumTicks;                                          // 0x0D44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTicks;                                          // 0x0D48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CE8[0x4];                                     // 0x0D4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      OverlapObjectTypes;                                // 0x0D50(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FVector                                AOE_BoxExtents;                                    // 0x0D60(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CE9[0x4];                                     // 0x0D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CampfireDousedSound;                               // 0x0D70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             WoodRemovalSound;                                  // 0x0D78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        WoodRemovalFX;                                     // 0x0D80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MaxHeals;                                      // 0x0D88(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_DousedDuration;                                // 0x0DB0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_TickInterval;                                  // 0x0DD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_ShouldStack;                                   // 0x0E00(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPlayerPawn*                        HitPlayerPawn;                                     // 0x0E28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      Owning_Player_Quest_Manager;                       // 0x0E30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasFiredQuest;                                     // 0x0E38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CEA[0x7];                                     // 0x0E39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  Owning_Player_PC;                                  // 0x0E40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABuildingGameplayActor*                 CampFire_BGA;                                      // 0x0E48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Trap_Floor_Player_Campfire(int32 EntryPoint, bool CallFunc_IsDedicatedServer_ReturnValue, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_1, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_1, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue_3, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_2, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_3, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_4, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_5, const struct FParticleSysParam& K2Node_MakeStruct_ParticleSysParam_6, TArray<struct FParticleSysParam>& K2Node_MakeArray_Array, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_1, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_1, bool K2Node_SwitchEnum_CmpSuccess, EGameplayCueEvent K2Node_GameplayCueEvent_EventType, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters, bool K2Node_SwitchEnum_CmpSuccess_1, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_2, float Temp_float_Variable, class AFortPlayerPawnAthena* K2Node_Event_Pawn, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, float CallFunc_Lerp_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue_3, float CallFunc_Multiply_FloatFloat_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue_1, float K2Node_Event_Damage_1, struct FGameplayTagContainer& K2Node_Event_DamageTags_1, const struct FVector& K2Node_Event_Momentum_1, struct FHitResult& K2Node_Event_HitInfo_1, class AFortPawn* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, TArray<EFortTeamAffiliation>& K2Node_MakeArray_Array_1, uint8 CallFunc_GetActorTeam_ReturnValue, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_3, const struct FTransform& CallFunc_Conv_VectorToTransform_ReturnValue, class AActor* CallFunc_GetCampFireTrapInstigator_ReturnValue, class ABuildingGameplayActor* CallFunc_SpawnBuildingGameplayActor_ReturnValue);
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void CharLogs();
	void DousedTime();
	void TriggerLaunchEffects(class AFortPlayerPawnAthena* Pawn);
	void OnOutOfDurability();
	void GameplayCue_Abilities_Activation_Traps_ActivateTrap(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Traps_ReloadBegin(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnFinishedBuilding();
	void OnPlaced();
	void OnReloadEnd();
	void DarkenLogs__UpdateFunc();
	void DarkenLogs__FinishedFunc();
	void FadeDoused__UpdateFunc();
	void FadeDoused__FinishedFunc();
	void OnRep_IsActive();
	void HealTicks(class AFortPlayerState* CallFunc_GetOwningPlayerState_ReturnValue, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, int32 Temp_int_Array_Index_Variable, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue, int32 Temp_int_Loop_Counter_Variable, float CallFunc_GetValueAtLevel_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Conv_IntToBool_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue, TArray<class AActor*>& Temp_object_Variable, const struct FTransform& CallFunc_K2_GetComponentToWorld_ReturnValue_1, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, TArray<class AActor*>& CallFunc_BoxOverlapActors_OutActors, bool CallFunc_BoxOverlapActors_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, class AActor* CallFunc_Array_Get_Item, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, TScriptInterface<class IFortVehicleInterface> K2Node_DynamicCast_AsFort_Vehicle_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsPointInBoxWithTransform_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue, bool CallFunc_IsDead_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_2, bool CallFunc_IsPointInBoxWithTransform_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1);
	void InitCampfireEffects(const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue);
	void CheckIfTargetIsSquadmate(class AFortPlayerPawn* Target_Player, bool Is_Team_Mate, bool Is_Squad_Member, const struct FGameplayTagContainer& Heal_Squadmate_TC, const struct FGameplayTagContainer& Heal_Teammate_TC, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, class AFortPlayerState* CallFunc_GetOwningPlayerState_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class AFortPlayerPawn* CallFunc_GetCurrentPawn_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive_1, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class AFortPlayerStateAthena* K2Node_DynamicCast_AsFort_Player_State_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_OnSameTeam_ReturnValue, bool CallFunc_IsInSquad_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	class AActor* GetCampFireTrapInstigator(class AFortPlayerState* OwningPlayerState, class AFortPlayerState* CallFunc_GetOwningPlayerState_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AFortPlayerPawn* CallFunc_GetCurrentPawn_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Trap_Floor_Player_Campfire_C">();
	}
	static class ATrap_Floor_Player_Campfire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ATrap_Floor_Player_Campfire_C>();
	}
};
static_assert(alignof(ATrap_Floor_Player_Campfire_C) == 0x000008, "Wrong alinment on ATrap_Floor_Player_Campfire_C");
static_assert(sizeof(ATrap_Floor_Player_Campfire_C) == 0x000E50, "Wrong size on ATrap_Floor_Player_Campfire_C");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, UberGraphFrame) == 0x000CA8, "Member 'ATrap_Floor_Player_Campfire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, P_Smoke) == 0x000CB0, "Member 'ATrap_Floor_Player_Campfire_C::P_Smoke' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Wood) == 0x000CB8, "Member 'ATrap_Floor_Player_Campfire_C::Wood' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, CampfirePit) == 0x000CC0, "Member 'ATrap_Floor_Player_Campfire_C::CampfirePit' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Master) == 0x000CC8, "Member 'ATrap_Floor_Player_Campfire_C::Master' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, P_Athena_Campfire_Doused) == 0x000CD0, "Member 'ATrap_Floor_Player_Campfire_C::P_Athena_Campfire_Doused' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Audio) == 0x000CD8, "Member 'ATrap_Floor_Player_Campfire_C::Audio' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, P_Athena_Campfire) == 0x000CE0, "Member 'ATrap_Floor_Player_Campfire_C::P_Athena_Campfire' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, PlacementSoundLocation) == 0x000CE8, "Member 'ATrap_Floor_Player_Campfire_C::PlacementSoundLocation' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, ProximityTraceOrigin) == 0x000CF0, "Member 'ATrap_Floor_Player_Campfire_C::ProximityTraceOrigin' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, DarkenLogs_Lerp_2F1CB1BF43762B3942D07DA06E56DCA6) == 0x000CF8, "Member 'ATrap_Floor_Player_Campfire_C::DarkenLogs_Lerp_2F1CB1BF43762B3942D07DA06E56DCA6' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, DarkenLogs__Direction_2F1CB1BF43762B3942D07DA06E56DCA6) == 0x000CFC, "Member 'ATrap_Floor_Player_Campfire_C::DarkenLogs__Direction_2F1CB1BF43762B3942D07DA06E56DCA6' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, DarkenLogs) == 0x000D00, "Member 'ATrap_Floor_Player_Campfire_C::DarkenLogs' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, FadeDoused_Fade_87602AFE48A3F8C64AA9BD9884FBF57E) == 0x000D08, "Member 'ATrap_Floor_Player_Campfire_C::FadeDoused_Fade_87602AFE48A3F8C64AA9BD9884FBF57E' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, FadeDoused__Direction_87602AFE48A3F8C64AA9BD9884FBF57E) == 0x000D0C, "Member 'ATrap_Floor_Player_Campfire_C::FadeDoused__Direction_87602AFE48A3F8C64AA9BD9884FBF57E' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, FadeDoused) == 0x000D10, "Member 'ATrap_Floor_Player_Campfire_C::FadeDoused' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Trap_Placed_Sound) == 0x000D18, "Member 'ATrap_Floor_Player_Campfire_C::Trap_Placed_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Trap_Active_Sound) == 0x000D20, "Member 'ATrap_Floor_Player_Campfire_C::Trap_Active_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Trap_Fire_Sound) == 0x000D28, "Member 'ATrap_Floor_Player_Campfire_C::Trap_Fire_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Trap_Reload_Sound) == 0x000D30, "Member 'ATrap_Floor_Player_Campfire_C::Trap_Reload_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Trap_Explode_Sound) == 0x000D38, "Member 'ATrap_Floor_Player_Campfire_C::Trap_Explode_Sound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, IsActive) == 0x000D40, "Member 'ATrap_Floor_Player_Campfire_C::IsActive' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, NumTicks) == 0x000D44, "Member 'ATrap_Floor_Player_Campfire_C::NumTicks' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, MaxTicks) == 0x000D48, "Member 'ATrap_Floor_Player_Campfire_C::MaxTicks' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, OverlapObjectTypes) == 0x000D50, "Member 'ATrap_Floor_Player_Campfire_C::OverlapObjectTypes' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, AOE_BoxExtents) == 0x000D60, "Member 'ATrap_Floor_Player_Campfire_C::AOE_BoxExtents' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, CampfireDousedSound) == 0x000D70, "Member 'ATrap_Floor_Player_Campfire_C::CampfireDousedSound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, WoodRemovalSound) == 0x000D78, "Member 'ATrap_Floor_Player_Campfire_C::WoodRemovalSound' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, WoodRemovalFX) == 0x000D80, "Member 'ATrap_Floor_Player_Campfire_C::WoodRemovalFX' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Row_MaxHeals) == 0x000D88, "Member 'ATrap_Floor_Player_Campfire_C::Row_MaxHeals' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Row_DousedDuration) == 0x000DB0, "Member 'ATrap_Floor_Player_Campfire_C::Row_DousedDuration' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Row_TickInterval) == 0x000DD8, "Member 'ATrap_Floor_Player_Campfire_C::Row_TickInterval' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Row_ShouldStack) == 0x000E00, "Member 'ATrap_Floor_Player_Campfire_C::Row_ShouldStack' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, HitPlayerPawn) == 0x000E28, "Member 'ATrap_Floor_Player_Campfire_C::HitPlayerPawn' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Owning_Player_Quest_Manager) == 0x000E30, "Member 'ATrap_Floor_Player_Campfire_C::Owning_Player_Quest_Manager' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, HasFiredQuest) == 0x000E38, "Member 'ATrap_Floor_Player_Campfire_C::HasFiredQuest' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, Owning_Player_PC) == 0x000E40, "Member 'ATrap_Floor_Player_Campfire_C::Owning_Player_PC' has a wrong offset!");
static_assert(offsetof(ATrap_Floor_Player_Campfire_C, CampFire_BGA) == 0x000E48, "Member 'ATrap_Floor_Player_Campfire_C::CampFire_BGA' has a wrong offset!");

}

