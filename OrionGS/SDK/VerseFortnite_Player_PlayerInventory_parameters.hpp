#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite_Player_PlayerInventory

#include "Basic.hpp"


namespace SDK::Params
{

// Function VerseFortnite_Player_PlayerInventory.PlayerInventory.ClearDroppableItems
// 0x0008 (0x0008 - 0x0000)
struct PlayerInventory_ClearDroppableItems final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerInventory_ClearDroppableItems) == 0x000008, "Wrong alinment on PlayerInventory_ClearDroppableItems");
static_assert(sizeof(PlayerInventory_ClearDroppableItems) == 0x000008, "Wrong size on PlayerInventory_ClearDroppableItems");
static_assert(offsetof(PlayerInventory_ClearDroppableItems, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerInventory_ClearDroppableItems::__verse_0x9F1D658F_player' has a wrong offset!");

// Function VerseFortnite_Player_PlayerInventory.PlayerInventory.removeFromInventory
// 0x0020 (0x0020 - 0x0000)
struct PlayerInventory_RemoveFromInventory final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 __verse_0x2FF42210_assetPath;                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         __verse_0x2867F112_quantity;                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x001C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(PlayerInventory_RemoveFromInventory) == 0x000008, "Wrong alinment on PlayerInventory_RemoveFromInventory");
static_assert(sizeof(PlayerInventory_RemoveFromInventory) == 0x000020, "Wrong size on PlayerInventory_RemoveFromInventory");
static_assert(offsetof(PlayerInventory_RemoveFromInventory, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerInventory_RemoveFromInventory::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerInventory_RemoveFromInventory, __verse_0x2FF42210_assetPath) == 0x000008, "Member 'PlayerInventory_RemoveFromInventory::__verse_0x2FF42210_assetPath' has a wrong offset!");
static_assert(offsetof(PlayerInventory_RemoveFromInventory, __verse_0x2867F112_quantity) == 0x000018, "Member 'PlayerInventory_RemoveFromInventory::__verse_0x2867F112_quantity' has a wrong offset!");

// Function VerseFortnite_Player_PlayerInventory.PlayerInventory.tryAddItemToInventory
// 0x0018 (0x0018 - 0x0000)
struct PlayerInventory_TryAddItemToInventory final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortItemDefinition*                    __verse_0x555FC35C_itemDefinition;                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x2867F112_quantity;                       // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x9D7D8947_notifyPlayerClient : 1;         // 0x0014(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
	FOptionalProperty_                            RetVal;                                            // 0x0015(0x0002)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(PlayerInventory_TryAddItemToInventory) == 0x000008, "Wrong alinment on PlayerInventory_TryAddItemToInventory");
static_assert(sizeof(PlayerInventory_TryAddItemToInventory) == 0x000018, "Wrong size on PlayerInventory_TryAddItemToInventory");
static_assert(offsetof(PlayerInventory_TryAddItemToInventory, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerInventory_TryAddItemToInventory::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerInventory_TryAddItemToInventory, __verse_0x555FC35C_itemDefinition) == 0x000008, "Member 'PlayerInventory_TryAddItemToInventory::__verse_0x555FC35C_itemDefinition' has a wrong offset!");
static_assert(offsetof(PlayerInventory_TryAddItemToInventory, __verse_0x2867F112_quantity) == 0x000010, "Member 'PlayerInventory_TryAddItemToInventory::__verse_0x2867F112_quantity' has a wrong offset!");
static_assert(offsetof(PlayerInventory_TryAddItemToInventory, RetVal) == 0x000015, "Member 'PlayerInventory_TryAddItemToInventory::RetVal' has a wrong offset!");

// Function VerseFortnite_Player_PlayerInventory.PlayerInventory.tryAddToInventory
// 0x0020 (0x0020 - 0x0000)
struct PlayerInventory_TryAddToInventory final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 __verse_0x2FF42210_assetPath;                      // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         __verse_0x2867F112_quantity;                       // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         __verse_0x9D7D8947_notifyPlayerClient : 1;         // 0x001C(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, NoDestructor))
};
static_assert(alignof(PlayerInventory_TryAddToInventory) == 0x000008, "Wrong alinment on PlayerInventory_TryAddToInventory");
static_assert(sizeof(PlayerInventory_TryAddToInventory) == 0x000020, "Wrong size on PlayerInventory_TryAddToInventory");
static_assert(offsetof(PlayerInventory_TryAddToInventory, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerInventory_TryAddToInventory::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerInventory_TryAddToInventory, __verse_0x2FF42210_assetPath) == 0x000008, "Member 'PlayerInventory_TryAddToInventory::__verse_0x2FF42210_assetPath' has a wrong offset!");
static_assert(offsetof(PlayerInventory_TryAddToInventory, __verse_0x2867F112_quantity) == 0x000018, "Member 'PlayerInventory_TryAddToInventory::__verse_0x2867F112_quantity' has a wrong offset!");

}

