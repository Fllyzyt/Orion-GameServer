#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Athena_Prop_SnowmanV3

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Athena_Prop_SneakySnowmanV2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Athena_Prop_SnowmanV3.Athena_Prop_SnowmanV3_C
// 0x0080 (0x0D48 - 0x0CC8)
class AAthena_Prop_SnowmanV3_C final  : public AAthena_Prop_SneakySnowmanV2_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Athena_Prop_SnowmanV3_C;            // 0x0CC8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FScalableFloat                         LaunchSpeed;                                       // 0x0CD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FrostExplosionRadius;                              // 0x0CF8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Enabled;                                           // 0x0D20(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_Athena_Prop_SnowmanV3(int32 EntryPoint, TArray<class AActor*>& Temp_object_Variable, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate, const struct FGameplayTagContainer& Temp_struct_Variable, class UFortPlaylist* Temp_object_Variable_1, class AFortGameStateAthena* Temp_object_Variable_2, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, bool CallFunc_IsValid_ReturnValue, int32 Temp_int_Array_Index_Variable, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_HasTag_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, int32 Temp_int_Loop_Counter_Variable, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, class AActor* CallFunc_Array_Get_Item, bool CallFunc_RowToBool_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class ACharacter* K2Node_DynamicCast_AsCharacter, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void ReceiveBeginPlay();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnReady_AD4F5A8A441B21F821A089A2E6DA49B3(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Athena_Prop_SnowmanV3_C">();
	}
	static class AAthena_Prop_SnowmanV3_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAthena_Prop_SnowmanV3_C>();
	}
};
static_assert(alignof(AAthena_Prop_SnowmanV3_C) == 0x000008, "Wrong alinment on AAthena_Prop_SnowmanV3_C");
static_assert(sizeof(AAthena_Prop_SnowmanV3_C) == 0x000D48, "Wrong size on AAthena_Prop_SnowmanV3_C");
static_assert(offsetof(AAthena_Prop_SnowmanV3_C, UberGraphFrame_Athena_Prop_SnowmanV3_C) == 0x000CC8, "Member 'AAthena_Prop_SnowmanV3_C::UberGraphFrame_Athena_Prop_SnowmanV3_C' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SnowmanV3_C, LaunchSpeed) == 0x000CD0, "Member 'AAthena_Prop_SnowmanV3_C::LaunchSpeed' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SnowmanV3_C, FrostExplosionRadius) == 0x000CF8, "Member 'AAthena_Prop_SnowmanV3_C::FrostExplosionRadius' has a wrong offset!");
static_assert(offsetof(AAthena_Prop_SnowmanV3_C, Enabled) == 0x000D20, "Member 'AAthena_Prop_SnowmanV3_C::Enabled' has a wrong offset!");

}

