#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_Consumable_ThrowWithTrajectory_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_Consumable_ThrowWithTrajectory_Parent.GA_Athena_Consumable_ThrowWithTrajectory_Parent_C
// 0x0190 (0x0C48 - 0x0AB8)
class UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWeaponRangedItemDefinition*        ItemDefinition;                                    // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ProjectileToThrow;                                 // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    ProjectileReference;                               // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceFromInstigatorCheck;                       // 0x0AE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMin;                                // 0x0AE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileSpeedMax;                                // 0x0AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ProjectileGravityScale;                            // 0x0AEC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileTargetingOriginOffset;                   // 0x0AF0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5941[0x4];                                     // 0x0AFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortProjectileBase*                    DummyProjectile;                                   // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DummyShouldBounce;                                 // 0x0B08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5942[0x3];                                     // 0x0B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DummyBounciness;                                   // 0x0B0C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x0B10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x0B14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x0B18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x0B1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ProjectileTargetingOriginOffset_Crouched;          // 0x0B24(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InThrowWindup;                                     // 0x0B30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5943[0x7];                                     // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortGameplayAbilityMontageInfo        ThrowWindupMontage;                                // 0x0B38(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance)
	class ABP_ProjectileTrajectory_Athena_C*      TrajectoryIndicator;                               // 0x0B90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 TrajectoryIndicatorClass;                          // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AbilityKeyPressed;                                 // 0x0BA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5944[0x3];                                     // 0x0BA1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                GrenadeTargetingOriginOffsetWater;                 // 0x0BA4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AdditionalThrowAngle;                              // 0x0BB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeedPitch;                                     // 0x0BB4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedPitch;                                     // 0x0BB8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxThrowPitch;                                     // 0x0BBC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrajectoryBounces;                              // 0x0BC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsThrowing;                                        // 0x0BC4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5945[0x3];                                     // 0x0BC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PostThrowDelay;                                    // 0x0BC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned_On_Equip;                                  // 0x0BCC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x0BCD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5946[0x2];                                     // 0x0BCE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         ThrowConsumablesEnabled;                           // 0x0BD0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_ItemThrown;                                      // 0x0BF8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           T_Quest;                                           // 0x0C18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AB_UtilityItem_Generic_Athena_C*        WeaponUtilityItemGeneric;                          // 0x0C20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DummyMaxSteps;                                     // 0x0C28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Projectile_Trajectory_Final_Location;              // 0x0C2C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Quest_NearOtherPlayer;                           // 0x0C38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceCheckToNearbyPlayers;                      // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_Consumable_ThrowWithTrajectory_Parent(int32 EntryPoint, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData_4, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData, const struct FProjectileEventData& Temp_struct_Variable, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_2, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_2, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_1, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_1, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_2, const struct FGameplayTag& Temp_struct_Variable_1, const struct FGameplayAbilityTargetDataHandle& Temp_struct_Variable_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, class AB_UtilityItem_Generic_Athena_C* K2Node_DynamicCast_AsB_Utility_Item_Generic_Athena, bool K2Node_DynamicCast_bSuccess, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_6, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_7, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_8, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_9, class AB_Prj_Athena_Consumable_Thrown_C* K2Node_DynamicCast_AsB_Prj_Athena_Consumable_Thrown, bool K2Node_DynamicCast_bSuccess_1, ECollisionChannel CallFunc_GetCollisionObjectType_ReturnValue, float CallFunc_GetScaledCapsuleSize_OutRadius, float CallFunc_GetScaledCapsuleSize_OutHalfHeight, float CallFunc_FMax_ReturnValue, float CallFunc_GetGravityZ_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, const struct FGameplayEventData& K2Node_CustomEvent_Payload_1, TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_10, const struct FGameplayEventData& Temp_struct_Variable_3, class UAbilityTask_WaitGameplayEvent* CallFunc_WaitGameplayEvent_ReturnValue, bool CallFunc_IsValid_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_11, class UAbilityTask_NetworkSyncPoint* CallFunc_WaitNetSync_ReturnValue, TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_12, bool CallFunc_IsValid_ReturnValue_1, const struct FGameplayEventData& K2Node_CustomEvent_Payload, const struct FGameplayEventData& Temp_struct_Variable_4, class UAbilityTask_WaitGameplayEvent* CallFunc_WaitGameplayEvent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool Temp_bool_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_13, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_2, const struct FGameplayAbilityTargetDataHandle& CallFunc_AbilityTargetDataFromActor_ReturnValue, TArray<struct FActiveGameplayEffectHandle>& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData_5, class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageInfoAndWaitForTrigger_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, const struct FVector& K2Node_CustomEvent_Location, const struct FRotator& K2Node_CustomEvent_Direction, const struct FVector& K2Node_CustomEvent_Projected_Landing_Location, const struct FVector& CallFunc_SpawnLocationAndRotation_OutLoc, const struct FRotator& CallFunc_SpawnLocationAndRotation_OutRot, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, float CallFunc_CalcProjectileSpeedFromPitch_GrenadeSpeed, float CallFunc_CalcProjectileSpeedFromPitch_GrenadeSpeed_1, bool CallFunc_IsStandalone_ReturnValue, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_14, bool K2Node_Event_bWasCancelled, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData_1, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_15, bool CallFunc_K2_CommitAbility_ReturnValue, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_16, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData_2, class UAbilityTask_PlayMontageAndWait* CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, class UAbilityTask_WaitDelay* CallFunc_WaitDelay_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, class UAbilityTask_WaitDelay* CallFunc_WaitDelay_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_6, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn_1, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_VSize_ReturnValue, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn_2, float CallFunc_Multiply_FloatFloat_ReturnValue, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn_3, struct FTransform& CallFunc_GetTransform_ReturnValue, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_17, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AFortProjectileBase* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, class AFortProjectileTrajectory* CallFunc_SpawnTrajectoryIndicator_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, class UFortAbilityTask_SpawnProjectileAndWait* CallFunc_SpawnProjectileAndWait_ReturnValue, class UAbilityTask_WaitDelay* CallFunc_WaitDelay_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_IsValid_ReturnValue_8, class AFortProjectileBase* CallFunc_BeginSpawningActor_SpawnedActor, bool CallFunc_BeginSpawningActor_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_IsUsingTouch_ReturnValue, bool CallFunc_NotEqual_FloatFloat_ReturnValue, struct FProjectileEventData& K2Node_CustomEvent_ProjectileData_3, bool CallFunc_CanBeDropped_Yes, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_K2_CommitAbility_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, TDelegate<void(struct FProjectileEventData& ProjectileData)> K2Node_CreateDelegate_OutputDelegate_18, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, TArray<class AFortPlayerPawn*>& K2Node_MakeArray_Array, bool CallFunc_Any_Player_Pawn_Near_Location_IsPawnNearLocation, TArray<class AFortPawn*>& CallFunc_Any_Player_Pawn_Near_Location_PawnsNearLocation, bool CallFunc_IsValid_ReturnValue_10, const struct FGameplayTag& K2Node_Select_Default);
	void UpdateTrajectory();
	void Cleanup_Trajectory_Display_On_End();
	void CleanupTrajectoryIndicatorOnUnequip();
	void InitTrajectoryVariables();
	void ThrowConsumable();
	void CleanupTrajectoryDisplay();
	void K2_OnEndAbility(bool bWasCancelled);
	void OnAbilityInputReleased();
	void Server_SpawnProjectile(const struct FVector& Location, const struct FRotator& Direction, const struct FVector& Projected_Landing_Location);
	void K2_ActivateAbility();
	void EventReceived_D907E28A43BC498803B5B0AD054E5FC1(const struct FGameplayEventData& Payload);
	void OnSync_F83BC34A45D86702B453A1BFE1D7F7E1();
	void EventReceived_13E531C84957E69360FC6EB6E9818D90(const struct FGameplayEventData& Payload);
	void OnFinish_CF0A57844174C8A87D0024B17D96B713();
	void OnCompleted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnBlendOut_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnInterrupted_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnCancelled_9B7908404C52FEE66F1ED5B2A4DFC261();
	void OnFinish_37708BDA4A053044298FDD8A986CE91D();
	void OnFinish_3698CE084DFBBB65C54A74B61C442258();
	void Triggered_B7154AE349A61FA4A5545D97B125C031(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_B7154AE349A61FA4A5545D97B125C031(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_B7154AE349A61FA4A5545D97B125C031(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Created_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void Touched_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void Bounced_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void Stopped_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void Exploded_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void Destroyed_810B87EA424E705019D253BCBCE0A171(struct FProjectileEventData& ProjectileData);
	void SetupDummyProjectile(class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AFortProjectileTrajectory* CallFunc_FinishSpawningActor_ReturnValue, class ABP_ProjectileTrajectory_Athena_C* K2Node_DynamicCast_AsBP_Projectile_Trajectory_Athena, bool K2Node_DynamicCast_bSuccess);
	void UpdateTrajectorySpline(TArray<struct FVector>& CallFunc_GetProjectileTrajectoryPoints_OutSplinePoints, TArray<struct FVector>& CallFunc_GetProjectileTrajectoryPoints_OutSplineTangents, const struct FHitResult& CallFunc_GetProjectileTrajectoryPoints_OutHitResult, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue);
	void GetProjectileDataFromWeaponID(class UFortWeaponItemDefinition* CallFunc_GetWeaponData_ReturnValue, class UFortWeaponRangedItemDefinition* K2Node_DynamicCast_AsFort_Weapon_Ranged_Item_Definition, bool K2Node_DynamicCast_bSuccess, class UClass* CallFunc_GetProjectileTemplate_ReturnValue);
	void CanBeDropped(bool* Yes, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class AController* CallFunc_GetController_ReturnValue, class AFortPlayerControllerAthena* K2Node_DynamicCast_AsFort_Player_Controller_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, const struct FGuid& CallFunc_GetInventoryGUID_ReturnValue, class UFortItem* CallFunc_BP_GetInventoryItemWithGuid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_CanBeDropped_ReturnValue);
	void GetProjectileTrajectoryPoints(TArray<struct FVector>* OutSplinePoints, TArray<struct FVector>* OutSplineTangents, struct FHitResult* OutHitResult, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, float CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_SpawnLocationAndRotation_OutLoc, const struct FRotator& CallFunc_SpawnLocationAndRotation_OutRot, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_CalcProjectileSpeedFromPitch_GrenadeSpeed, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_FMax_ReturnValue, const struct FHitResult& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents);
	class AFortProjectileTrajectory* SpawnTrajectoryIndicator(bool bSpawnOnEquip, bool CallFunc_IsValid_ReturnValue, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);

	void SpawnLocationAndRotation(struct FVector* OutLoc, struct FRotator* OutRot, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn, class AFortPlayerPawn* CallFunc_GetOwningPlayer_Player_Pawn_1, bool CallFunc_IsSurfaceSwimming_ReturnValue, const struct FRotator& CallFunc_GetDefaultTargetingRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll_1, float CallFunc_BreakRotator_Pitch_1, float CallFunc_BreakRotator_Yaw_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& K2Node_Select_Default, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& K2Node_Select_Default_1, float CallFunc_FMin_ReturnValue, const struct FVector& CallFunc_RotateAngleAxis_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue) const;
	void CalcProjectileSpeedFromPitch(float AimPitch, float* GrenadeSpeed, float CallFunc_NormalizeAxis_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FClamp_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue) const;
	void GetOwningPlayer(class AFortPlayerPawn** Player_Pawn, bool CallFunc_IsValid_ReturnValue, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess) const;
	TSubclassOf<class AFortProjectileTrajectory> GetProjectileTrajectoryActor() const;
	bool ShouldOnlyShowTrajectoryOnUse() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_Consumable_ThrowWithTrajectory_Parent_C">();
	}
	static class UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C>();
	}
};
static_assert(alignof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C) == 0x000008, "Wrong alinment on UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C");
static_assert(sizeof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C) == 0x000C48, "Wrong size on UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, PlayerPawn) == 0x000AC0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ItemDefinition) == 0x000AC8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileToThrow) == 0x000AD0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileToThrow' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileReference) == 0x000AD8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileReference' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DistanceFromInstigatorCheck) == 0x000AE0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DistanceFromInstigatorCheck' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileSpeedMin) == 0x000AE4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileSpeedMin' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileSpeedMax) == 0x000AE8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileSpeedMax' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileGravityScale) == 0x000AEC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileGravityScale' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileTargetingOriginOffset) == 0x000AF0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileTargetingOriginOffset' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyProjectile) == 0x000B00, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyShouldBounce) == 0x000B08, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyShouldBounce' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyBounciness) == 0x000B0C, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyBounciness' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyFriction) == 0x000B10, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyMaxSpeed) == 0x000B14, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyGravity) == 0x000B18, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyTimeStep) == 0x000B1C, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyExtent) == 0x000B20, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ProjectileTargetingOriginOffset_Crouched) == 0x000B24, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ProjectileTargetingOriginOffset_Crouched' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, InThrowWindup) == 0x000B30, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::InThrowWindup' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ThrowWindupMontage) == 0x000B38, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ThrowWindupMontage' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, TrajectoryIndicator) == 0x000B90, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::TrajectoryIndicator' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, TrajectoryIndicatorClass) == 0x000B98, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::TrajectoryIndicatorClass' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, AbilityKeyPressed) == 0x000BA0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::AbilityKeyPressed' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, GrenadeTargetingOriginOffsetWater) == 0x000BA4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::GrenadeTargetingOriginOffsetWater' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, AdditionalThrowAngle) == 0x000BB0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::AdditionalThrowAngle' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxSpeedPitch) == 0x000BB4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MinSpeedPitch) == 0x000BB8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MinSpeedPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxThrowPitch) == 0x000BBC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxThrowPitch' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, MaxTrajectoryBounces) == 0x000BC0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::MaxTrajectoryBounces' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, IsThrowing) == 0x000BC4, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::IsThrowing' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, PostThrowDelay) == 0x000BC8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::PostThrowDelay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, Spawned_On_Equip) == 0x000BCC, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::Spawned_On_Equip' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyCollisionChannel) == 0x000BCD, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, ThrowConsumablesEnabled) == 0x000BD0, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::ThrowConsumablesEnabled' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, T_ItemThrown) == 0x000BF8, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::T_ItemThrown' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, T_Quest) == 0x000C18, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::T_Quest' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, WeaponUtilityItemGeneric) == 0x000C20, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::WeaponUtilityItemGeneric' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DummyMaxSteps) == 0x000C28, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DummyMaxSteps' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, Projectile_Trajectory_Final_Location) == 0x000C2C, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::Projectile_Trajectory_Final_Location' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, T_Quest_NearOtherPlayer) == 0x000C38, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::T_Quest_NearOtherPlayer' has a wrong offset!");
static_assert(offsetof(UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C, DistanceCheckToNearbyPlayers) == 0x000C40, "Member 'UGA_Athena_Consumable_ThrowWithTrajectory_Parent_C::DistanceCheckToNearbyPlayers' has a wrong offset!");

}

