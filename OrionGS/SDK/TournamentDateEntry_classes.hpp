#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDateEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TournamentDateEntry.TournamentDateEntry_C
// 0x0058 (0x0710 - 0x06B8)
class UTournamentDateEntry_C final  : public UFortShowdownDetailView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          CommonBorder_DateContent;                          // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Date;                              // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Time;                              // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_Title;                             // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_EntryType;                    // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Strkethrough;                                // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsTitle;                                           // 0x06F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54D2[0x7];                                     // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Title;                                             // 0x06F8(0x0018)(Edit, BlueprintVisible)

public:
	void PreConstruct(bool IsDesignTime);
	void EventColor(struct FFortTournamentDisplayInfo& ShowdownData);
	void RefreshDataBP();
	void ExecuteUbergraph_TournamentDateEntry(int32 EntryPoint, EFortShowdownEventState CallFunc_GetEventTimeState_ReturnValue, int32 Temp_int_Variable, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_1, ESlateVisibility K2Node_Select_Default, const struct FLinearColor& Temp_struct_Variable, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, class FText Temp_text_Variable, bool K2Node_Event_IsDesignTime, struct FFortTournamentDisplayInfo& K2Node_CustomEvent_showdownData, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const struct FSlateColor& K2Node_Select_Default_1, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, int32 Temp_int_Variable_1, const struct FDateTime& CallFunc_GetEventBeginTime_ReturnValue, class FText CallFunc_GetEventDateAsText_ReturnValue, const struct FDateTime& CallFunc_GetEventEndTime_ReturnValue, const struct FLinearColor& K2Node_Select_Default_2, class FText CallFunc_GetEventDateAsText_ReturnValue_1, bool CallFunc_EqualEqual_TextText_ReturnValue, const struct FDateTime& CallFunc_GetEventBeginTime_ReturnValue_1, class FText CallFunc_GetEventTimeAsText_ReturnValue, const struct FDateTime& CallFunc_GetEventEndTime_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, class FText CallFunc_GetEventTimeAsText_ReturnValue_1, const struct FDateTime& CallFunc_GetEventBeginTime_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class FText CallFunc_GetEventDateAsText_ReturnValue_2, const struct FDateTime& CallFunc_GetEventEndTime_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class FText CallFunc_GetEventDateAsText_ReturnValue_3, bool Temp_bool_Variable_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, int32 K2Node_Select_Default_3, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_Format_ReturnValue_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TournamentDateEntry_C">();
	}
	static class UTournamentDateEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTournamentDateEntry_C>();
	}
};
static_assert(alignof(UTournamentDateEntry_C) == 0x000008, "Wrong alinment on UTournamentDateEntry_C");
static_assert(sizeof(UTournamentDateEntry_C) == 0x000710, "Wrong size on UTournamentDateEntry_C");
static_assert(offsetof(UTournamentDateEntry_C, UberGraphFrame) == 0x0006B8, "Member 'UTournamentDateEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonBorder_DateContent) == 0x0006C0, "Member 'UTournamentDateEntry_C::CommonBorder_DateContent' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Date) == 0x0006C8, "Member 'UTournamentDateEntry_C::CommonTextBlock_Date' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Time) == 0x0006D0, "Member 'UTournamentDateEntry_C::CommonTextBlock_Time' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonTextBlock_Title) == 0x0006D8, "Member 'UTournamentDateEntry_C::CommonTextBlock_Title' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, CommonWidgetSwitcher_EntryType) == 0x0006E0, "Member 'UTournamentDateEntry_C::CommonWidgetSwitcher_EntryType' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, Image_Strkethrough) == 0x0006E8, "Member 'UTournamentDateEntry_C::Image_Strkethrough' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, IsTitle) == 0x0006F0, "Member 'UTournamentDateEntry_C::IsTitle' has a wrong offset!");
static_assert(offsetof(UTournamentDateEntry_C, Title) == 0x0006F8, "Member 'UTournamentDateEntry_C::Title' has a wrong offset!");

}

