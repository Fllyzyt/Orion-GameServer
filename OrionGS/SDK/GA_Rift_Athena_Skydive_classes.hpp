#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Rift_Athena_Skydive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Rift_Athena_Skydive.GA_Rift_Athena_Skydive_C
// 0x00E8 (0x0BA0 - 0x0AB8)
class UGA_Rift_Athena_Skydive_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAnimMontage*                           FallingAnimation;                                  // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Hangtimee;                                         // 0x0AC8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621F[0x4];                                     // 0x0ACC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 VehicleSkelMesh;                                   // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         HangTime;                                          // 0x0AD8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventTag;                                          // 0x0B00(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         KickFromVehicle_;                                  // 0x0B08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             LocalPlayerSound;                                  // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GameplayCueGE;                                     // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHolstered;                                        // 0x0B48(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6220[0x3];                                     // 0x0B49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   RiftSkydiveHolster;                                // 0x0B4C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpulseStrength;                                   // 0x0B54(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bNeedsInputEnable;                                 // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6221[0x7];                                     // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           SafetyTimer;                                       // 0x0B68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewVar_0;                                          // 0x0B70(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6222[0x4];                                     // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  UnblockTagsIfPassenger;                            // 0x0B80(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Rift_Athena_Skydive(int32 EntryPoint, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class UAbilityTask_PlayMontageAndWait* CallFunc_CreatePlayMontageAndWaitProxy_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, class AController* CallFunc_GetController_ReturnValue, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsSkydiving_ReturnValue, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue, bool CallFunc_VehicleIsInAir_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class AController* CallFunc_GetController_ReturnValue_1, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_1, bool K2Node_DynamicCast_bSuccess_2, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, class UCharacterMovementComponent* K2Node_DynamicCast_AsCharacter_Movement_Component, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue_3, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, float CallFunc_GetValueAtLevel_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue_3, float CallFunc_Add_FloatFloat_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue_1, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, class AFortCharacterVehicle_Ostrich* K2Node_DynamicCast_AsFort_Character_Vehicle_Ostrich, bool K2Node_DynamicCast_bSuccess_4, class AFortAthenaJackalVehicle* K2Node_DynamicCast_AsFort_Athena_Jackal_Vehicle, bool K2Node_DynamicCast_bSuccess_5, class AFortAthenaFerretVehicle* K2Node_DynamicCast_AsFort_Athena_Ferret_Vehicle, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_IsValid_ReturnValue_4, class AController* CallFunc_GetController_ReturnValue_2, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_2, bool K2Node_DynamicCast_bSuccess_7, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue_2, bool CallFunc_IsInVehicle_ReturnValue_1, class APlayerController* CallFunc_GetLocalViewingPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, class AController* CallFunc_GetController_ReturnValue_3, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller_3, bool K2Node_DynamicCast_bSuccess_8, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, bool CallFunc_IsPassengerInVehicle_ReturnValue, bool Temp_bool_IsClosed_Variable, class AActor* K2Node_CustomEvent_DestroyedActor, class UAbilityTask_WaitGameplayTagAdded* CallFunc_WaitGameplayTagAdd_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, bool Temp_bool_Has_Been_Initd_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, class AFortPlayerPawn* K2Node_CustomEvent_FortPlayerPawn, TDelegate<void(struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate_4, struct FHitResult& K2Node_CustomEvent_Hit, TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_5, bool CallFunc_IsValid_ReturnValue_7, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_6, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_7, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_8);
	void HandleForceEnd();
	void OnPawnLanded(struct FHitResult& Hit);
	void OnPawnEnteredWater(class AFortPlayerPawn* FortPlayerPawn);
	void OnDestroyed_Event_0(class AActor* DestroyedActor);
	void SetPlayerToSkydive();
	void K2_ActivateAbility();
	void Added_C39EFBAB480B446A6927009E5953EC41();
	void OnCompleted_AA0523504B7CA4F488E1E6A11F48308A();
	void OnBlendOut_AA0523504B7CA4F488E1E6A11F48308A();
	void OnInterrupted_AA0523504B7CA4F488E1E6A11F48308A();
	void OnCancelled_AA0523504B7CA4F488E1E6A11F48308A();
	void K2_OnEndAbility(bool bWasCancelled, TDelegate<void(struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate, TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AController* CallFunc_GetController_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class APlayerController* K2Node_DynamicCast_AsPlayer_Controller, bool K2Node_DynamicCast_bSuccess);
	void RemoveSkydivingGameplayEffect(bool CallFunc_IsValid_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Rift_Athena_Skydive_C">();
	}
	static class UGA_Rift_Athena_Skydive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Rift_Athena_Skydive_C>();
	}
};
static_assert(alignof(UGA_Rift_Athena_Skydive_C) == 0x000008, "Wrong alinment on UGA_Rift_Athena_Skydive_C");
static_assert(sizeof(UGA_Rift_Athena_Skydive_C) == 0x000BA0, "Wrong size on UGA_Rift_Athena_Skydive_C");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Rift_Athena_Skydive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, FallingAnimation) == 0x000AC0, "Member 'UGA_Rift_Athena_Skydive_C::FallingAnimation' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, Hangtimee) == 0x000AC8, "Member 'UGA_Rift_Athena_Skydive_C::Hangtimee' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, VehicleSkelMesh) == 0x000AD0, "Member 'UGA_Rift_Athena_Skydive_C::VehicleSkelMesh' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, HangTime) == 0x000AD8, "Member 'UGA_Rift_Athena_Skydive_C::HangTime' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, EventTag) == 0x000B00, "Member 'UGA_Rift_Athena_Skydive_C::EventTag' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, KickFromVehicle_) == 0x000B08, "Member 'UGA_Rift_Athena_Skydive_C::KickFromVehicle_' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, LocalPlayerSound) == 0x000B30, "Member 'UGA_Rift_Athena_Skydive_C::LocalPlayerSound' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, GameplayCueGE) == 0x000B38, "Member 'UGA_Rift_Athena_Skydive_C::GameplayCueGE' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, PlayerPawn) == 0x000B40, "Member 'UGA_Rift_Athena_Skydive_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, bHolstered) == 0x000B48, "Member 'UGA_Rift_Athena_Skydive_C::bHolstered' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, RiftSkydiveHolster) == 0x000B4C, "Member 'UGA_Rift_Athena_Skydive_C::RiftSkydiveHolster' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, ImpulseStrength) == 0x000B54, "Member 'UGA_Rift_Athena_Skydive_C::ImpulseStrength' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, bNeedsInputEnable) == 0x000B60, "Member 'UGA_Rift_Athena_Skydive_C::bNeedsInputEnable' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, SafetyTimer) == 0x000B68, "Member 'UGA_Rift_Athena_Skydive_C::SafetyTimer' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, NewVar_0) == 0x000B70, "Member 'UGA_Rift_Athena_Skydive_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UGA_Rift_Athena_Skydive_C, UnblockTagsIfPassenger) == 0x000B80, "Member 'UGA_Rift_Athena_Skydive_C::UnblockTagsIfPassenger' has a wrong offset!");

}

