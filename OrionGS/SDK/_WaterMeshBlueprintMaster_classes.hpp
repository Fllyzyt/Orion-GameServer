#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: _WaterMeshBlueprintMaster

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass _WaterMeshBlueprintMaster._WaterMeshBlueprintMaster_C
// 0x0068 (0x0288 - 0x0220)
class A_WaterMeshBlueprintMaster_C final  : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0220(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   CollisionMesh1;                                    // 0x0228(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisionMesh2;                                    // 0x0230(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisionMesh4;                                    // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CollisionMesh3;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Number_of_Collision_Meshes;                        // 0x0250(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlipFlow;                                          // 0x0254(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NoFlow;                                            // 0x0255(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FAD[0x2];                                     // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     FlippedMaterial;                                   // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Characters_Personal_Water_Counter;         // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Water_Interactions;                                // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Entering_True_Exiting_False;                       // 0x0265(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FAE[0x2];                                     // 0x0266(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerPawn_Generic_Parent_C*           ExternalActor;                                     // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Internal_Mesh;                                     // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Continue;                                          // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5FAF[0x3];                                     // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Minimum_time_between_splashes;                     // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowTestMesh;                                      // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          HasExecutedConstuctionScript;                      // 0x0281(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Deep_Water_Asset_;                              // 0x0282(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph__WaterMeshBlueprintMaster(int32 EntryPoint, const struct FTransform& CallFunc_Find_Placement_on_water_mesh_surfaces_Traced_Transform, const struct FVector& CallFunc_Find_Placement_on_water_mesh_surfaces_VelocityVector, bool CallFunc_Find_Placement_on_water_mesh_surfaces_Trace_Hit, bool CallFunc_BooleanAND_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_GetGameTimeInSeconds_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, class AFortWindManager* CallFunc_GetWindManager_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, class AWindManager_C* K2Node_DynamicCast_AsWind_Manager, bool K2Node_DynamicCast_bSuccess, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_7, class AActor* K2Node_ComponentBoundEvent_OtherActor_7, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_7, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_7, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_6, class AActor* K2Node_ComponentBoundEvent_OtherActor_6, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_6, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_6, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_5, class AActor* K2Node_ComponentBoundEvent_OtherActor_5, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_5, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_5, bool K2Node_ComponentBoundEvent_bFromSweep_3, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult_3, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_4, class AActor* K2Node_ComponentBoundEvent_OtherActor_4, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_4, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_4, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_3, class AActor* K2Node_ComponentBoundEvent_OtherActor_3, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_3, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_3, bool K2Node_ComponentBoundEvent_bFromSweep_2, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_2, class AActor* K2Node_ComponentBoundEvent_OtherActor_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_2, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_2, bool K2Node_ComponentBoundEvent_bFromSweep_1, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex);
	void ReceiveBeginPlay();
	void Construct();
	void BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_69_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_185_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_190_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_196_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__CollisionMesh4_K2Node_ComponentBoundEvent_203_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CollisionMesh_K2Node_ComponentBoundEvent_66_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void BndEvt__CollisionMesh3_K2Node_ComponentBoundEvent_211_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__CollisionMesh2_K2Node_ComponentBoundEvent_220_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void UserConstructionScript();
	void SetupMeshCollisionVolumes(class UStaticMeshComponent* StaticMeshComponent, int32 Target_Int, bool CallFunc_IsValid_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void Find_Placement_on_water_mesh_surfaces(struct FTransform* Traced_Transform, struct FVector* VelocityVector, bool* Trace_Hit, const struct FLinearColor& NewLocalVar_0, bool Temp_bool_Variable, class UStaticMeshComponent* K2Node_Select_Default, const struct FVector& CallFunc_GetVelocity_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_K2_LineTraceComponent_HitLocation, const struct FVector& CallFunc_K2_LineTraceComponent_HitNormal, class FName CallFunc_K2_LineTraceComponent_BoneName, const struct FHitResult& CallFunc_K2_LineTraceComponent_OutHit, bool CallFunc_K2_LineTraceComponent_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue_1, float CallFunc_VSize_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FRotator& CallFunc_MakeRotFromXZ_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue);
	void Handle_Water_Penetration_Components_And_Arrays(bool In_T_Out_F, class AActor* Touching_Actor, class UStaticMeshComponent* Touching_Volume, int32 Temp_int_Variable, class APlayerPawn_Generic_Parent_C* K2Node_DynamicCast_AsPlayer_Pawn_Generic_Parent, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Variable_1, bool Temp_bool_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 K2Node_Select_Default, int32 CallFunc_Add_IntInt_ReturnValue);
	void Construction(int32 CallFunc_GetNumMaterials_ReturnValue, int32 Temp_int_Variable, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"_WaterMeshBlueprintMaster_C">();
	}
	static class A_WaterMeshBlueprintMaster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<A_WaterMeshBlueprintMaster_C>();
	}
};
static_assert(alignof(A_WaterMeshBlueprintMaster_C) == 0x000008, "Wrong alinment on A_WaterMeshBlueprintMaster_C");
static_assert(sizeof(A_WaterMeshBlueprintMaster_C) == 0x000288, "Wrong size on A_WaterMeshBlueprintMaster_C");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, UberGraphFrame) == 0x000220, "Member 'A_WaterMeshBlueprintMaster_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, CollisionMesh1) == 0x000228, "Member 'A_WaterMeshBlueprintMaster_C::CollisionMesh1' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, CollisionMesh2) == 0x000230, "Member 'A_WaterMeshBlueprintMaster_C::CollisionMesh2' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, CollisionMesh4) == 0x000238, "Member 'A_WaterMeshBlueprintMaster_C::CollisionMesh4' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, CollisionMesh3) == 0x000240, "Member 'A_WaterMeshBlueprintMaster_C::CollisionMesh3' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, StaticMesh1) == 0x000248, "Member 'A_WaterMeshBlueprintMaster_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Number_of_Collision_Meshes) == 0x000250, "Member 'A_WaterMeshBlueprintMaster_C::Number_of_Collision_Meshes' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, FlipFlow) == 0x000254, "Member 'A_WaterMeshBlueprintMaster_C::FlipFlow' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, NoFlow) == 0x000255, "Member 'A_WaterMeshBlueprintMaster_C::NoFlow' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, FlippedMaterial) == 0x000258, "Member 'A_WaterMeshBlueprintMaster_C::FlippedMaterial' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Current_Characters_Personal_Water_Counter) == 0x000260, "Member 'A_WaterMeshBlueprintMaster_C::Current_Characters_Personal_Water_Counter' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Water_Interactions) == 0x000264, "Member 'A_WaterMeshBlueprintMaster_C::Water_Interactions' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Entering_True_Exiting_False) == 0x000265, "Member 'A_WaterMeshBlueprintMaster_C::Entering_True_Exiting_False' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, ExternalActor) == 0x000268, "Member 'A_WaterMeshBlueprintMaster_C::ExternalActor' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Internal_Mesh) == 0x000270, "Member 'A_WaterMeshBlueprintMaster_C::Internal_Mesh' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Continue) == 0x000278, "Member 'A_WaterMeshBlueprintMaster_C::Continue' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Minimum_time_between_splashes) == 0x00027C, "Member 'A_WaterMeshBlueprintMaster_C::Minimum_time_between_splashes' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, ShowTestMesh) == 0x000280, "Member 'A_WaterMeshBlueprintMaster_C::ShowTestMesh' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, HasExecutedConstuctionScript) == 0x000281, "Member 'A_WaterMeshBlueprintMaster_C::HasExecutedConstuctionScript' has a wrong offset!");
static_assert(offsetof(A_WaterMeshBlueprintMaster_C, Is_Deep_Water_Asset_) == 0x000282, "Member 'A_WaterMeshBlueprintMaster_C::Is_Deep_Water_Asset_' has a wrong offset!");

}

