#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Prj_Athena_SneakySnowmanV2

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Prj_Athena_SneakySnowmanV2.B_Prj_Athena_SneakySnowmanV2_C
// 0x00B8 (0x0930 - 0x0878)
class AB_Prj_Athena_SneakySnowmanV2_C : public AFortProjectileBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0878(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 SK_Sneaky_Snowman_Throw;                           // 0x0880(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FX_Trail;                                          // 0x0888(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCollisionAudioComponent*           FortCollisionAudio;                                // 0x0890(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URotatingMovementComponent*             RotatingMovement;                                  // 0x0898(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Audio_InAir;                                       // 0x08A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Cue_HitPlayer;                                     // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               SnowmanItemDef;                                    // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HitPlayer;                                         // 0x08B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_598E[0x7];                                     // 0x08B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 GE_ApplyEnemySnowman;                              // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        SnowmanSpawnFX;                                    // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ShouldSnowmanEnemies;                              // 0x08D0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             SoundOnExplo;                                      // 0x08F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitLocation;                                       // 0x0900(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_598F[0x4];                                     // 0x090C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 HitActor;                                          // 0x0910(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UFortItem*>                      SnowmanItemInstances;                              // 0x0918(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 PropClass;                                         // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Prj_Athena_SneakySnowmanV2(int32 EntryPoint, bool CallFunc_IsDedicatedServer_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Add_FloatFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue, TArray<class AActor*>& K2Node_Event_HitActors, TArray<struct FHitResult>& K2Node_Event_HitResults, bool CallFunc_HasAuthority_ReturnValue, bool Temp_bool_Variable, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class AFortWaterBodyActor* K2Node_ComponentBoundEvent_WaterBody, class UFortWaterInteractionComponent* K2Node_ComponentBoundEvent_WaterInteractionComponent, bool K2Node_ComponentBoundEvent_bIsFirstBody, class UFortItem* CallFunc_Array_Get_Item, int32 CallFunc_GetNumInStack_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, const struct FActiveGameplayEffectHandle& CallFunc_ApplyGlobalEnvironmentGameplayEffectToActor_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, class APawn* CallFunc_GetInstigator_ReturnValue_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_1, class AController* CallFunc_GetController_ReturnValue, class AFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess_2, float CallFunc_VSize_ReturnValue, int32 CallFunc_K2_RemoveItemFromPlayer_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int32 CallFunc_K2_RemoveFortItemFromPlayer_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, bool CallFunc_IsInVehicle_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, float CallFunc_VSize_ReturnValue_1, TArray<class AActor*>& Temp_object_Variable, bool CallFunc_LessEqual_FloatFloat_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class AActor* K2Node_Event_OtherActor, class UPrimitiveComponent* K2Node_Event_OtherComp, struct FHitResult& K2Node_Event_HitResult, bool K2Node_Event_bIsOverlap, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class AWaterBody* K2Node_DynamicCast_AsWater_Body, bool K2Node_DynamicCast_bSuccess_4, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_2, bool K2Node_DynamicCast_bSuccess_5, class AAthena_Prop_SneakySnowmanV2_C* K2Node_DynamicCast_AsAthena_Prop_Sneaky_Snowman_V2, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_ShouldApplySnowman__ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AActor* CallFunc_FinishSpawningActor_ReturnValue, class AFortAthenaVehicle* K2Node_DynamicCast_AsFort_Athena_Vehicle, bool K2Node_DynamicCast_bSuccess_7, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, class AB_HidingProp_C* K2Node_DynamicCast_AsB_Hiding_Prop, bool K2Node_DynamicCast_bSuccess_8, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_3, bool K2Node_DynamicCast_bSuccess_9, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array_1, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue);
	void Apply_Snowman_To_Self();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnEnterWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* Param_WaterInteractionComponent, bool bIsFirstBody);
	void ReceiveBeginPlay();
	void OnExploded(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void Explode();
	void OnTouched(class AActor* OtherActor, class UPrimitiveComponent* OtherComp, struct FHitResult& HitResult, bool bIsOverlap);
	void UserConstructionScript(bool CallFunc_IsDedicatedServer_ReturnValue);
	void Should_Bounce_(const struct FVector& Hit_Normal, const struct FVector& CallFunc_GetUpVector_ReturnValue, float CallFunc_Dot_VectorVector_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);
	bool ShouldApplySnowman_(class UObject* PlayerPawn, bool Temp_bool_Variable, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, class APawn* CallFunc_GetInstigator_ReturnValue, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void UpdateQuest(class AFortPlayerController* FortPC, bool CallFunc_HasAuthority_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Prj_Athena_SneakySnowmanV2_C">();
	}
	static class AB_Prj_Athena_SneakySnowmanV2_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Prj_Athena_SneakySnowmanV2_C>();
	}
};
static_assert(alignof(AB_Prj_Athena_SneakySnowmanV2_C) == 0x000008, "Wrong alinment on AB_Prj_Athena_SneakySnowmanV2_C");
static_assert(sizeof(AB_Prj_Athena_SneakySnowmanV2_C) == 0x000930, "Wrong size on AB_Prj_Athena_SneakySnowmanV2_C");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, UberGraphFrame) == 0x000878, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, SK_Sneaky_Snowman_Throw) == 0x000880, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::SK_Sneaky_Snowman_Throw' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, FX_Trail) == 0x000888, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::FX_Trail' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, FortCollisionAudio) == 0x000890, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::FortCollisionAudio' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, RotatingMovement) == 0x000898, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::RotatingMovement' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, Audio_InAir) == 0x0008A0, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::Audio_InAir' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, Cue_HitPlayer) == 0x0008A8, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::Cue_HitPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, SnowmanItemDef) == 0x0008B0, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::SnowmanItemDef' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, HitPlayer) == 0x0008B8, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::HitPlayer' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, GE_ApplyEnemySnowman) == 0x0008C0, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::GE_ApplyEnemySnowman' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, SnowmanSpawnFX) == 0x0008C8, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::SnowmanSpawnFX' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, ShouldSnowmanEnemies) == 0x0008D0, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::ShouldSnowmanEnemies' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, SoundOnExplo) == 0x0008F8, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::SoundOnExplo' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, HitLocation) == 0x000900, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::HitLocation' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, HitActor) == 0x000910, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::HitActor' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, SnowmanItemInstances) == 0x000918, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::SnowmanItemInstances' has a wrong offset!");
static_assert(offsetof(AB_Prj_Athena_SneakySnowmanV2_C, PropClass) == 0x000928, "Member 'AB_Prj_Athena_SneakySnowmanV2_C::PropClass' has a wrong offset!");

}

