#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ShowdownTournamentPosterFront

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ShowdownTournamentPosterFront.ShowdownTournamentPosterFront_C
// 0x0110 (0x07C8 - 0x06B8)
class UShowdownTournamentPosterFront_C final  : public UFortShowdownDetailView
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_Alert;                                      // 0x06C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LockIcon;                                    // 0x06C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_LockIconWorldCup;                            // 0x06D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PosterShadow;                                // 0x06D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_318;                               // 0x06E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_431;                               // 0x06E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_551;                               // 0x06F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_676;                               // 0x06F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEventLocked;                                // 0x0700(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverlayEventLockedWorldCup;                        // 0x0708(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownPin_C*                         ShowdownPin;                                       // 0x0710(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           StandardLayout;                                    // 0x0718(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  Switcher_PosterTextLayout;                         // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_EventAlert;                                   // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentDateText;                                // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentDateTextWorldCup;                        // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle1;                                  // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle1WorldCup;                          // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle2;                                  // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentTitle2WorldCup;                          // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WorldCupLayout;                                    // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSlateColor                            TitleColor;                                        // 0x0768(0x0028)(Edit, BlueprintVisible)
	bool                                          HiddenWhileLoading;                                // 0x0790(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75E9[0x7];                                     // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            SubColor;                                          // 0x0798(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HidePin;                                           // 0x07C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void GetTournamentDateText(class FText* TournamentDate, class FText Temp_text_Variable, class FText Temp_text_Variable_1, bool Temp_bool_Variable, class FText Temp_text_Variable_2, bool Temp_bool_Variable_1, class FText Temp_text_Variable_3, int32 Temp_int_Variable, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText Temp_text_Variable_16, int32 Temp_int_Variable_1, class FText Temp_text_Variable_17, class FText Temp_text_Variable_18, class FText Temp_text_Variable_19, class FText Temp_text_Variable_20, class FText Temp_text_Variable_21, class FText Temp_text_Variable_22, class FText Temp_text_Variable_23, class FText Temp_text_Variable_24, class FText Temp_text_Variable_25, class FText Temp_text_Variable_26, class FText Temp_text_Variable_27, class FText Temp_text_Variable_28, class FText Temp_text_Variable_29, const struct FDateTime& CallFunc_GetTournamentEndTime_ReturnValue, int32 CallFunc_BreakDateTime_Year, int32 CallFunc_BreakDateTime_Month, int32 CallFunc_BreakDateTime_Day, int32 CallFunc_BreakDateTime_Hour, int32 CallFunc_BreakDateTime_Minute, int32 CallFunc_BreakDateTime_Second, int32 CallFunc_BreakDateTime_Millisecond, const struct FDateTime& CallFunc_GetTournamentBeginTime_ReturnValue, bool Temp_bool_Variable_2, int32 CallFunc_BreakDateTime_Year_1, int32 CallFunc_BreakDateTime_Month_1, int32 CallFunc_BreakDateTime_Day_1, int32 CallFunc_BreakDateTime_Hour_1, int32 CallFunc_BreakDateTime_Minute_1, int32 CallFunc_BreakDateTime_Second_1, int32 CallFunc_BreakDateTime_Millisecond_1, const struct FDateTime& CallFunc_GetTournamentEndTime_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_BreakDateTime_Year_2, int32 CallFunc_BreakDateTime_Month_2, int32 CallFunc_BreakDateTime_Day_2, int32 CallFunc_BreakDateTime_Hour_2, int32 CallFunc_BreakDateTime_Minute_2, int32 CallFunc_BreakDateTime_Second_2, int32 CallFunc_BreakDateTime_Millisecond_2, class FText CallFunc_Conv_IntToText_ReturnValue, class FText K2Node_Select_Default, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, const struct FDateTime& CallFunc_GetTournamentBeginTime_ReturnValue_1, const struct FDateTime& CallFunc_GetTournamentEndTime_ReturnValue_2, int32 CallFunc_BreakDateTime_Year_3, int32 CallFunc_BreakDateTime_Month_3, int32 CallFunc_BreakDateTime_Day_3, int32 CallFunc_BreakDateTime_Hour_3, int32 CallFunc_BreakDateTime_Minute_3, int32 CallFunc_BreakDateTime_Second_3, int32 CallFunc_BreakDateTime_Millisecond_3, int32 CallFunc_BreakDateTime_Year_4, int32 CallFunc_BreakDateTime_Month_4, int32 CallFunc_BreakDateTime_Day_4, int32 CallFunc_BreakDateTime_Hour_4, int32 CallFunc_BreakDateTime_Minute_4, int32 CallFunc_BreakDateTime_Second_4, int32 CallFunc_BreakDateTime_Millisecond_4, class FText CallFunc_Conv_IntToText_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, class FText K2Node_Select_Default_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class FText K2Node_Select_Default_2, const struct FDateTime& CallFunc_GetTournamentBeginTime_ReturnValue_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, int32 CallFunc_BreakDateTime_Year_5, int32 CallFunc_BreakDateTime_Month_5, int32 CallFunc_BreakDateTime_Day_5, int32 CallFunc_BreakDateTime_Hour_5, int32 CallFunc_BreakDateTime_Minute_5, int32 CallFunc_BreakDateTime_Second_5, int32 CallFunc_BreakDateTime_Millisecond_5, class FText K2Node_Select_Default_3, class FText K2Node_Select_Default_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue);
	void RefreshDataBP();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__Image_PosterFront_K2Node_ComponentBoundEvent_1_onLoadingCompleted__DelegateSignature();
	void ExecuteUbergraph_ShowdownTournamentPosterFront(int32 EntryPoint, EFortEventWindowEligibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility Temp_byte_Variable_2, ESlateVisibility Temp_byte_Variable_3, ESlateVisibility Temp_byte_Variable_4, bool Temp_bool_Variable, bool K2Node_Event_IsDesignTime, ESlateVisibility Temp_byte_Variable_5, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_TextIsEmpty_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, class FText CallFunc_TextToUpper_ReturnValue_1, class FText CallFunc_TextToUpper_ReturnValue_2, class FText CallFunc_TextToUpper_ReturnValue_3, EFortEventWindowEligibility CallFunc_GetTournamentEligibility_ReturnValue, ESlateVisibility K2Node_Select_Default, bool CallFunc_IsWorldCupQualifierEvent_ReturnValue, class UWidget* K2Node_Select_Default_1, ESlateVisibility Temp_byte_Variable_6, EFortShowdownEventState CallFunc_GetTournamentTimeState_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_1, bool Temp_bool_Variable_1, ESlateVisibility K2Node_Select_Default_2);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ShowdownTournamentPosterFront_C">();
	}
	static class UShowdownTournamentPosterFront_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UShowdownTournamentPosterFront_C>();
	}
};
static_assert(alignof(UShowdownTournamentPosterFront_C) == 0x000008, "Wrong alinment on UShowdownTournamentPosterFront_C");
static_assert(sizeof(UShowdownTournamentPosterFront_C) == 0x0007C8, "Wrong size on UShowdownTournamentPosterFront_C");
static_assert(offsetof(UShowdownTournamentPosterFront_C, UberGraphFrame) == 0x0006B8, "Member 'UShowdownTournamentPosterFront_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Border_Alert) == 0x0006C0, "Member 'UShowdownTournamentPosterFront_C::Border_Alert' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_LockIcon) == 0x0006C8, "Member 'UShowdownTournamentPosterFront_C::Image_LockIcon' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_LockIconWorldCup) == 0x0006D0, "Member 'UShowdownTournamentPosterFront_C::Image_LockIconWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Image_PosterShadow) == 0x0006D8, "Member 'UShowdownTournamentPosterFront_C::Image_PosterShadow' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_318) == 0x0006E0, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_318' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_431) == 0x0006E8, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_431' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_551) == 0x0006F0, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_551' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, InvalidationBox_676) == 0x0006F8, "Member 'UShowdownTournamentPosterFront_C::InvalidationBox_676' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, OverlayEventLocked) == 0x000700, "Member 'UShowdownTournamentPosterFront_C::OverlayEventLocked' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, OverlayEventLockedWorldCup) == 0x000708, "Member 'UShowdownTournamentPosterFront_C::OverlayEventLockedWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, ShowdownPin) == 0x000710, "Member 'UShowdownTournamentPosterFront_C::ShowdownPin' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, StandardLayout) == 0x000718, "Member 'UShowdownTournamentPosterFront_C::StandardLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Switcher_PosterTextLayout) == 0x000720, "Member 'UShowdownTournamentPosterFront_C::Switcher_PosterTextLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, Text_EventAlert) == 0x000728, "Member 'UShowdownTournamentPosterFront_C::Text_EventAlert' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentDateText) == 0x000730, "Member 'UShowdownTournamentPosterFront_C::TournamentDateText' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentDateTextWorldCup) == 0x000738, "Member 'UShowdownTournamentPosterFront_C::TournamentDateTextWorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle1) == 0x000740, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle1' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle1WorldCup) == 0x000748, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle1WorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle2) == 0x000750, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle2' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TournamentTitle2WorldCup) == 0x000758, "Member 'UShowdownTournamentPosterFront_C::TournamentTitle2WorldCup' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, WorldCupLayout) == 0x000760, "Member 'UShowdownTournamentPosterFront_C::WorldCupLayout' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, TitleColor) == 0x000768, "Member 'UShowdownTournamentPosterFront_C::TitleColor' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, HiddenWhileLoading) == 0x000790, "Member 'UShowdownTournamentPosterFront_C::HiddenWhileLoading' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, SubColor) == 0x000798, "Member 'UShowdownTournamentPosterFront_C::SubColor' has a wrong offset!");
static_assert(offsetof(UShowdownTournamentPosterFront_C, HidePin) == 0x0007C0, "Member 'UShowdownTournamentPosterFront_C::HidePin' has a wrong offset!");

}

