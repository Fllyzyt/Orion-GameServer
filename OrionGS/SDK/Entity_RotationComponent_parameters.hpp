#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Entity_RotationComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function Entity_RotationComponent.RotationComponent.addToEulerRotation
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_AddToEulerRotation final 
{
public:
	class UVector3*                               __verse_0x5C20106F_v;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_AddToEulerRotation) == 0x000008, "Wrong alinment on RotationComponent_AddToEulerRotation");
static_assert(sizeof(RotationComponent_AddToEulerRotation) == 0x000008, "Wrong size on RotationComponent_AddToEulerRotation");
static_assert(offsetof(RotationComponent_AddToEulerRotation, __verse_0x5C20106F_v) == 0x000000, "Member 'RotationComponent_AddToEulerRotation::__verse_0x5C20106F_v' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.getEulerRotation
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_GetEulerRotation final 
{
public:
	class UVector3*                               RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_GetEulerRotation) == 0x000008, "Wrong alinment on RotationComponent_GetEulerRotation");
static_assert(sizeof(RotationComponent_GetEulerRotation) == 0x000008, "Wrong size on RotationComponent_GetEulerRotation");
static_assert(offsetof(RotationComponent_GetEulerRotation, RetVal) == 0x000000, "Member 'RotationComponent_GetEulerRotation::RetVal' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.GetForwardVector
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_GetForwardVector final 
{
public:
	class UVector3*                               RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_GetForwardVector) == 0x000008, "Wrong alinment on RotationComponent_GetForwardVector");
static_assert(sizeof(RotationComponent_GetForwardVector) == 0x000008, "Wrong size on RotationComponent_GetForwardVector");
static_assert(offsetof(RotationComponent_GetForwardVector, RetVal) == 0x000000, "Member 'RotationComponent_GetForwardVector::RetVal' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.GetRightVector
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_GetRightVector final 
{
public:
	class UVector3*                               RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_GetRightVector) == 0x000008, "Wrong alinment on RotationComponent_GetRightVector");
static_assert(sizeof(RotationComponent_GetRightVector) == 0x000008, "Wrong size on RotationComponent_GetRightVector");
static_assert(offsetof(RotationComponent_GetRightVector, RetVal) == 0x000000, "Member 'RotationComponent_GetRightVector::RetVal' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.GetUpVector
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_GetUpVector final 
{
public:
	class UVector3*                               RetVal;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_GetUpVector) == 0x000008, "Wrong alinment on RotationComponent_GetUpVector");
static_assert(sizeof(RotationComponent_GetUpVector) == 0x000008, "Wrong size on RotationComponent_GetUpVector");
static_assert(offsetof(RotationComponent_GetUpVector, RetVal) == 0x000000, "Member 'RotationComponent_GetUpVector::RetVal' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.setEulerRotation
// 0x0008 (0x0008 - 0x0000)
struct RotationComponent_SetEulerRotation final 
{
public:
	class UVector3*                               __verse_0x5C20106F_v;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_SetEulerRotation) == 0x000008, "Wrong alinment on RotationComponent_SetEulerRotation");
static_assert(sizeof(RotationComponent_SetEulerRotation) == 0x000008, "Wrong size on RotationComponent_SetEulerRotation");
static_assert(offsetof(RotationComponent_SetEulerRotation, __verse_0x5C20106F_v) == 0x000000, "Member 'RotationComponent_SetEulerRotation::__verse_0x5C20106F_v' has a wrong offset!");

// Function Entity_RotationComponent.RotationComponent.setForwardVectorFromXY
// 0x0010 (0x0010 - 0x0000)
struct RotationComponent_SetForwardVectorFromXY final 
{
public:
	class UVector3*                               __verse_0x6F57CF8F_x;                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector3*                               __verse_0x0A307337_y;                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(RotationComponent_SetForwardVectorFromXY) == 0x000008, "Wrong alinment on RotationComponent_SetForwardVectorFromXY");
static_assert(sizeof(RotationComponent_SetForwardVectorFromXY) == 0x000010, "Wrong size on RotationComponent_SetForwardVectorFromXY");
static_assert(offsetof(RotationComponent_SetForwardVectorFromXY, __verse_0x6F57CF8F_x) == 0x000000, "Member 'RotationComponent_SetForwardVectorFromXY::__verse_0x6F57CF8F_x' has a wrong offset!");
static_assert(offsetof(RotationComponent_SetForwardVectorFromXY, __verse_0x0A307337_y) == 0x000008, "Member 'RotationComponent_SetForwardVectorFromXY::__verse_0x0A307337_y' has a wrong offset!");

}

