#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_SCMachine_Passive

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_SCMachine_Passive.GA_Athena_SCMachine_Passive_C
// 0x0020 (0x0AD8 - 0x0AB8)
class UGA_Athena_SCMachine_Passive_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawnAthena*                  PlayerPawn;                                        // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SpawnZOffset;                                      // 0x0AC8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Athena_SCMachine_Passive(int32 EntryPoint, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsBattleLabModePlaylist_ReturnValue, bool CallFunc_IsCreativeLTMPlaylist_ReturnValue, bool CallFunc_IsCreativeOrPlaygroundModePlaylist_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, uint8 CallFunc_GetActorTeam_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class AFortGameStateZone* K2Node_DynamicCast_AsFort_Game_State_Zone, bool K2Node_DynamicCast_bSuccess_1, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, bool CallFunc_Check_Resurrection_Active_bEnabled, class ABGA_Athena_SCMachine_Pickup_C* CallFunc_FinishSpawningActor_ReturnValue, class AFortPlayerPawnAthena* K2Node_CustomEvent_FortPlayerPawnAthena, class AFortPlayerState* K2Node_DynamicCast_AsFort_Player_State, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsRespawningAllowed_ReturnValue);
	void K2_ActivateAbility();
	void HandleOnFortPlayerDied(class AFortPlayerPawnAthena* FortPlayerPawnAthena);
	void Spawn();
	void SaveOutPlayer(class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess);
	void Check_Resurrection_Active(bool* bEnabled, class AFortGameStateAthena* GameStateAthena, bool PlaylistValid, class FName TestPlaylist, class AGameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_IsResurrectionEnabled_ReturnValue, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_SCMachine_Passive_C">();
	}
	static class UGA_Athena_SCMachine_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_SCMachine_Passive_C>();
	}
};
static_assert(alignof(UGA_Athena_SCMachine_Passive_C) == 0x000008, "Wrong alinment on UGA_Athena_SCMachine_Passive_C");
static_assert(sizeof(UGA_Athena_SCMachine_Passive_C) == 0x000AD8, "Wrong size on UGA_Athena_SCMachine_Passive_C");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_SCMachine_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, PlayerPawn) == 0x000AC0, "Member 'UGA_Athena_SCMachine_Passive_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_SCMachine_Passive_C, SpawnZOffset) == 0x000AC8, "Member 'UGA_Athena_SCMachine_Passive_C::SpawnZOffset' has a wrong offset!");

}

