#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_BGA_Athena_EnvCampFire

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Curie_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_BGA_Athena_EnvCampFire.B_BGA_Athena_EnvCampFire_C
// 0x02E0 (0x0AB0 - 0x07D0)
class AB_BGA_Athena_EnvCampFire_C : public ABuildingGameplayActorCampFire
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortLinkToActorComponent*              FortLinkToActor;                                   // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FirePitEmpty;                                      // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Cylinder;                                          // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        FireLoc;                                           // 0x07F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Wood;                                              // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Root;                                              // 0x0808(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortCurieComponent*                    FortCurie;                                         // 0x0810(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              InteractingPawn;                                   // 0x0818(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BeenUsed;                                          // 0x0820(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_738F[0x3];                                     // 0x0821(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DousedSmokeLife;                                   // 0x0824(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_DousedSmokeLife;                               // 0x0828(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HotfixedEnabled;                                   // 0x0850(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DestroyIfDisabled;                                 // 0x0851(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Destroyed;                                         // 0x0852(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_7390[0x5];                                     // 0x0853(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_HotfixEnabled;                                 // 0x0858(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                TraceOffset;                                       // 0x0880(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Season7Campfire;                                   // 0x088C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7391[0x3];                                     // 0x088D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CustomSpecialS7Tags;                               // 0x0890(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         SpecialS7FireTime;                                 // 0x08B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7392[0x4];                                     // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           DousedSmokeWispTimer;                              // 0x08B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        S7SuccessEmitter;                                  // 0x08C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             S7SuccessSound;                                    // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockInteraction;                                  // 0x08D0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7393[0x3];                                     // 0x08D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LitRepBool;                                        // 0x08D4(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DousedCue;                                         // 0x08D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DeathCue;                                          // 0x08E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_Light_Cost;                                    // 0x08E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_Light;                                        // 0x0910(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_LightCost;                                    // 0x0928(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_LightCostNeedMore;                            // 0x0940(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFortWorldItemDefinition*               Item_Wood;                                         // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Stoked;                                            // 0x0960(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_7394[0x3];                                     // 0x0961(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           StokedCue;                                         // 0x0964(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7395[0x4];                                     // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_Stoke_Cost;                                    // 0x0970(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_HotfixStokeEnabled;                            // 0x0998(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_StokeCostNeedMore;                            // 0x09C0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasBeenLit;                                        // 0x09D8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7396[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_ReplaceCampfire;                               // 0x09E0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 ActorToReplaceWith;                                // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurieActivated;                                    // 0x0A10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7397[0x7];                                     // 0x0A11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         FloodLevel;                                        // 0x0A18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         FloodHeightPerLevel;                               // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OceanHeight;                                       // 0x0A44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class AActor*, struct FCurieInteractHandle> InteractHandleMap;                                 // 0x0A48(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	struct FGameplayTag                           FireCue;                                           // 0x0A98(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               WoodBurningMatInstance;                            // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FX_WoodBurnAmount;                                 // 0x0AA8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FX_WoodBurnEmissive;                               // 0x0AAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_BGA_Athena_EnvCampFire(int32 EntryPoint, bool CallFunc_HasAuthority_ReturnValue, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_HasAuthority_ReturnValue_1, class AFortPawn* K2Node_Event_InteractingPawn, EInteractionBeingAttempted K2Node_Event_InteractionBeingAttempted, int32 Temp_int_Array_Index_Variable, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_HasAuthority_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_CheckIfUserIsSpecialS7_UserIsSpecial, class AFortPlayerController* K2Node_CustomEvent_Controller, class UFortQuestItemDefinition* K2Node_CustomEvent_QuestDef, class FName K2Node_CustomEvent_BackendName, int32 K2Node_CustomEvent_CompletionCount, bool K2Node_CustomEvent_ObjectiveCompleted, bool K2Node_CustomEvent_QuestCompleted, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_NameName_ReturnValue, const class FString& CallFunc_GetPersistentName_ReturnValue, bool CallFunc_EqualEqual_StrStr_ReturnValue, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_3, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, class AFortPawn* K2Node_CustomEvent_TransitioningPawn, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TDelegate<void(class AFortPlayerController* Controller, class UFortQuestItemDefinition* QuestDef, class FName BackendName, int32 CompletionCount, bool ObjectiveCompleted, bool QuestCompleted)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class AFortPlayerController* Controller, class UFortQuestItemDefinition* QuestDef, class FName BackendName, int32 CompletionCount, bool ObjectiveCompleted, bool QuestCompleted)> K2Node_CreateDelegate_OutputDelegate_3, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_3, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue, bool CallFunc_CheckIfUserIsSpecialS7_UserIsSpecial_1, class AController* CallFunc_GetController_ReturnValue, class AAthena_PlayerController_C* K2Node_DynamicCast_AsAthena_Player_Controller, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_IntInt_ReturnValue, class AFortPawn* K2Node_CustomEvent_InteractingPawn_1, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, struct FHitResult& Temp_struct_Variable, int32 CallFunc_GetCostReActivate_ReturnValue, int32 Temp_int_Array_Index_Variable_1, int32 CallFunc_K2_RemoveItemFromPlayer_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData_1, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FCeil_ReturnValue, class AFortPawn* K2Node_CustomEvent_InteractingPawn, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1, int32 CallFunc_K2_RemoveItemFromPlayer_ReturnValue_1, float CallFunc_RandomFloat_ReturnValue, bool CallFunc_RowToBool_ReturnValue, struct FTransform& CallFunc_GetTransform_ReturnValue, bool CallFunc_IsServer_ReturnValue, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, bool CallFunc_BooleanAND_ReturnValue_2, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class ABuildingActor* CallFunc_K2_SpawnBuildingActor_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData_2, bool CallFunc_EqualEqual_IntInt_ReturnValue_2, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent_1, class AActor* K2Node_ComponentBoundEvent_OtherActor_1, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp_1, int32 K2Node_ComponentBoundEvent_OtherBodyIndex_1, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool CallFunc_Map_Contains_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, bool CallFunc_Not_PreBool_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, class UFortAsyncAction_OnCurieActivated* CallFunc_OnCurieActivated_ReturnValue, bool CallFunc_IsValid_ReturnValue_4, const struct FCurieInteractHandle& CallFunc_ExecuteBeginFireInteract_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, const struct FCurieInteractHandle& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, bool CallFunc_Map_Remove_ReturnValue, bool CallFunc_ExecuteEndFireInteract_ReturnValue, TArray<class AActor*>& CallFunc_Map_Keys_Keys, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FCurieInteractHandle& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue_2, bool CallFunc_ExecuteEndFireInteract_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, struct FCurieContainerHandle& K2Node_Event_CurieContainerHandle_1, struct FGameplayTag& K2Node_Event_ElementTag_1, struct FCurieContainerHandle& K2Node_Event_CurieContainerHandle, struct FGameplayTag& K2Node_Event_ElementTag, bool CallFunc_EqualEqual_GameplayTag_ReturnValue, bool CallFunc_EqualEqual_GameplayTag_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_4, bool CallFunc_BooleanAND_ReturnValue_5, TArray<class AActor*>& CallFunc_GetOverlappingActors_OverlappingActors, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, class AActor* CallFunc_Array_Get_Item_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, bool CallFunc_Map_Contains_ReturnValue_1, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue_1, class AFortGameStateAthena* Temp_object_Variable, const struct FCurieInteractHandle& CallFunc_ExecuteBeginFireInteract_ReturnValue_1, class UFortPlaylist* Temp_object_Variable_1, class UMaterialInterface* CallFunc_GetMaterial_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_4, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, const struct FGameplayTagContainer& Temp_struct_Variable_1, float CallFunc_GetWorldDeltaSeconds_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_2_OnLinkedActorDestroyed__DelegateSignature();
	void Begin_Wood_Burn_FX();
	void CheckInitialOverlappingActors();
	void ReceiveDestroyed();
	void OnCurieElementDetached_BP(struct FCurieContainerHandle& CurieContainerHandle, struct FGameplayTag& ElementTag);
	void OnCurieElementAttached_BP(struct FCurieContainerHandle& CurieContainerHandle, struct FGameplayTag& ElementTag);
	void EndFireInteract();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void CheckReplaceCampfire();
	void PayStokeCost(class AFortPawn* Param_InteractingPawn);
	void PayLightCost(class AFortPawn* Param_InteractingPawn);
	void HandleCharacterVariantTransition(class AFortPawn* TransitioningPawn);
	void Server_QuestObjectiveUpdated(class AFortPlayerController* Controller, class UFortQuestItemDefinition* QuestDef, class FName BackendName, int32 CompletionCount, bool ObjectiveCompleted, bool QuestCompleted);
	void KillDouseSmokeWisp();
	void SpecialS7LightsFireAfterOut();
	void CheckDestroyDisabled();
	void HandleBoundDestroyed();
	void Start();
	void ReceiveBeginPlay();
	void GoOut();
	void Light();
	void BlueprintOnInteract(class AFortPawn* Param_InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted);
	void OnCurieActive_A24E3C804D14344FC0E5E0B5CDB4FF55();
	void OnReady_9F4554BE40FCB41157835B9AD897EE69(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);
	void SetSheetValues(bool CallFunc_RowToBool_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue);
	bool RowToBool(struct FScalableFloat& Input, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue);
	void CheckIfUserIsSpecialS7(class AFortPawn* PawnWhoLitFire, bool* UserIsSpecial, const struct FGameplayTagContainer& Temp_struct_Variable, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_HasAllTags_ReturnValue);
	void OnRep_Destroyed();
	void OnRep_LitRepBool(bool CallFunc_Conv_IntToBool_ReturnValue);
	int32 GetCostReActivate(float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FCeil_ReturnValue);
	void OnRep_Stoked();
	void DisableIfBelowFlood(bool CallFunc_IsActorSubmergedInOcean_ReturnValue);

	bool BlueprintCanInteract(class AFortPawn* Param_InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool CallFunc_HasInfiniteResources_HasInfiniteResources, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FCeil_ReturnValue, bool CallFunc_RowToBool_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_1, int32 CallFunc_FCeil_ReturnValue_1, int32 CallFunc_SelectInt_ReturnValue, int32 CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue) const;
	class FText BlueprintGetInteractionString(class AFortPawn* Param_InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, bool bHasInfiniteResources, bool Temp_bool_Variable, bool Temp_bool_Variable_1, class FText CallFunc_MakeLiteralText_ReturnValue, class FText CallFunc_MakeLiteralText_ReturnValue_1, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool CallFunc_HasInfiniteResources_HasInfiniteResources, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FCeil_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class FText CallFunc_MakeLiteralText_ReturnValue_2, const class FString& CallFunc_Conv_TextToString_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue, class FText K2Node_Select_Default, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_2, int32 CallFunc_FCeil_ReturnValue_1, int32 CallFunc_FCeil_ReturnValue_2, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, int32 CallFunc_K2_GetItemQuantityOnPlayer_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, bool CallFunc_GreaterEqual_IntInt_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, class FText K2Node_Select_Default_1, bool CallFunc_BooleanOR_ReturnValue_1) const;
	class FText BlueprintGetFailedInteractionString(class AFortPawn* Param_InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, bool Temp_bool_Variable, float CallFunc_GetValueAtLevel_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, int32 CallFunc_FCeil_ReturnValue, const class FString& CallFunc_Conv_IntToString_ReturnValue, bool CallFunc_NotEqual_IntInt_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, const class FString& CallFunc_Conv_TextToString_ReturnValue_1, int32 CallFunc_FCeil_ReturnValue_1, const class FString& CallFunc_Conv_IntToString_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, class FText CallFunc_Conv_StringToText_ReturnValue_1, class FText K2Node_Select_Default) const;
	void HasInfiniteResources(class APawn* Pawn, bool* Param_HasInfiniteResources, bool CallFunc_IsValid_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_ShouldHaveInfiniteResources_ReturnValue) const;
	void ShouldPlayNativeCurieFX(EFortCurieNativeFXType FXType, struct FFortNativeCurieFXResponse* OutResponse, const struct FFortNativeCurieFXResponse& K2Node_MakeStruct_FortNativeCurieFXResponse) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_BGA_Athena_EnvCampFire_C">();
	}
	static class AB_BGA_Athena_EnvCampFire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_BGA_Athena_EnvCampFire_C>();
	}
};
static_assert(alignof(AB_BGA_Athena_EnvCampFire_C) == 0x000008, "Wrong alinment on AB_BGA_Athena_EnvCampFire_C");
static_assert(sizeof(AB_BGA_Athena_EnvCampFire_C) == 0x000AB0, "Wrong size on AB_BGA_Athena_EnvCampFire_C");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, UberGraphFrame) == 0x0007D0, "Member 'AB_BGA_Athena_EnvCampFire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FortLinkToActor) == 0x0007D8, "Member 'AB_BGA_Athena_EnvCampFire_C::FortLinkToActor' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Sphere) == 0x0007E0, "Member 'AB_BGA_Athena_EnvCampFire_C::Sphere' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FirePitEmpty) == 0x0007E8, "Member 'AB_BGA_Athena_EnvCampFire_C::FirePitEmpty' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Cylinder) == 0x0007F0, "Member 'AB_BGA_Athena_EnvCampFire_C::Cylinder' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FireLoc) == 0x0007F8, "Member 'AB_BGA_Athena_EnvCampFire_C::FireLoc' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Wood) == 0x000800, "Member 'AB_BGA_Athena_EnvCampFire_C::Wood' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Root) == 0x000808, "Member 'AB_BGA_Athena_EnvCampFire_C::Root' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FortCurie) == 0x000810, "Member 'AB_BGA_Athena_EnvCampFire_C::FortCurie' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, InteractingPawn) == 0x000818, "Member 'AB_BGA_Athena_EnvCampFire_C::InteractingPawn' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, BeenUsed) == 0x000820, "Member 'AB_BGA_Athena_EnvCampFire_C::BeenUsed' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, DousedSmokeLife) == 0x000824, "Member 'AB_BGA_Athena_EnvCampFire_C::DousedSmokeLife' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_DousedSmokeLife) == 0x000828, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_DousedSmokeLife' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, HotfixedEnabled) == 0x000850, "Member 'AB_BGA_Athena_EnvCampFire_C::HotfixedEnabled' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, DestroyIfDisabled) == 0x000851, "Member 'AB_BGA_Athena_EnvCampFire_C::DestroyIfDisabled' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Destroyed) == 0x000852, "Member 'AB_BGA_Athena_EnvCampFire_C::Destroyed' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_HotfixEnabled) == 0x000858, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_HotfixEnabled' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, TraceOffset) == 0x000880, "Member 'AB_BGA_Athena_EnvCampFire_C::TraceOffset' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Season7Campfire) == 0x00088C, "Member 'AB_BGA_Athena_EnvCampFire_C::Season7Campfire' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, CustomSpecialS7Tags) == 0x000890, "Member 'AB_BGA_Athena_EnvCampFire_C::CustomSpecialS7Tags' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, SpecialS7FireTime) == 0x0008B0, "Member 'AB_BGA_Athena_EnvCampFire_C::SpecialS7FireTime' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, DousedSmokeWispTimer) == 0x0008B8, "Member 'AB_BGA_Athena_EnvCampFire_C::DousedSmokeWispTimer' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, S7SuccessEmitter) == 0x0008C0, "Member 'AB_BGA_Athena_EnvCampFire_C::S7SuccessEmitter' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, S7SuccessSound) == 0x0008C8, "Member 'AB_BGA_Athena_EnvCampFire_C::S7SuccessSound' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, BlockInteraction) == 0x0008D0, "Member 'AB_BGA_Athena_EnvCampFire_C::BlockInteraction' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, LitRepBool) == 0x0008D4, "Member 'AB_BGA_Athena_EnvCampFire_C::LitRepBool' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, DousedCue) == 0x0008D8, "Member 'AB_BGA_Athena_EnvCampFire_C::DousedCue' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, DeathCue) == 0x0008E0, "Member 'AB_BGA_Athena_EnvCampFire_C::DeathCue' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_Light_Cost) == 0x0008E8, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_Light_Cost' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Text_Light) == 0x000910, "Member 'AB_BGA_Athena_EnvCampFire_C::Text_Light' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Text_LightCost) == 0x000928, "Member 'AB_BGA_Athena_EnvCampFire_C::Text_LightCost' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Text_LightCostNeedMore) == 0x000940, "Member 'AB_BGA_Athena_EnvCampFire_C::Text_LightCostNeedMore' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Item_Wood) == 0x000958, "Member 'AB_BGA_Athena_EnvCampFire_C::Item_Wood' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Stoked) == 0x000960, "Member 'AB_BGA_Athena_EnvCampFire_C::Stoked' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, StokedCue) == 0x000964, "Member 'AB_BGA_Athena_EnvCampFire_C::StokedCue' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_Stoke_Cost) == 0x000970, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_Stoke_Cost' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_HotfixStokeEnabled) == 0x000998, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_HotfixStokeEnabled' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Text_StokeCostNeedMore) == 0x0009C0, "Member 'AB_BGA_Athena_EnvCampFire_C::Text_StokeCostNeedMore' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, HasBeenLit) == 0x0009D8, "Member 'AB_BGA_Athena_EnvCampFire_C::HasBeenLit' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, Row_ReplaceCampfire) == 0x0009E0, "Member 'AB_BGA_Athena_EnvCampFire_C::Row_ReplaceCampfire' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, ActorToReplaceWith) == 0x000A08, "Member 'AB_BGA_Athena_EnvCampFire_C::ActorToReplaceWith' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, CurieActivated) == 0x000A10, "Member 'AB_BGA_Athena_EnvCampFire_C::CurieActivated' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FloodLevel) == 0x000A18, "Member 'AB_BGA_Athena_EnvCampFire_C::FloodLevel' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FloodHeightPerLevel) == 0x000A40, "Member 'AB_BGA_Athena_EnvCampFire_C::FloodHeightPerLevel' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, OceanHeight) == 0x000A44, "Member 'AB_BGA_Athena_EnvCampFire_C::OceanHeight' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, InteractHandleMap) == 0x000A48, "Member 'AB_BGA_Athena_EnvCampFire_C::InteractHandleMap' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FireCue) == 0x000A98, "Member 'AB_BGA_Athena_EnvCampFire_C::FireCue' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, WoodBurningMatInstance) == 0x000AA0, "Member 'AB_BGA_Athena_EnvCampFire_C::WoodBurningMatInstance' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FX_WoodBurnAmount) == 0x000AA8, "Member 'AB_BGA_Athena_EnvCampFire_C::FX_WoodBurnAmount' has a wrong offset!");
static_assert(offsetof(AB_BGA_Athena_EnvCampFire_C, FX_WoodBurnEmissive) == 0x000AAC, "Member 'AB_BGA_Athena_EnvCampFire_C::FX_WoodBurnEmissive' has a wrong offset!");

}

