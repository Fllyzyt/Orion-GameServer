#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Ninja_Tactical_MeleeHitsHeal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "GAT_GenericTriggeredAbility_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Ninja_Tactical_MeleeHitsHeal.GA_Ninja_Tactical_MeleeHitsHeal_C
// 0x00C8 (0x0C60 - 0x0B98)
class UGA_Ninja_Tactical_MeleeHitsHeal_C : public UGAT_GenericTriggeredAbility_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Ninja_Tactical_MeleeHitsHeal_C;  // 0x0B98(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTag                           EventActivation;                                   // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventComplete;                                     // 0x0BA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Ninja_Tactical_MeleeHitsHeal;                   // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_Melee;                                          // 0x0BB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MeleeCount;                                        // 0x0BD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LastHitSwingTime;                                  // 0x0BDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BaseHealValue;                                     // 0x0BE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FinalHealValue;                                    // 0x0BE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DataRowName;                                       // 0x0BE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute_HealingSourceBaseMultiplier;             // 0x0BF0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayAttribute                     Attribute_HealingSource;                           // 0x0C28(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Ninja_Tactical_MeleeHitsHeal(int32 EntryPoint, int32 Temp_int_Variable, bool CallFunc_Greater_IntInt_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, struct FGameplayEventData& K2Node_Event_EventData, bool CallFunc_K2_CommitAbility_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, float CallFunc_GetGameTimeInSeconds_ReturnValue, bool K2Node_Event_bWasCancelled, float CallFunc_GetGameTimeInSeconds_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Abs_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbilityFromEvent(struct FGameplayEventData& Param_EventData);
	void SetupAbility(class UAbilitySystemComponent* AbilitySystem, bool CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute, float CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue, const struct FFortBaseWeaponStats& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue, const struct FGameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_EvaluateAttributeValueWithTagsAndBase_bSuccess, float CallFunc_EvaluateAttributeValueWithTagsAndBase_ReturnValue);

	bool K2_ShouldAbilityRespondToEvent(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayEventData& Payload, bool CallFunc_ShouldSwordHitsHealRespondToEvent_ReturnValue, bool CallFunc_ShouldHammerHitsHealRespondToEvent_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_HasAllTags_ReturnValue, bool CallFunc_BooleanAND_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Ninja_Tactical_MeleeHitsHeal_C">();
	}
	static class UGA_Ninja_Tactical_MeleeHitsHeal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Ninja_Tactical_MeleeHitsHeal_C>();
	}
};
static_assert(alignof(UGA_Ninja_Tactical_MeleeHitsHeal_C) == 0x000008, "Wrong alinment on UGA_Ninja_Tactical_MeleeHitsHeal_C");
static_assert(sizeof(UGA_Ninja_Tactical_MeleeHitsHeal_C) == 0x000C60, "Wrong size on UGA_Ninja_Tactical_MeleeHitsHeal_C");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, UberGraphFrame_GA_Ninja_Tactical_MeleeHitsHeal_C) == 0x000B98, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::UberGraphFrame_GA_Ninja_Tactical_MeleeHitsHeal_C' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, EventActivation) == 0x000BA0, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::EventActivation' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, EventComplete) == 0x000BA8, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::EventComplete' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, GE_Ninja_Tactical_MeleeHitsHeal) == 0x000BB0, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::GE_Ninja_Tactical_MeleeHitsHeal' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, TC_Melee) == 0x000BB8, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::TC_Melee' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, MeleeCount) == 0x000BD8, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::MeleeCount' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, LastHitSwingTime) == 0x000BDC, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::LastHitSwingTime' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, BaseHealValue) == 0x000BE0, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::BaseHealValue' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, FinalHealValue) == 0x000BE4, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::FinalHealValue' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, DataRowName) == 0x000BE8, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::DataRowName' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, Attribute_HealingSourceBaseMultiplier) == 0x000BF0, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::Attribute_HealingSourceBaseMultiplier' has a wrong offset!");
static_assert(offsetof(UGA_Ninja_Tactical_MeleeHitsHeal_C, Attribute_HealingSource) == 0x000C28, "Member 'UGA_Ninja_Tactical_MeleeHitsHeal_C::Attribute_HealingSource' has a wrong offset!");

}

