#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZipLine_Smash

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.ExecuteUbergraph_GA_Athena_ZipLine_Smash
// 0x03B0 (0x03B0 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6444[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6445[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6446[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0040(0x00B0)(ConstParm)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x00F0(0x008C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_6447[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortAthenaZipline*                     K2Node_DynamicCast_AsFort_Athena_Zipline;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6448[0x6];                                     // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6449[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1; // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsZiplining;                   // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_644A[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_1;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_644B[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_NewParam;                       // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewParam2;                      // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644C[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_NewParam3;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_NewParam4;                      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NewParam5;                      // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644D[0x4];                                     // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_NewParam6;                      // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NewParam7;                      // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_NewParam8;                      // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_644E[0x4];                                     // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0280(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0290(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x02A0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x02B0(0x0010)(ZeroConstructor, NoDestructor)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue_1;       // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02C8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_AsCharacter_Movement_Component_1; // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_644F[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x02E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6450[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AFortPlayerPawn* FortPlayerPawn)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x02EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6451[0x1];                                     // 0x02FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FHitResult& Hit)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_12;           // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0320(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_14;           // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_15;           // 0x0340(0x0010)(ZeroConstructor, NoDestructor)
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1; // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6452[0x7];                                     // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6453[0x7];                                     // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_CustomEvent_FortPlayerPawn;                 // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_16;           // 0x0378(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitGameplayTagRemoved*    CallFunc_WaitGameplayTagRemove_ReturnValue;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6454[0x7];                                     // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash) == 0x0003B0, "Wrong size on GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, EntryPoint) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsCharacter_Movement_Component) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetVehicleUInterface_ReturnValue) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetVehicleUInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_2) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_3) == 0x000039, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_Event_EventData) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_Hit) == 0x0000F0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Athena_Zipline) == 0x000180, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Athena_Zipline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_1) == 0x000188, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000189, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000190, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x000198, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_2) == 0x0001A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0001A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0001B0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1) == 0x0001B8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_bIsZiplining) == 0x0001C0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_bIsZiplining' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate) == 0x0001C4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001D4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E4, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam) == 0x0001F8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam2) == 0x000200, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam3) == 0x000208, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam4) == 0x000210, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam5) == 0x000218, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam6) == 0x000228, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam7) == 0x000230, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_NewParam8) == 0x000238, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_NewParam8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000248, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_3) == 0x000250, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_4) == 0x000260, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_5) == 0x000270, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_6) == 0x000280, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_7) == 0x000290, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_8) == 0x0002A0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_9) == 0x0002B0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetMovementComponent_ReturnValue_1) == 0x0002C0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetMovementComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002C8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_AsCharacter_Movement_Component_1) == 0x0002D0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_AsCharacter_Movement_Component_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_DynamicCast_bSuccess_3) == 0x0002D8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_K2_SetTimer_ReturnValue) == 0x0002E0, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetValidValue_ReturnValue) == 0x0002E8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_10) == 0x0002EC, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002FC, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002FD, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_BooleanOR_ReturnValue) == 0x0002FE, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_11) == 0x000300, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_12) == 0x000310, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_13) == 0x000320, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_14) == 0x000330, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_15) == 0x000340, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1) == 0x000350, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_4) == 0x000358, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000360, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_5) == 0x000368, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CustomEvent_FortPlayerPawn) == 0x000370, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CustomEvent_FortPlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, K2Node_CreateDelegate_OutputDelegate_16) == 0x000378, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_WaitGameplayTagRemove_ReturnValue) == 0x000388, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_WaitGameplayTagRemove_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_IsValid_ReturnValue_6) == 0x000390, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000398, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x0003A8, "Member 'GA_Athena_ZipLine_Smash_C_ExecuteUbergraph_GA_Athena_ZipLine_Smash::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.EnterWaterExit
// 0x0008 (0x0008 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_EnterWaterExit final 
{
public:
	class AFortPlayerPawn*                        FortPlayerPawn;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_EnterWaterExit) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_EnterWaterExit");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_EnterWaterExit) == 0x000008, "Wrong size on GA_Athena_ZipLine_Smash_C_EnterWaterExit");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_EnterWaterExit, FortPlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_EnterWaterExit::FortPlayerPawn' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.OnPawnDied_Bind
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind final 
{
public:
	class AActor*                                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewParam2;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6455[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            NewParam3;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewParam4;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewParam5;                                         // 0x0020(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6456[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    NewParam6;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewParam7;                                         // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NewParam8;                                         // 0x0040(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind) == 0x000050, "Wrong size on GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam2) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam3) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam3' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam4) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam4' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam5) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam5' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam6) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam6' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam7) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam7' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind, NewParam8) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnDied_Bind::NewParam8' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.HandleZiplineStateChanged
// 0x0001 (0x0001 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged final 
{
public:
	bool                                          bIsZiplining;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong alinment on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged) == 0x000001, "Wrong size on GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged, bIsZiplining) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_HandleZiplineStateChanged::bIsZiplining' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.OnPawnLanded_Bind
// 0x008C (0x008C - 0x0000)
struct GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind final 
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x008C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind) == 0x000004, "Wrong alinment on GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind) == 0x00008C, "Wrong size on GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind, Hit) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_OnPawnLanded_Bind::Hit' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent final 
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.BreakNearbyStructures
// 0x0108 (0x0108 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_BreakNearbyStructures final 
{
public:
	class AFortPlayerPawn*                        Param_PlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6457[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6458[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_BoxOverlapActors_OutActors;               // 0x0068(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_BoxOverlapActors_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6459[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645A[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABuildingActor*                         K2Node_DynamicCast_AsBuilding_Actor;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645B[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromActor_ReturnValue;   // 0x00A0(0x0028)()
	class AFortAthenaSupplyDropBalloon*           K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645C[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x00D8(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class UFortHeldObjectComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645D[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        K2Node_DynamicCast_AsFort_Player_Pawn;             // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures) == 0x000108, "Wrong size on GA_Athena_ZipLine_Smash_C_BreakNearbyStructures");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Param_PlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Param_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_X) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Y) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BreakVector_Z) == 0x000034, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Add_FloatFloat_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_MakeVector_ReturnValue) == 0x00003C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_IsValid_ReturnValue_1) == 0x000051, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_MakeArray_Array_1) == 0x000058, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BoxOverlapActors_OutActors) == 0x000068, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BoxOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BoxOverlapActors_ReturnValue) == 0x000078, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BoxOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Array_Get_Item) == 0x000080, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsBuilding_Actor) == 0x000090, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsBuilding_Actor' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_AbilityTargetDataFromActor_ReturnValue) == 0x0000A0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_AbilityTargetDataFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon) == 0x0000C8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsFort_Athena_Supply_Drop_Balloon' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0000D8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, CallFunc_IsValid_ReturnValue_2) == 0x0000F0, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_AsFort_Player_Pawn) == 0x0000F8, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_AsFort_Player_Pawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_BreakNearbyStructures, K2Node_DynamicCast_bSuccess_2) == 0x000100, "Member 'GA_Athena_ZipLine_Smash_C_BreakNearbyStructures::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.SpawnMotor
// 0x0090 (0x0090 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_SpawnMotor final 
{
public:
	class AActor*                                 Param_PlayerPawn;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_645E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_645F[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Zipline_Motor_Offset_Offset;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6460[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ZipLine_Athena_Harness_Yellow_C*    CallFunc_FinishSpawningActor_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsZiplining)>            K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_SpawnMotor) == 0x000010, "Wrong alinment on GA_Athena_ZipLine_Smash_C_SpawnMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_SpawnMotor) == 0x000090, "Wrong size on GA_Athena_ZipLine_Smash_C_SpawnMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, Param_PlayerPawn) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::Param_PlayerPawn' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_MakeTransform_ReturnValue) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_Get_Zipline_Motor_Offset_Offset) == 0x000058, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_Get_Zipline_Motor_Offset_Offset' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000068, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_SpawnMotor, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000080, "Member 'GA_Athena_ZipLine_Smash_C_SpawnMotor::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckMotor
// 0x0048 (0x0048 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckMotor final 
{
public:
	bool                                          HasHarness;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6461[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6462[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6463[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ZipLine_Athena_Harness_C*           K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness;   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6464[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckMotor) == 0x000048, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, HasHarness) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::HasHarness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_GetAttachedActors_OutActors) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Get_Item) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_AsBP_Zip_Line_Athena_Harness' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckMotor, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'GA_Athena_ZipLine_Smash_C_CheckMotor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.CheckForQuestProgress
// 0x0050 (0x0050 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_CheckForQuestProgress final 
{
public:
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTagContainer                  CallFunc_GetOwnedGameplayTags_TagContainer;        // 0x0010(0x0020)()
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6465[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerController*                  CallFunc_GetFortPlayerControllerFromActor_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortQuestManager*                      CallFunc_GetQuestManager_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestActive;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SendComplexCustomStatEvent_QuestCompleted; // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress) == 0x000050, "Wrong size on GA_Athena_ZipLine_Smash_C_CheckForQuestProgress");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetOwnedGameplayTags_self_CastInput) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetOwnedGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetOwnedGameplayTags_TagContainer) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetOwnedGameplayTags_TagContainer' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_HasAuthority_ReturnValue) == 0x000030, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetFortPlayerControllerFromActor_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetFortPlayerControllerFromActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_GetQuestManager_ReturnValue) == 0x000040, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_GetQuestManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestActive) == 0x000048, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestActive' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_CheckForQuestProgress, CallFunc_SendComplexCustomStatEvent_QuestCompleted) == 0x000049, "Member 'GA_Athena_ZipLine_Smash_C_CheckForQuestProgress::CallFunc_SendComplexCustomStatEvent_QuestCompleted' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Pole B Socket Loc
// 0x0038 (0x0038 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc final 
{
public:
	struct FVector                                PoleBSocketLoc;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6466[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6467[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6468[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc) == 0x000038, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, PoleBSocketLoc) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::PoleBSocketLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_B_Socket_Loc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Pole A Socket Loc
// 0x0038 (0x0038 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc final 
{
public:
	struct FVector                                PoleBSocketLoc;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6469[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646B[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc) == 0x000038, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, PoleBSocketLoc) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::PoleBSocketLoc' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Pole_A_Socket_Loc::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.GetZiplineRotationForMotor
// 0x0078 (0x0078 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor final 
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646C[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_646E[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor) == 0x000078, "Wrong size on GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, Rotation) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::Rotation' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00002C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000044, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_MakeRotFromZ_ReturnValue) == 0x000050, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Roll) == 0x00005C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Pitch) == 0x000060, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_BreakRotator_Yaw) == 0x000064, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_Add_FloatFloat_ReturnValue) == 0x000068, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor, CallFunc_MakeRotator_ReturnValue) == 0x00006C, "Member 'GA_Athena_ZipLine_Smash_C_GetZiplineRotationForMotor::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function GA_Athena_ZipLine_Smash.GA_Athena_ZipLine_Smash_C.Get Zipline Motor Offset
// 0x0030 (0x0030 - 0x0000)
struct GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset final 
{
public:
	struct FVector                                Offset;                                            // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_646F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_Spline_C* K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6470[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Athena_Environmental_ZipLine_C*     K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset) == 0x000008, "Wrong alinment on GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset");
static_assert(sizeof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset) == 0x000030, "Wrong size on GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, Offset) == 0x000000, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::Offset' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline) == 0x000010, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line_Spline' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line) == 0x000020, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_AsBP_Athena_Environmental_Zip_Line' has a wrong offset!");
static_assert(offsetof(GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GA_Athena_ZipLine_Smash_C_Get_Zipline_Motor_Offset::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

