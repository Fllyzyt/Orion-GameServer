#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_Athena_FlopperSpawn_Parent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_Athena_FlopperSpawn_Parent.BGA_Athena_FlopperSpawn_Parent_C
// 0x0428 (0x0BF8 - 0x07D0)
class ABGA_Athena_FlopperSpawn_Parent_C : public ABuildingGameplayActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          OverlapVolume;                                     // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_MaxUses;                                       // 0x07E8(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         Row_MinUses;                                       // 0x0810(0x0028)(Edit, BlueprintVisible)
	int32                                         Uses;                                              // 0x0838(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AfterHideLifeSpan;                                 // 0x083C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemsToDrop;                                       // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Spawn;                                          // 0x0848(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_SpawnChanceMax;                                // 0x0850(0x0028)(Edit, BlueprintVisible)
	bool                                          IsWorldSpawner;                                    // 0x0878(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659A[0x7];                                     // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_SpawnChanceMin;                                // 0x0880(0x0028)(Edit, BlueprintVisible)
	TMap<struct FGameplayTag, class FName>        TagToLoot_FishingSpotTier;                         // 0x08A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AlreadySpawnChecked;                               // 0x08F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_659B[0x7];                                     // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<struct FGameplayTag, class FName>        TagToLoot_DefaultTier;                             // 0x0900(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FName>        TagToLoot_ToUse;                                   // 0x0950(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<struct FGameplayTag, class FName>        TagToLoot_HighTier_FishingRod;                     // 0x09A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HasTypeTag;                                        // 0x09F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659C[0x7];                                     // 0x09F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x09F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayTagContainer                  LootTags;                                          // 0x0A08(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          MaxUses;                                           // 0x0A28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x0A29(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659D[0x6];                                     // 0x0A2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_AddedBobChanceOnOverlapMin;                    // 0x0A30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_AddedBobChanceOnOverlapMax;                    // 0x0A58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class AFortPickup*                            SpawnedItem;                                       // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_HighTierPoolSpawn;                           // 0x0A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  QuestTag_DefaultSpawn;                             // 0x0A90(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  QuestTag_WorldSpawn;                               // 0x0AB0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class APrj_Athena_FloppingRabbit_C*           Projectile;                                        // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FishSizeCurve;                                     // 0x0AD8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UFortItemDefinition*, struct FScalableFloat> FishSizeMap;                                       // 0x0AE0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         MiniGameFishSizeThreshold;                         // 0x0B30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_659E[0x4];                                     // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MiniGameFishSizePercentileThreshold;               // 0x0B38(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AlwaysStartMiniGame;                               // 0x0B60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_659F[0x3];                                     // 0x0B61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           HighTierFishingRod;                                // 0x0B64(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   HighTierLootData;                                  // 0x0B6C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           DefaultLootTag;                                    // 0x0B74(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A0[0x4];                                     // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Fish_Variant_String;                               // 0x0B80(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          New_Best_Fish;                                     // 0x0B90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65A1[0x3];                                     // 0x0B91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Fish_Length;                                       // 0x0B94(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RespawnDelay;                                      // 0x0B98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A2[0x4];                                     // 0x0B9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_RespawnDelayMin;                               // 0x0BA0(0x0028)(Edit, BlueprintVisible)
	struct FScalableFloat                         Row_RespawnDelayMax;                               // 0x0BC8(0x0028)(Edit, BlueprintVisible)
	float                                         ForcedRespawnDelay;                                // 0x0BF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_Athena_FlopperSpawn_Parent(int32 EntryPoint, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, float CallFunc_GetValueAtLevel_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class APrj_Athena_FloppingRabbit_C* K2Node_DynamicCast_AsPrj_Athena_Flopping_Rabbit, bool K2Node_DynamicCast_bSuccess, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue, TArray<class AActor*>& Temp_object_Variable, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& K2Node_CustomEvent_Location, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_IsServer_ReturnValue, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess_1, const struct FGameplayTagContainer& CallFunc_GetPoiGridTagsForLocation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FHitResult& CallFunc_BoxTraceSingle_OutHit, bool CallFunc_BoxTraceSingle_ReturnValue, bool Temp_bool_Variable, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FGameplayTagContainer& K2Node_Select_Default, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, const struct FVector& CallFunc_Vector_Normal2D_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_1, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, float CallFunc_GetFloatValue_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, class AActor* K2Node_CustomEvent_Target, bool K2Node_CustomEvent_Hooked, class USceneComponent* K2Node_CustomEvent_HookComponent, const struct FVector& K2Node_CustomEvent_SpawnLoc, class AActor* K2Node_CustomEvent_Player_1, float K2Node_CustomEvent_ItemSpawnDelay, bool K2Node_CustomEvent_CaughtWithFishingRod, bool K2Node_CustomEvent_CaughtWithHappyGhost, class AActor* K2Node_CustomEvent_ItemUsedToFish, class APrj_Athena_FloppingRabbit_C* K2Node_CustomEvent_Projectile, const struct FGameplayTagContainer& K2Node_CustomEvent_Required_Tags, class UClass* CallFunc_GetObjectClass_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_EqualEqual_ClassClass_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_2, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, bool CallFunc_SendComplexCustomStatEvent_QuestActive_1, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted_1, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, class AFortPlayerStateAthena* K2Node_DynamicCast_AsFort_Player_State_Athena, bool K2Node_DynamicCast_bSuccess_3, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue, TArray<class UProjectileMovementComponent*>& CallFunc_K2_GetComponentsByClass_ReturnValue, bool Temp_bool_Variable_1, class UProjectileMovementComponent* CallFunc_Array_Get_Item, const struct FVector& K2Node_Select_Default_1, bool CallFunc_HasAuthority_ReturnValue_1, bool K2Node_CustomEvent_bCaughtFish, class AActor* K2Node_CustomEvent_Player, class UFortItemDefinition* K2Node_CustomEvent_ItemDefinition, class AFortPickup* K2Node_CustomEvent_Pickup, float K2Node_CustomEvent_Length, const struct FFortMcpCollectedFishProperties& K2Node_MakeStruct_FortMcpCollectedFishProperties, bool CallFunc_IsValid_ReturnValue_1, struct FFortItemEntry& CallFunc_GetItemEntry_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess_4, ECollectionsComponentValidityResult CallFunc_GetCollectionsComponent_OutIsValid, class UFortControllerComponent_Collections* CallFunc_GetCollectionsComponent_ReturnValue, const struct FGameplayTag& CallFunc_OnFishCollected_OutFishCollectionTag, const struct FGameplayTag& CallFunc_OnFishCollected_OutAnalyticsTag, EFortCollectedState CallFunc_OnFishCollected_OutNewSeenState, bool K2Node_SwitchEnum_CmpSuccess, bool K2Node_SwitchEnum_CmpSuccess_1, class FName CallFunc_GetTagName_ReturnValue, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, const class FString& CallFunc_Conv_NameToString_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class AFortGameStateAthena* Temp_object_Variable_1, class UFortPlaylist* Temp_object_Variable_2, const struct FGameplayTagContainer& Temp_struct_Variable, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, TArray<struct FGameplayTag>& K2Node_MakeArray_Array, const struct FGameplayTagContainer& CallFunc_MakeGameplayTagContainerFromArray_ReturnValue, bool CallFunc_EqualEqual_GameplayTagContainer_ReturnValue, class FName CallFunc_GetLootTier_Output_Get, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate, TArray<struct FFortItemEntry>& CallFunc_PickLootDrops_OutLootToDrop, bool CallFunc_PickLootDrops_ReturnValue, const struct FFortItemEntry& CallFunc_Array_Get_Item_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, const struct FScalableFloat& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue_3, float CallFunc_Lerp_ReturnValue, float K2Node_CustomEvent_TimeToDelay, bool CallFunc_Greater_FloatFloat_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FFortItemEntry& CallFunc_Array_Get_Item_2, bool CallFunc_SendComplexCustomStatEvent_QuestActive_2, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted_2, class UFortWorldItemDefinition* K2Node_DynamicCast_AsFort_World_Item_Definition, bool K2Node_DynamicCast_bSuccess_5, const struct FSpawnItemVariantParams& K2Node_MakeStruct_SpawnItemVariantParams, class AFortPickup* CallFunc_SpawnItemVariantPickupInWorld_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void HideAndDelayForRespawn(float TimeToDelay);
	void Clear_Saved_Collection_Data();
	void UpdateCollectionsComponent(bool bCaughtFish, class AActor* Player, class UFortItemDefinition* ItemDefinition, class AFortPickup* Pickup, float Length);
	void SpawnItem(class AActor* Target, bool Hooked, class USceneComponent* HookComponent, const struct FVector& SpawnLoc, class AActor* Player, float ItemSpawnDelay, bool CaughtWithFishingRod, bool CaughtWithHappyGhost, class AActor* ItemUsedToFish, class APrj_Athena_FloppingRabbit_C* Param_Projectile, const struct FGameplayTagContainer& Required_Tags);
	void ReceiveBeginPlay();
	void FishingComplete();
	void PlaySpawnItemHightier(const struct FVector& Location);
	void BndEvt__OverlapVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void HideAndKill();
	void OnReady_5804F209455A50B3EE64E3AED087DE64(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);
	void UserConstructionScript(bool CallFunc_IsServer_ReturnValue);
	void SetBalanceValues(float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_FTrunc_ReturnValue_1, int32 CallFunc_RandomIntegerInRange_ReturnValue);
	void HandleUseTracking(bool CallFunc_Can_Respawn_ReturnValue, int32 Temp_int_Variable, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue);
	void ShouldKill(float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_1, bool CallFunc_RandomBoolWithWeight_ReturnValue);
	void GetLootTier(bool IsExplosion, bool IsProFishingRod, class FName* Output_Get, int32 Temp_int_Array_Index_Variable, class FName CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, int32 Temp_int_Loop_Counter_Variable, const class FString& CallFunc_Conv_NameToString_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TArray<struct FGameplayTag>& CallFunc_Map_Keys_Keys, int32 CallFunc_Array_Length_ReturnValue, const struct FGameplayTag& CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_HasTag_ReturnValue, class FName CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue);
	void SetRespawnDelay(float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue);
	bool Can_Respawn(float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue);

	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_Athena_FlopperSpawn_Parent_C">();
	}
	static class ABGA_Athena_FlopperSpawn_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_Athena_FlopperSpawn_Parent_C>();
	}
};
static_assert(alignof(ABGA_Athena_FlopperSpawn_Parent_C) == 0x000008, "Wrong alinment on ABGA_Athena_FlopperSpawn_Parent_C");
static_assert(sizeof(ABGA_Athena_FlopperSpawn_Parent_C) == 0x000BF8, "Wrong size on ABGA_Athena_FlopperSpawn_Parent_C");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, UberGraphFrame) == 0x0007D0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, OverlapVolume) == 0x0007D8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::OverlapVolume' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, DefaultSceneRoot) == 0x0007E0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_MaxUses) == 0x0007E8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_MaxUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_MinUses) == 0x000810, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_MinUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Uses) == 0x000838, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Uses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, AfterHideLifeSpan) == 0x00083C, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::AfterHideLifeSpan' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, ItemsToDrop) == 0x000840, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::ItemsToDrop' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, GC_Spawn) == 0x000848, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::GC_Spawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_SpawnChanceMax) == 0x000850, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_SpawnChanceMax' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, IsWorldSpawner) == 0x000878, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::IsWorldSpawner' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_SpawnChanceMin) == 0x000880, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_SpawnChanceMin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, TagToLoot_FishingSpotTier) == 0x0008A8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::TagToLoot_FishingSpotTier' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, AlreadySpawnChecked) == 0x0008F8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::AlreadySpawnChecked' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, TagToLoot_DefaultTier) == 0x000900, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::TagToLoot_DefaultTier' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, TagToLoot_ToUse) == 0x000950, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::TagToLoot_ToUse' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, TagToLoot_HighTier_FishingRod) == 0x0009A0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::TagToLoot_HighTier_FishingRod' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, HasTypeTag) == 0x0009F0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::HasTypeTag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, ObjectTypes) == 0x0009F8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, LootTags) == 0x000A08, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::LootTags' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, MaxUses) == 0x000A28, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::MaxUses' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Debug) == 0x000A29, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Debug' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_AddedBobChanceOnOverlapMin) == 0x000A30, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_AddedBobChanceOnOverlapMin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_AddedBobChanceOnOverlapMax) == 0x000A58, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_AddedBobChanceOnOverlapMax' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, SpawnedItem) == 0x000A80, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::SpawnedItem' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Sound_HighTierPoolSpawn) == 0x000A88, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Sound_HighTierPoolSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, QuestTag_DefaultSpawn) == 0x000A90, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::QuestTag_DefaultSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, QuestTag_WorldSpawn) == 0x000AB0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::QuestTag_WorldSpawn' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Projectile) == 0x000AD0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Projectile' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, FishSizeCurve) == 0x000AD8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::FishSizeCurve' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, FishSizeMap) == 0x000AE0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::FishSizeMap' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, MiniGameFishSizeThreshold) == 0x000B30, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::MiniGameFishSizeThreshold' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, MiniGameFishSizePercentileThreshold) == 0x000B38, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::MiniGameFishSizePercentileThreshold' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, AlwaysStartMiniGame) == 0x000B60, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::AlwaysStartMiniGame' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, HighTierFishingRod) == 0x000B64, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::HighTierFishingRod' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, HighTierLootData) == 0x000B6C, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::HighTierLootData' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, DefaultLootTag) == 0x000B74, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::DefaultLootTag' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Fish_Variant_String) == 0x000B80, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Fish_Variant_String' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, New_Best_Fish) == 0x000B90, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::New_Best_Fish' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Fish_Length) == 0x000B94, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Fish_Length' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, RespawnDelay) == 0x000B98, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::RespawnDelay' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_RespawnDelayMin) == 0x000BA0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_RespawnDelayMin' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, Row_RespawnDelayMax) == 0x000BC8, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::Row_RespawnDelayMax' has a wrong offset!");
static_assert(offsetof(ABGA_Athena_FlopperSpawn_Parent_C, ForcedRespawnDelay) == 0x000BF0, "Member 'ABGA_Athena_FlopperSpawn_Parent_C::ForcedRespawnDelay' has a wrong offset!");

}

