#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Parent

#include "Basic.hpp"

#include "NPC_Pawn_Parent_classes.hpp"
#include "NPC_Pawn_Parent_parameters.hpp"


namespace SDK
{

// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.ExecuteUbergraph_NPC_Pawn_Parent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_GetUserWidgetObject_ReturnValue               (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNPCStatusWidget_C*               K2Node_DynamicCast_AsNPCStatus_Widget                  (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UFoleySoundSubsystem*             CallFunc_GetWorldSubsystem_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// TDelegate<void(class AFortAIPawn* AI, class AFortPlayerController* InteractingPlayerController)>K2Node_CreateDelegate_OutputDelegate                   (ZeroConstructor, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_2                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_3                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_GetUserWidgetObject_ReturnValue_1             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNPCStatusWidget_C*               K2Node_DynamicCast_AsNPCStatus_Widget_1                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_1                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_Damage_3                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            K2Node_Event_DamageTags_3                              (ConstParm)
// struct FVector                          K2Node_Event_Momentum_3                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       K2Node_Event_HitInfo_3                                 (ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      K2Node_Event_InstigatedBy_3                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_Event_DamageCauser_3                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     K2Node_Event_EffectContext_3                           ()
// float                                   CallFunc_GetHealth_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetMaxHealth_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   K2Node_Event_Damage_2                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            K2Node_Event_DamageTags_2                              (ConstParm)
// struct FVector                          K2Node_Event_Momentum_2                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       K2Node_Event_HitInfo_2                                 (ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        K2Node_Event_InstigatedBy_2                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_Event_DamageCauser_2                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     K2Node_Event_EffectContext_2                           ()
// float                                   CallFunc_Divide_FloatFloat_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetDistanceBetweenActors_Distance             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_FloatFloat_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// TDelegate<void(bool bVisible)>          K2Node_CreateDelegate_OutputDelegate_1                 (ZeroConstructor, NoDestructor)
// class UFortGameplayDataTrackerComponentManager*CallFunc_GetCurrent_ReturnValue                        (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_4                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// EEndPlayReason                          K2Node_Event_EndPlayReason                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortGameplayDataTrackerComponentManager*CallFunc_GetCurrent_ReturnValue_1                      (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void()>                       K2Node_CreateDelegate_OutputDelegate_2                 (ZeroConstructor, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_5                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_2                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_NPC_AlertLevel                     CallFunc_NPC_GetAlertLevelInfo_AlertLevel              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag           (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetAlertLevelInfo_ValidDataFound          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    K2Node_CustomEvent_bVisible                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_6                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_GetUserWidgetObject_ReturnValue_2             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNPCStatusWidget_C*               K2Node_DynamicCast_AsNPCStatus_Widget_2                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_2                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsVisible_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_3                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           K2Node_CustomEvent_Vehicle                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          K2Node_CustomEvent_Velocity                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortRarity                             CallFunc_NPC_SetBestLootRarityInInventory_NPC_BestLootRarityInInventory(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_Damage_1                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            K2Node_Event_DamageTags_1                              (ConstParm)
// struct FVector                          K2Node_Event_Momentum_1                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       K2Node_Event_HitInfo_1                                 (ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        K2Node_Event_InstigatedBy_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_Event_DamageCauser_1                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     K2Node_Event_EffectContext_1                           ()
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_7                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Greater_FloatFloat_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_TryActivateAbilitiesByTag_ReturnValue         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AController*                      K2Node_Event_NewController                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            CallFunc_MakeLiteralGameplayTagContainer_ReturnValue   ()
// bool                                    CallFunc_NotEqual_GameplayTagContainer_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_NPC_AlertLevel                     K2Node_CustomEvent_NPC_AlertLevel_1                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_ByteByte_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// TDelegate<void()>                       K2Node_CreateDelegate_OutputDelegate_3                 (ZeroConstructor, NoDestructor)
// Enum_NPC_AlertLevel                     K2Node_CustomEvent_NPC_AlertLevel                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetValueAtLevel_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetValueAtLevel_ReturnValue_1                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_RandomFloatInRange_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTimerHandle                     CallFunc_K2_SetTimerDelegate_ReturnValue               (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_4                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   K2Node_Event_Damage                                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            K2Node_Event_DamageTags                                (ConstParm)
// struct FVector                          K2Node_Event_Momentum                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       K2Node_Event_HitInfo                                   (ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      K2Node_Event_InstigatedBy                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_Event_DamageCauser                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     K2Node_Event_EffectContext                             ()
// bool                                    CallFunc_NPC_TryToDropLootOnDeath_CanDropLoot          (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     K2Node_Select_Default                                  (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue_1                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_GetScalableFloatHotfixValue_AsBool        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_NPC_AlertLevel                     K2Node_CustomEvent_NewNPC_AlertLevel                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_FloatFloat_ReturnValue_1              (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_5                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_6                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_8                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_GetUserWidgetObject_ReturnValue_3             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNPCStatusWidget_C*               K2Node_DynamicCast_AsNPCStatus_Widget_3                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_3                          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_9                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_TryActivateAbilitiesByTag_ReturnValue_1       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFortAIPawn*                      K2Node_CustomEvent_AI                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            K2Node_CustomEvent_InteractingPlayerController         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  CallFunc_GetPlayerPawn_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           K2Node_CustomEvent_AIPawn                              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  K2Node_CustomEvent_InteractingPlayerPawn               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue_10                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_11                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UUserWidget*                      CallFunc_GetUserWidgetObject_ReturnValue_4             (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UNPCStatusWidget_C*               K2Node_DynamicCast_AsNPCStatus_Widget_4                (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess_4                          (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::ExecuteUbergraph_NPC_Pawn_Parent(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget, bool K2Node_DynamicCast_bSuccess, class UFoleySoundSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void(class AFortAIPawn* AI, class AFortPlayerController* InteractingPlayerController)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_1, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_1, bool K2Node_DynamicCast_bSuccess_1, float K2Node_Event_Damage_3, struct FGameplayTagContainer& K2Node_Event_DamageTags_3, const struct FVector& K2Node_Event_Momentum_3, struct FHitResult& K2Node_Event_HitInfo_3, class AController* K2Node_Event_InstigatedBy_3, class AActor* K2Node_Event_DamageCauser_3, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_3, float CallFunc_GetHealth_ReturnValue, float CallFunc_GetMaxHealth_ReturnValue, float K2Node_Event_Damage_2, struct FGameplayTagContainer& K2Node_Event_DamageTags_2, const struct FVector& K2Node_Event_Momentum_2, struct FHitResult& K2Node_Event_HitInfo_2, class AFortPawn* K2Node_Event_InstigatedBy_2, class AActor* K2Node_Event_DamageCauser_2, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_2, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_GetDistanceBetweenActors_Distance, bool CallFunc_Less_FloatFloat_ReturnValue, TDelegate<void(bool bVisible)> K2Node_CreateDelegate_OutputDelegate_1, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue_4, EEndPlayReason K2Node_Event_EndPlayReason, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_2, Enum_NPC_AlertLevel CallFunc_NPC_GetAlertLevelInfo_AlertLevel, const struct FGameplayTag& CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag, bool CallFunc_NPC_GetAlertLevelInfo_ValidDataFound, bool K2Node_CustomEvent_bVisible, bool CallFunc_IsValid_ReturnValue_6, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_2, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_2, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_3, class AActor* K2Node_CustomEvent_Vehicle, const struct FVector& K2Node_CustomEvent_Velocity, EFortRarity CallFunc_NPC_SetBestLootRarityInInventory_NPC_BestLootRarityInInventory, bool CallFunc_Not_PreBool_ReturnValue, float K2Node_Event_Damage_1, struct FGameplayTagContainer& K2Node_Event_DamageTags_1, const struct FVector& K2Node_Event_Momentum_1, struct FHitResult& K2Node_Event_HitInfo_1, class AFortPawn* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue, class AController* K2Node_Event_NewController, const struct FGameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue, Enum_NPC_AlertLevel K2Node_CustomEvent_NPC_AlertLevel_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, Enum_NPC_AlertLevel K2Node_CustomEvent_NPC_AlertLevel, float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_4, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_NPC_TryToDropLootOnDeath_CanDropLoot, const struct FGameplayTag& K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, Enum_NPC_AlertLevel K2Node_CustomEvent_NewNPC_AlertLevel, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_8, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_3, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_3, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue_1, class AFortAIPawn* K2Node_CustomEvent_AI, class AFortPlayerController* K2Node_CustomEvent_InteractingPlayerController, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, class AActor* K2Node_CustomEvent_AIPawn, class AFortPlayerPawn* K2Node_CustomEvent_InteractingPlayerPawn, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_IsValid_ReturnValue_11, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_4, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_4, bool K2Node_DynamicCast_bSuccess_4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "ExecuteUbergraph_NPC_Pawn_Parent");

	Params::NPC_Pawn_Parent_C_ExecuteUbergraph_NPC_Pawn_Parent Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetUserWidgetObject_ReturnValue = CallFunc_GetUserWidgetObject_ReturnValue;
	Parms.K2Node_DynamicCast_AsNPCStatus_Widget = K2Node_DynamicCast_AsNPCStatus_Widget;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_GetWorldSubsystem_ReturnValue = CallFunc_GetWorldSubsystem_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;
	Parms.K2Node_CreateDelegate_OutputDelegate = K2Node_CreateDelegate_OutputDelegate;
	Parms.CallFunc_IsValid_ReturnValue_2 = CallFunc_IsValid_ReturnValue_2;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue_3 = CallFunc_IsValid_ReturnValue_3;
	Parms.CallFunc_GetUserWidgetObject_ReturnValue_1 = CallFunc_GetUserWidgetObject_ReturnValue_1;
	Parms.K2Node_DynamicCast_AsNPCStatus_Widget_1 = K2Node_DynamicCast_AsNPCStatus_Widget_1;
	Parms.K2Node_DynamicCast_bSuccess_1 = K2Node_DynamicCast_bSuccess_1;
	Parms.K2Node_Event_Damage_3 = K2Node_Event_Damage_3;
	Parms.K2Node_Event_DamageTags_3 = std::move(K2Node_Event_DamageTags_3);
	Parms.K2Node_Event_Momentum_3 = std::move(K2Node_Event_Momentum_3);
	Parms.K2Node_Event_HitInfo_3 = std::move(K2Node_Event_HitInfo_3);
	Parms.K2Node_Event_InstigatedBy_3 = K2Node_Event_InstigatedBy_3;
	Parms.K2Node_Event_DamageCauser_3 = K2Node_Event_DamageCauser_3;
	Parms.K2Node_Event_EffectContext_3 = std::move(K2Node_Event_EffectContext_3);
	Parms.CallFunc_GetHealth_ReturnValue = CallFunc_GetHealth_ReturnValue;
	Parms.CallFunc_GetMaxHealth_ReturnValue = CallFunc_GetMaxHealth_ReturnValue;
	Parms.K2Node_Event_Damage_2 = K2Node_Event_Damage_2;
	Parms.K2Node_Event_DamageTags_2 = std::move(K2Node_Event_DamageTags_2);
	Parms.K2Node_Event_Momentum_2 = std::move(K2Node_Event_Momentum_2);
	Parms.K2Node_Event_HitInfo_2 = std::move(K2Node_Event_HitInfo_2);
	Parms.K2Node_Event_InstigatedBy_2 = K2Node_Event_InstigatedBy_2;
	Parms.K2Node_Event_DamageCauser_2 = K2Node_Event_DamageCauser_2;
	Parms.K2Node_Event_EffectContext_2 = std::move(K2Node_Event_EffectContext_2);
	Parms.CallFunc_Divide_FloatFloat_ReturnValue = CallFunc_Divide_FloatFloat_ReturnValue;
	Parms.CallFunc_GetDistanceBetweenActors_Distance = CallFunc_GetDistanceBetweenActors_Distance;
	Parms.CallFunc_Less_FloatFloat_ReturnValue = CallFunc_Less_FloatFloat_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate_1 = K2Node_CreateDelegate_OutputDelegate_1;
	Parms.CallFunc_GetCurrent_ReturnValue = CallFunc_GetCurrent_ReturnValue;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.CallFunc_IsValid_ReturnValue_4 = CallFunc_IsValid_ReturnValue_4;
	Parms.K2Node_Event_EndPlayReason = K2Node_Event_EndPlayReason;
	Parms.CallFunc_GetCurrent_ReturnValue_1 = CallFunc_GetCurrent_ReturnValue_1;
	Parms.K2Node_CreateDelegate_OutputDelegate_2 = K2Node_CreateDelegate_OutputDelegate_2;
	Parms.CallFunc_IsValid_ReturnValue_5 = CallFunc_IsValid_ReturnValue_5;
	Parms.CallFunc_HasAuthority_ReturnValue_2 = CallFunc_HasAuthority_ReturnValue_2;
	Parms.CallFunc_NPC_GetAlertLevelInfo_AlertLevel = CallFunc_NPC_GetAlertLevelInfo_AlertLevel;
	Parms.CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag = std::move(CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag);
	Parms.CallFunc_NPC_GetAlertLevelInfo_ValidDataFound = CallFunc_NPC_GetAlertLevelInfo_ValidDataFound;
	Parms.K2Node_CustomEvent_bVisible = K2Node_CustomEvent_bVisible;
	Parms.CallFunc_IsValid_ReturnValue_6 = CallFunc_IsValid_ReturnValue_6;
	Parms.CallFunc_GetUserWidgetObject_ReturnValue_2 = CallFunc_GetUserWidgetObject_ReturnValue_2;
	Parms.K2Node_DynamicCast_AsNPCStatus_Widget_2 = K2Node_DynamicCast_AsNPCStatus_Widget_2;
	Parms.K2Node_DynamicCast_bSuccess_2 = K2Node_DynamicCast_bSuccess_2;
	Parms.CallFunc_IsVisible_ReturnValue = CallFunc_IsVisible_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_3 = CallFunc_HasAuthority_ReturnValue_3;
	Parms.K2Node_CustomEvent_Vehicle = K2Node_CustomEvent_Vehicle;
	Parms.K2Node_CustomEvent_Velocity = std::move(K2Node_CustomEvent_Velocity);
	Parms.CallFunc_NPC_SetBestLootRarityInInventory_NPC_BestLootRarityInInventory = CallFunc_NPC_SetBestLootRarityInInventory_NPC_BestLootRarityInInventory;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.K2Node_Event_Damage_1 = K2Node_Event_Damage_1;
	Parms.K2Node_Event_DamageTags_1 = std::move(K2Node_Event_DamageTags_1);
	Parms.K2Node_Event_Momentum_1 = std::move(K2Node_Event_Momentum_1);
	Parms.K2Node_Event_HitInfo_1 = std::move(K2Node_Event_HitInfo_1);
	Parms.K2Node_Event_InstigatedBy_1 = K2Node_Event_InstigatedBy_1;
	Parms.K2Node_Event_DamageCauser_1 = K2Node_Event_DamageCauser_1;
	Parms.K2Node_Event_EffectContext_1 = std::move(K2Node_Event_EffectContext_1);
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_7 = CallFunc_IsValid_ReturnValue_7;
	Parms.CallFunc_Greater_FloatFloat_ReturnValue = CallFunc_Greater_FloatFloat_ReturnValue;
	Parms.CallFunc_TryActivateAbilitiesByTag_ReturnValue = CallFunc_TryActivateAbilitiesByTag_ReturnValue;
	Parms.K2Node_Event_NewController = K2Node_Event_NewController;
	Parms.CallFunc_MakeLiteralGameplayTagContainer_ReturnValue = std::move(CallFunc_MakeLiteralGameplayTagContainer_ReturnValue);
	Parms.CallFunc_NotEqual_GameplayTagContainer_ReturnValue = CallFunc_NotEqual_GameplayTagContainer_ReturnValue;
	Parms.K2Node_CustomEvent_NPC_AlertLevel_1 = K2Node_CustomEvent_NPC_AlertLevel_1;
	Parms.CallFunc_NotEqual_ByteByte_ReturnValue = CallFunc_NotEqual_ByteByte_ReturnValue;
	Parms.K2Node_CreateDelegate_OutputDelegate_3 = K2Node_CreateDelegate_OutputDelegate_3;
	Parms.K2Node_CustomEvent_NPC_AlertLevel = K2Node_CustomEvent_NPC_AlertLevel;
	Parms.CallFunc_GetValueAtLevel_ReturnValue = CallFunc_GetValueAtLevel_ReturnValue;
	Parms.CallFunc_GetValueAtLevel_ReturnValue_1 = CallFunc_GetValueAtLevel_ReturnValue_1;
	Parms.CallFunc_RandomFloatInRange_ReturnValue = CallFunc_RandomFloatInRange_ReturnValue;
	Parms.CallFunc_K2_SetTimerDelegate_ReturnValue = std::move(CallFunc_K2_SetTimerDelegate_ReturnValue);
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_4 = CallFunc_HasAuthority_ReturnValue_4;
	Parms.K2Node_Event_Damage = K2Node_Event_Damage;
	Parms.K2Node_Event_DamageTags = std::move(K2Node_Event_DamageTags);
	Parms.K2Node_Event_Momentum = std::move(K2Node_Event_Momentum);
	Parms.K2Node_Event_HitInfo = std::move(K2Node_Event_HitInfo);
	Parms.K2Node_Event_InstigatedBy = K2Node_Event_InstigatedBy;
	Parms.K2Node_Event_DamageCauser = K2Node_Event_DamageCauser;
	Parms.K2Node_Event_EffectContext = std::move(K2Node_Event_EffectContext);
	Parms.CallFunc_NPC_TryToDropLootOnDeath_CanDropLoot = CallFunc_NPC_TryToDropLootOnDeath_CanDropLoot;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);
	Parms.CallFunc_Not_PreBool_ReturnValue_1 = CallFunc_Not_PreBool_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsBool = CallFunc_NPC_GetScalableFloatHotfixValue_AsBool;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded = CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat = CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat;
	Parms.K2Node_CustomEvent_NewNPC_AlertLevel = K2Node_CustomEvent_NewNPC_AlertLevel;
	Parms.CallFunc_Greater_FloatFloat_ReturnValue_1 = CallFunc_Greater_FloatFloat_ReturnValue_1;
	Parms.CallFunc_HasAuthority_ReturnValue_5 = CallFunc_HasAuthority_ReturnValue_5;
	Parms.CallFunc_HasAuthority_ReturnValue_6 = CallFunc_HasAuthority_ReturnValue_6;
	Parms.CallFunc_IsValid_ReturnValue_8 = CallFunc_IsValid_ReturnValue_8;
	Parms.CallFunc_GetUserWidgetObject_ReturnValue_3 = CallFunc_GetUserWidgetObject_ReturnValue_3;
	Parms.K2Node_DynamicCast_AsNPCStatus_Widget_3 = K2Node_DynamicCast_AsNPCStatus_Widget_3;
	Parms.K2Node_DynamicCast_bSuccess_3 = K2Node_DynamicCast_bSuccess_3;
	Parms.CallFunc_IsValid_ReturnValue_9 = CallFunc_IsValid_ReturnValue_9;
	Parms.CallFunc_TryActivateAbilitiesByTag_ReturnValue_1 = CallFunc_TryActivateAbilitiesByTag_ReturnValue_1;
	Parms.K2Node_CustomEvent_AI = K2Node_CustomEvent_AI;
	Parms.K2Node_CustomEvent_InteractingPlayerController = K2Node_CustomEvent_InteractingPlayerController;
	Parms.CallFunc_GetPlayerPawn_ReturnValue = CallFunc_GetPlayerPawn_ReturnValue;
	Parms.K2Node_CustomEvent_AIPawn = K2Node_CustomEvent_AIPawn;
	Parms.K2Node_CustomEvent_InteractingPlayerPawn = K2Node_CustomEvent_InteractingPlayerPawn;
	Parms.CallFunc_IsValid_ReturnValue_10 = CallFunc_IsValid_ReturnValue_10;
	Parms.CallFunc_IsValid_ReturnValue_11 = CallFunc_IsValid_ReturnValue_11;
	Parms.CallFunc_GetUserWidgetObject_ReturnValue_4 = CallFunc_GetUserWidgetObject_ReturnValue_4;
	Parms.K2Node_DynamicCast_AsNPCStatus_Widget_4 = K2Node_DynamicCast_AsNPCStatus_Widget_4;
	Parms.K2Node_DynamicCast_bSuccess_4 = K2Node_DynamicCast_bSuccess_4;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.On NPC PawnInteractedWith
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           AIPawn                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  InteractingPlayerPawn                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::On_NPC_PawnInteractedWith(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "On NPC PawnInteractedWith");

	Params::NPC_Pawn_Parent_C_On_NPC_PawnInteractedWith Parms{};

	Parms.AIPawn = AIPawn;
	Parms.InteractingPlayerPawn = InteractingPlayerPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC Pawn Interact
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortAIPawn*                      AI                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            InteractingPlayerController                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_Pawn_Interact(class AFortAIPawn* AI, class AFortPlayerController* InteractingPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC Pawn Interact");

	Params::NPC_Pawn_Parent_C_NPC_Pawn_Interact Parms{};

	Parms.AI = AI;
	Parms.InteractingPlayerController = InteractingPlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.HandleInteracts
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::HandleInteracts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "HandleInteracts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_ForceAlertLevel_Aggressive
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_ForceAlertLevel_Aggressive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_ForceAlertLevel_Aggressive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_ForceAlertLevel_Alerted
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_ForceAlertLevel_Alerted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_ForceAlertLevel_Alerted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_ForceAlertLevel_NA
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_ForceAlertLevel_NA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_ForceAlertLevel_NA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_ForceAlertLevel_Unaware
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_ForceAlertLevel_Unaware()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_ForceAlertLevel_Unaware");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_ForceAlertLevel_Invalid
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_ForceAlertLevel_Invalid()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_ForceAlertLevel_Invalid");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_AlertLevel_ClearDebug
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::Debug_AlertLevel_ClearDebug()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_AlertLevel_ClearDebug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.Debug_AlertLevel_ForceLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     NewNPC_AlertLevel                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::Debug_AlertLevel_ForceLevel(Enum_NPC_AlertLevel NewNPC_AlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "Debug_AlertLevel_ForceLevel");

	Params::NPC_Pawn_Parent_C_Debug_AlertLevel_ForceLevel Parms{};

	Parms.NewNPC_AlertLevel = NewNPC_AlertLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPCDisableHealthBars
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPCDisableHealthBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPCDisableHealthBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPCEnableHealthBars
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPCEnableHealthBars()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPCEnableHealthBars");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnDeathServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Parent_C::OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnDeathServer");

	Params::NPC_Pawn_Parent_C_OnDeathServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.TriggerIdleVO
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::TriggerIdleVO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "TriggerIdleVO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC InitializeIdleVO
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPC_InitializeIdleVO()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC InitializeIdleVO");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPCAlertLevelChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     Param_NPC_AlertLevel                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPCAlertLevelChanged(Enum_NPC_AlertLevel Param_NPC_AlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPCAlertLevelChanged");

	Params::NPC_Pawn_Parent_C_NPCAlertLevelChanged Parms{};

	Parms.Param_NPC_AlertLevel = Param_NPC_AlertLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.RequestUpdateNPCAlertLevel
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     Param_NPC_AlertLevel                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::RequestUpdateNPCAlertLevel(Enum_NPC_AlertLevel Param_NPC_AlertLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "RequestUpdateNPCAlertLevel");

	Params::NPC_Pawn_Parent_C_RequestUpdateNPCAlertLevel Parms{};

	Parms.Param_NPC_AlertLevel = Param_NPC_AlertLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "ReceivePossessed");

	Params::NPC_Pawn_Parent_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC SetupHealthBarOnDeath
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPC_SetupHealthBarOnDeath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC SetupHealthBarOnDeath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnDeathPlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Parent_C::OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnDeathPlayEffects");

	Params::NPC_Pawn_Parent_C_OnDeathPlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.TestLoot
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::TestLoot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "TestLoot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ParentLaunchVehicle
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Vehicle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Velocity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_ParentLaunchVehicle(class AActor* Vehicle, const struct FVector& Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ParentLaunchVehicle");

	Params::NPC_Pawn_Parent_C_NPC_ParentLaunchVehicle Parms{};

	Parms.Vehicle = Vehicle;
	Parms.Velocity = std::move(Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.WidgetVisibilityChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::WidgetVisibilityChanged(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "WidgetVisibilityChanged");

	Params::NPC_Pawn_Parent_C_WidgetVisibilityChanged Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "ReceiveEndPlay");

	Params::NPC_Pawn_Parent_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.GrantStartingItems
// (BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::GrantStartingItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "GrantStartingItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ANPC_Pawn_Parent_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnDamagePlayEffects
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AFortPawn*                        InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Parent_C::OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnDamagePlayEffects");

	Params::NPC_Pawn_Parent_C_OnDamagePlayEffects Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnDamageServer
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            DamageTags                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FVector                          Momentum                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEffectContextHandle     EffectContext                                          (BlueprintVisible, BlueprintReadOnly, Parm)

void ANPC_Pawn_Parent_C::OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnDamageServer");

	Params::NPC_Pawn_Parent_C_OnDamageServer Parms{};

	Parms.Damage = Damage;
	Parms.DamageTags = std::move(DamageTags);
	Parms.Momentum = std::move(Momentum);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.EffectContext = std::move(EffectContext);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.ShouldUpdateSkeletalMesh
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ANPC_Pawn_Parent_C::ShouldUpdateSkeletalMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "ShouldUpdateSkeletalMesh");

	Params::NPC_Pawn_Parent_C_ShouldUpdateSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ApplyRecentlyDamagedTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           RecentlyDamagedOverride                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidClass_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidClass_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FActiveGameplayEffectHandle      CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue    (NoDestructor, HasGetValueTypeHash)
// struct FActiveGameplayEffectHandle      CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1  (NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_ApplyRecentlyDamagedTag(class UClass* RecentlyDamagedOverride, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsValidClass_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ApplyRecentlyDamagedTag");

	Params::NPC_Pawn_Parent_C_NPC_ApplyRecentlyDamagedTag Parms{};

	Parms.RecentlyDamagedOverride = RecentlyDamagedOverride;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_IsValidClass_ReturnValue = CallFunc_IsValidClass_ReturnValue;
	Parms.CallFunc_IsValidClass_ReturnValue_1 = CallFunc_IsValidClass_ReturnValue_1;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue = std::move(CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue);
	Parms.CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1 = std::move(CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC GetAlertLevelInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_NPC_AlertLevel                     AlertLevel                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     AlertLevelTag                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)
// bool                                    ValidDataFound                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     CallFunc_Map_Find_Value                                (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Map_Find_ReturnValue                          (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_GetAlertLevelInfo(Enum_NPC_AlertLevel* AlertLevel, struct FGameplayTag* AlertLevelTag, bool* ValidDataFound, const struct FGameplayTag& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC GetAlertLevelInfo");

	Params::NPC_Pawn_Parent_C_NPC_GetAlertLevelInfo Parms{};

	Parms.CallFunc_Map_Find_Value = std::move(CallFunc_Map_Find_Value);
	Parms.CallFunc_Map_Find_ReturnValue = CallFunc_Map_Find_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (AlertLevel != nullptr)
		*AlertLevel = std::move(Parms.AlertLevel);

	if (AlertLevelTag != nullptr)
		*AlertLevelTag = Parms.AlertLevelTag;

	if (ValidDataFound != nullptr)
		*ValidDataFound = std::move(Parms.ValidDataFound);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnRep_NPC_AlertLevel
// (HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Conv_BoolToInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAuthority_ReturnValue_1                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UFortGameplayDataTrackerComponentManager*CallFunc_GetCurrent_ReturnValue                        (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// Enum_NPC_AlertLevel                     CallFunc_NPC_GetAlertLevelInfo_AlertLevel              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag           (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetAlertLevelInfo_ValidDataFound          (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             CallFunc_GetTagName_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_GetEnumeratorUserFriendlyName_ReturnValue     (ZeroConstructor, HasGetValueTypeHash)
// class FName                             CallFunc_Conv_StringToName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_BuildString_Name_ReturnValue                  (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_BuildString_Name_ReturnValue_1                (ZeroConstructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::OnRep_NPC_AlertLevel(bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue, Enum_NPC_AlertLevel CallFunc_NPC_GetAlertLevelInfo_AlertLevel, const struct FGameplayTag& CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag, bool CallFunc_NPC_GetAlertLevelInfo_ValidDataFound, bool CallFunc_IsValid_ReturnValue, class FName CallFunc_GetTagName_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const class FString& CallFunc_BuildString_Name_ReturnValue, const class FString& CallFunc_BuildString_Name_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnRep_NPC_AlertLevel");

	Params::NPC_Pawn_Parent_C_OnRep_NPC_AlertLevel Parms{};

	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_Conv_BoolToInt_ReturnValue = CallFunc_Conv_BoolToInt_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_HasAuthority_ReturnValue_1 = CallFunc_HasAuthority_ReturnValue_1;
	Parms.CallFunc_GetCurrent_ReturnValue = CallFunc_GetCurrent_ReturnValue;
	Parms.CallFunc_NPC_GetAlertLevelInfo_AlertLevel = CallFunc_NPC_GetAlertLevelInfo_AlertLevel;
	Parms.CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag = std::move(CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag);
	Parms.CallFunc_NPC_GetAlertLevelInfo_ValidDataFound = CallFunc_NPC_GetAlertLevelInfo_ValidDataFound;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_GetTagName_ReturnValue = CallFunc_GetTagName_ReturnValue;
	Parms.CallFunc_GetEnumeratorUserFriendlyName_ReturnValue = std::move(CallFunc_GetEnumeratorUserFriendlyName_ReturnValue);
	Parms.CallFunc_Conv_StringToName_ReturnValue = CallFunc_Conv_StringToName_ReturnValue;
	Parms.CallFunc_BuildString_Name_ReturnValue = std::move(CallFunc_BuildString_Name_ReturnValue);
	Parms.CallFunc_BuildString_Name_ReturnValue_1 = std::move(CallFunc_BuildString_Name_ReturnValue_1);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC SetBestLootRarityInInventory
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFortRarity                             Param_NPC_BestLootRarityInInventory                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortRarity                             NPC_BestLootRarityInventoryFound                       (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_ByteByte_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IFortInventoryOwnerInterface>CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput(ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UFortWorldItem*>           CallFunc_GetItemsFromInventoryOwner_Items              (ReferenceParm, HasGetValueTypeHash)
// class FName                             CallFunc_GetEnumeratorName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UFortWorldItem*                   CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_BuildString_Name_ReturnValue                  (ZeroConstructor, HasGetValueTypeHash)
// class FText                             CallFunc_GetDisplayName_ReturnValue                    ()
// class FString                           CallFunc_Conv_TextToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// EFortRarity                             CallFunc_GetRarity_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)
// class FName                             CallFunc_GetEnumeratorName_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_2                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Conv_NameToString_ReturnValue                 (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_3                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_4                   (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_ByteByte_ReturnValue_1                (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_5                   (ZeroConstructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_SetBestLootRarityInInventory(EFortRarity* Param_NPC_BestLootRarityInInventory, EFortRarity NPC_BestLootRarityInventoryFound, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_ByteByte_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput, TArray<class UFortWorldItem*>& CallFunc_GetItemsFromInventoryOwner_Items, class FName CallFunc_GetEnumeratorName_ReturnValue, class UFortWorldItem* CallFunc_Array_Get_Item, const class FString& CallFunc_BuildString_Name_ReturnValue, class FText CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, EFortRarity CallFunc_GetRarity_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FName CallFunc_GetEnumeratorName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_Greater_ByteByte_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC SetBestLootRarityInInventory");

	Params::NPC_Pawn_Parent_C_NPC_SetBestLootRarityInInventory Parms{};

	Parms.NPC_BestLootRarityInventoryFound = NPC_BestLootRarityInventoryFound;
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_Greater_ByteByte_ReturnValue = CallFunc_Greater_ByteByte_ReturnValue;
	Parms.CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput = CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput;
	Parms.CallFunc_GetItemsFromInventoryOwner_Items = std::move(CallFunc_GetItemsFromInventoryOwner_Items);
	Parms.CallFunc_GetEnumeratorName_ReturnValue = CallFunc_GetEnumeratorName_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.CallFunc_BuildString_Name_ReturnValue = std::move(CallFunc_BuildString_Name_ReturnValue);
	Parms.CallFunc_GetDisplayName_ReturnValue = CallFunc_GetDisplayName_ReturnValue;
	Parms.CallFunc_Conv_TextToString_ReturnValue = std::move(CallFunc_Conv_TextToString_ReturnValue);
	Parms.CallFunc_GetRarity_ReturnValue = CallFunc_GetRarity_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);
	Parms.CallFunc_GetEnumeratorName_ReturnValue_1 = CallFunc_GetEnumeratorName_ReturnValue_1;
	Parms.CallFunc_Concat_StrStr_ReturnValue_2 = std::move(CallFunc_Concat_StrStr_ReturnValue_2);
	Parms.CallFunc_Conv_NameToString_ReturnValue = std::move(CallFunc_Conv_NameToString_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_3 = std::move(CallFunc_Concat_StrStr_ReturnValue_3);
	Parms.CallFunc_Concat_StrStr_ReturnValue_4 = std::move(CallFunc_Concat_StrStr_ReturnValue_4);
	Parms.CallFunc_Greater_ByteByte_ReturnValue_1 = CallFunc_Greater_ByteByte_ReturnValue_1;
	Parms.CallFunc_Concat_StrStr_ReturnValue_5 = std::move(CallFunc_Concat_StrStr_ReturnValue_5);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetItemsFromInventoryOwner_Items = std::move(Parms.CallFunc_GetItemsFromInventoryOwner_Items);

	if (Param_NPC_BestLootRarityInInventory != nullptr)
		*Param_NPC_BestLootRarityInInventory = std::move(Parms.Param_NPC_BestLootRarityInInventory);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC GetInventoryInformation
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasItemInInventory                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TotalNumberOfInventoryItems                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LastInventoryItemIndex                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HasEnoughItemsToDeliver                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ConsumedEnoughItemsToBeConsideredFull                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_GetScalableFloatHotfixValue_AsBool        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetScalableFloatHotfixValue_AsBool_1      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded_1(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat_1     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_BuildString_Bool_ReturnValue                  (ZeroConstructor, HasGetValueTypeHash)
// TScriptInterface<class IFortInventoryOwnerInterface>CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput(ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UFortWorldItem*>           CallFunc_GetItemsFromInventoryOwner_Items              (ReferenceParm, HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Array_LastIndex_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GreaterEqual_IntInt_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GreaterEqual_IntInt_ReturnValue_1             (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Greater_IntInt_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_BuildString_Bool_ReturnValue_1                (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_BuildString_Bool_ReturnValue_2                (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_BuildString_Bool_ReturnValue_3                (ZeroConstructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_GetInventoryInformation(bool* HasItemInInventory, int32* TotalNumberOfInventoryItems, int32* LastInventoryItemIndex, bool* HasEnoughItemsToDeliver, bool* ConsumedEnoughItemsToBeConsideredFull, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool_1, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded_1, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat_1, bool CallFunc_Greater_IntInt_ReturnValue, const class FString& CallFunc_BuildString_Bool_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput, TArray<class UFortWorldItem*>& CallFunc_GetItemsFromInventoryOwner_Items, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_BuildString_Bool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, const class FString& CallFunc_BuildString_Bool_ReturnValue_2, const class FString& CallFunc_BuildString_Bool_ReturnValue_3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC GetInventoryInformation");

	Params::NPC_Pawn_Parent_C_NPC_GetInventoryInformation Parms{};

	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsBool = CallFunc_NPC_GetScalableFloatHotfixValue_AsBool;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded = CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat = CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsBool_1 = CallFunc_NPC_GetScalableFloatHotfixValue_AsBool_1;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded_1 = CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded_1;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat_1 = CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat_1;
	Parms.CallFunc_Greater_IntInt_ReturnValue = CallFunc_Greater_IntInt_ReturnValue;
	Parms.CallFunc_BuildString_Bool_ReturnValue = std::move(CallFunc_BuildString_Bool_ReturnValue);
	Parms.CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput = CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput;
	Parms.CallFunc_GetItemsFromInventoryOwner_Items = std::move(CallFunc_GetItemsFromInventoryOwner_Items);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Array_LastIndex_ReturnValue = CallFunc_Array_LastIndex_ReturnValue;
	Parms.CallFunc_GreaterEqual_IntInt_ReturnValue = CallFunc_GreaterEqual_IntInt_ReturnValue;
	Parms.CallFunc_GreaterEqual_IntInt_ReturnValue_1 = CallFunc_GreaterEqual_IntInt_ReturnValue_1;
	Parms.CallFunc_Greater_IntInt_ReturnValue_1 = CallFunc_Greater_IntInt_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BuildString_Bool_ReturnValue_1 = std::move(CallFunc_BuildString_Bool_ReturnValue_1);
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_BuildString_Bool_ReturnValue_2 = std::move(CallFunc_BuildString_Bool_ReturnValue_2);
	Parms.CallFunc_BuildString_Bool_ReturnValue_3 = std::move(CallFunc_BuildString_Bool_ReturnValue_3);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetItemsFromInventoryOwner_Items = std::move(Parms.CallFunc_GetItemsFromInventoryOwner_Items);

	if (HasItemInInventory != nullptr)
		*HasItemInInventory = std::move(Parms.HasItemInInventory);

	if (TotalNumberOfInventoryItems != nullptr)
		*TotalNumberOfInventoryItems = std::move(Parms.TotalNumberOfInventoryItems);

	if (LastInventoryItemIndex != nullptr)
		*LastInventoryItemIndex = std::move(Parms.LastInventoryItemIndex);

	if (HasEnoughItemsToDeliver != nullptr)
		*HasEnoughItemsToDeliver = std::move(Parms.HasEnoughItemsToDeliver);

	if (ConsumedEnoughItemsToBeConsideredFull != nullptr)
		*ConsumedEnoughItemsToBeConsideredFull = std::move(Parms.ConsumedEnoughItemsToBeConsideredFull);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC PawnDebugMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    OnlyWhenDebug                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Concat_StrStr_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_1                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_2                   (ZeroConstructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// class FString                           CallFunc_GetObjectName_ReturnValue                     (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_3                   (ZeroConstructor, HasGetValueTypeHash)
// class FString                           CallFunc_Concat_StrStr_ReturnValue_4                   (ZeroConstructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_PawnDebugMessage(const class FString& String, bool OnlyWhenDebug, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const class FString& CallFunc_GetObjectName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC PawnDebugMessage");

	Params::NPC_Pawn_Parent_C_NPC_PawnDebugMessage Parms{};

	Parms.String = std::move(String);
	Parms.OnlyWhenDebug = OnlyWhenDebug;
	Parms.CallFunc_Concat_StrStr_ReturnValue = std::move(CallFunc_Concat_StrStr_ReturnValue);
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_Concat_StrStr_ReturnValue_1 = std::move(CallFunc_Concat_StrStr_ReturnValue_1);
	Parms.CallFunc_Concat_StrStr_ReturnValue_2 = std::move(CallFunc_Concat_StrStr_ReturnValue_2);
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_GetObjectName_ReturnValue = std::move(CallFunc_GetObjectName_ReturnValue);
	Parms.CallFunc_Concat_StrStr_ReturnValue_3 = std::move(CallFunc_Concat_StrStr_ReturnValue_3);
	Parms.CallFunc_Concat_StrStr_ReturnValue_4 = std::move(CallFunc_Concat_StrStr_ReturnValue_4);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC SendGameplayCuePickupGrabbed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsDedicatedServer_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayCueParameters           CallFunc_MakeGameplayCueParameters_ReturnValue         (ContainsInstancedReference)
// struct FGameplayTag                     CallFunc_MakeLiteralGameplayTag_ReturnValue            (NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsGameplayTagValid_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_SendGameplayCuePickupGrabbed(bool CallFunc_IsDedicatedServer_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, bool CallFunc_IsGameplayTagValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC SendGameplayCuePickupGrabbed");

	Params::NPC_Pawn_Parent_C_NPC_SendGameplayCuePickupGrabbed Parms{};

	Parms.CallFunc_IsDedicatedServer_ReturnValue = CallFunc_IsDedicatedServer_ReturnValue;
	Parms.CallFunc_MakeGameplayCueParameters_ReturnValue = std::move(CallFunc_MakeGameplayCueParameters_ReturnValue);
	Parms.CallFunc_MakeLiteralGameplayTag_ReturnValue = std::move(CallFunc_MakeLiteralGameplayTag_ReturnValue);
	Parms.CallFunc_IsGameplayTagValid_ReturnValue = CallFunc_IsGameplayTagValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.OnRep_NPC BestLootRarityInInventory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsDedicatedServer_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::OnRep_NPC_BestLootRarityInInventory(bool CallFunc_IsDedicatedServer_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "OnRep_NPC BestLootRarityInInventory");

	Params::NPC_Pawn_Parent_C_OnRep_NPC_BestLootRarityInInventory Parms{};

	Parms.CallFunc_IsDedicatedServer_ReturnValue = CallFunc_IsDedicatedServer_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC PickupGrabbed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPickup*                      FortPickupGrabbed                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_PickupGrabbed(class AFortPickup* FortPickupGrabbed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC PickupGrabbed");

	Params::NPC_Pawn_Parent_C_NPC_PickupGrabbed Parms{};

	Parms.FortPickupGrabbed = FortPickupGrabbed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC PickupDropped
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPickup*                      FortPickupDropped                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_PickupDropped(class AFortPickup* FortPickupDropped)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC PickupDropped");

	Params::NPC_Pawn_Parent_C_NPC_PickupDropped Parms{};

	Parms.FortPickupDropped = FortPickupDropped;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ScalableFloatIsValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FScalableFloat                   ScalableFloat                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Valid                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_NameName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_ScalableFloatIsValid(struct FScalableFloat& ScalableFloat, bool* Valid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ScalableFloatIsValid");

	Params::NPC_Pawn_Parent_C_NPC_ScalableFloatIsValid Parms{};

	Parms.ScalableFloat = std::move(ScalableFloat);
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_NotEqual_NameName_ReturnValue = CallFunc_NotEqual_NameName_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid != nullptr)
		*Valid = std::move(Parms.Valid);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC GetScalableFloatHotfixValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FScalableFloat                   ScalableFloatHotfix                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   AtLevel                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    AsBool                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AsIntRounded                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   AsFloat                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetValueAtLevel_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Round_ReturnValue                             (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Round_ReturnValue_1                           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Greater_IntInt_ReturnValue_1                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_ScalableFloatIsValid_Valid                (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_GetScalableFloatHotfixValue(struct FScalableFloat& ScalableFloatHotfix, float AtLevel, bool* AsBool, int32* AsIntRounded, float* AsFloat, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_Round_ReturnValue, int32 CallFunc_Round_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_NPC_ScalableFloatIsValid_Valid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC GetScalableFloatHotfixValue");

	Params::NPC_Pawn_Parent_C_NPC_GetScalableFloatHotfixValue Parms{};

	Parms.ScalableFloatHotfix = std::move(ScalableFloatHotfix);
	Parms.AtLevel = AtLevel;
	Parms.CallFunc_GetValueAtLevel_ReturnValue = CallFunc_GetValueAtLevel_ReturnValue;
	Parms.CallFunc_Round_ReturnValue = CallFunc_Round_ReturnValue;
	Parms.CallFunc_Round_ReturnValue_1 = CallFunc_Round_ReturnValue_1;
	Parms.CallFunc_Greater_IntInt_ReturnValue = CallFunc_Greater_IntInt_ReturnValue;
	Parms.CallFunc_Greater_IntInt_ReturnValue_1 = CallFunc_Greater_IntInt_ReturnValue_1;
	Parms.CallFunc_NPC_ScalableFloatIsValid_Valid = CallFunc_NPC_ScalableFloatIsValid_Valid;

	UObject::ProcessEvent(Func, &Parms);

	if (AsBool != nullptr)
		*AsBool = std::move(Parms.AsBool);

	if (AsIntRounded != nullptr)
		*AsIntRounded = std::move(Parms.AsIntRounded);

	if (AsFloat != nullptr)
		*AsFloat = std::move(Parms.AsFloat);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC SetReturnGatheredLootToBlackboard
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             CallFunc_MakeLiteralName_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetInventoryInformation_HasItemInInventory(ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_NPC_GetInventoryInformation_TotalNumberOfInventoryItems(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_NPC_GetInventoryInformation_LastInventoryItemIndex(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetInventoryInformation_HasEnoughItemsToDeliver(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_GetInventoryInformation_ConsumedEnoughItemsToBeConsideredFull(ZeroConstructor, IsPlainOldData, NoDestructor)
// class UBlackboardComponent*             CallFunc_GetBlackboard_ReturnValue                     (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetValueAsBool_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_BoolBool_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_BoolBool_ReturnValue_1               (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_SetReturnGatheredLootToBlackboard(class FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_NPC_GetInventoryInformation_HasItemInInventory, int32 CallFunc_NPC_GetInventoryInformation_TotalNumberOfInventoryItems, int32 CallFunc_NPC_GetInventoryInformation_LastInventoryItemIndex, bool CallFunc_NPC_GetInventoryInformation_HasEnoughItemsToDeliver, bool CallFunc_NPC_GetInventoryInformation_ConsumedEnoughItemsToBeConsideredFull, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC SetReturnGatheredLootToBlackboard");

	Params::NPC_Pawn_Parent_C_NPC_SetReturnGatheredLootToBlackboard Parms{};

	Parms.CallFunc_MakeLiteralName_ReturnValue = CallFunc_MakeLiteralName_ReturnValue;
	Parms.CallFunc_NPC_GetInventoryInformation_HasItemInInventory = CallFunc_NPC_GetInventoryInformation_HasItemInInventory;
	Parms.CallFunc_NPC_GetInventoryInformation_TotalNumberOfInventoryItems = CallFunc_NPC_GetInventoryInformation_TotalNumberOfInventoryItems;
	Parms.CallFunc_NPC_GetInventoryInformation_LastInventoryItemIndex = CallFunc_NPC_GetInventoryInformation_LastInventoryItemIndex;
	Parms.CallFunc_NPC_GetInventoryInformation_HasEnoughItemsToDeliver = CallFunc_NPC_GetInventoryInformation_HasEnoughItemsToDeliver;
	Parms.CallFunc_NPC_GetInventoryInformation_ConsumedEnoughItemsToBeConsideredFull = CallFunc_NPC_GetInventoryInformation_ConsumedEnoughItemsToBeConsideredFull;
	Parms.CallFunc_GetBlackboard_ReturnValue = CallFunc_GetBlackboard_ReturnValue;
	Parms.CallFunc_GetValueAsBool_ReturnValue = CallFunc_GetValueAsBool_ReturnValue;
	Parms.CallFunc_NotEqual_BoolBool_ReturnValue = CallFunc_NotEqual_BoolBool_ReturnValue;
	Parms.CallFunc_NotEqual_BoolBool_ReturnValue_1 = CallFunc_NotEqual_BoolBool_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ResetOriginalGravityScale
// (Public, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPC_ResetOriginalGravityScale()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ResetOriginalGravityScale");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ResetOriginalRotationRate
// (Public, BlueprintCallable, BlueprintEvent)

void ANPC_Pawn_Parent_C::NPC_ResetOriginalRotationRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ResetOriginalRotationRate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC SetLootCollectionPhaseCompleteToBlackboard
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LootCollectionPhaseComplete                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             CallFunc_MakeLiteralName_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBlackboardComponent*             CallFunc_GetBlackboard_ReturnValue                     (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GetValueAsBool_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_BoolBool_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_SetLootCollectionPhaseCompleteToBlackboard(bool LootCollectionPhaseComplete, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC SetLootCollectionPhaseCompleteToBlackboard");

	Params::NPC_Pawn_Parent_C_NPC_SetLootCollectionPhaseCompleteToBlackboard Parms{};

	Parms.LootCollectionPhaseComplete = LootCollectionPhaseComplete;
	Parms.CallFunc_MakeLiteralName_ReturnValue = CallFunc_MakeLiteralName_ReturnValue;
	Parms.CallFunc_GetBlackboard_ReturnValue = CallFunc_GetBlackboard_ReturnValue;
	Parms.CallFunc_GetValueAsBool_ReturnValue = CallFunc_GetValueAsBool_ReturnValue;
	Parms.CallFunc_NotEqual_BoolBool_ReturnValue = CallFunc_NotEqual_BoolBool_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC ApplyGameplayEffectWithMMRScaling
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           GE_Class                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ApplyGeToThisActor                                     (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_Option_B___If_false__use_Option_A_Variable   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Temp_bool_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           K2Node_Select_Default                                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_ApplyGameplayEffectWithMMRScaling(class AActor* Actor, class UClass* GE_Class, class AActor* ApplyGeToThisActor, bool Temp_bool_Option_B___If_false__use_Option_A_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, class AActor* K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC ApplyGameplayEffectWithMMRScaling");

	Params::NPC_Pawn_Parent_C_NPC_ApplyGameplayEffectWithMMRScaling Parms{};

	Parms.Actor = Actor;
	Parms.GE_Class = GE_Class;
	Parms.ApplyGeToThisActor = ApplyGeToThisActor;
	Parms.Temp_bool_Option_B___If_false__use_Option_A_Variable = Temp_bool_Option_B___If_false__use_Option_A_Variable;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.Temp_bool_Variable = Temp_bool_Variable;
	Parms.K2Node_Select_Default = K2Node_Select_Default;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC TryToDropLootOnDeath
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            DamageTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    CanDropLoot                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CanDropLootBool                                        (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            CallFunc_MakeLiteralGameplayTagContainer_ReturnValue   ()
// bool                                    CallFunc_NotEqual_NameName_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_GameplayTagContainer_ReturnValue   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_GameplayTagContainer_ReturnValue_1 (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_GameplayTagContainer_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAnyTags_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NotEqual_GameplayTagContainer_ReturnValue_1   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_HasAnyTags_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue                         (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue_1                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<struct FFortItemEntry>           CallFunc_PickLootDrops_OutLootToDrop                   (ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_PickLootDrops_ReturnValue                     (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanOR_ReturnValue_1                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FFortItemEntry                   CallFunc_Array_Get_Item                                ()
// bool                                    CallFunc_BooleanAND_ReturnValue_2                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_BooleanAND_ReturnValue_3                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class IFortInventoryOwnerInterface>CallFunc_GiveItemEntryToInventoryOwner_InventoryOwner_CastInput(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_GiveItemEntryToInventoryOwner_ReturnValue     (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_TryToDropLootOnDeath(const struct FGameplayTagContainer& DamageTags, bool* CanDropLoot, bool CanDropLootBool, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_GameplayTagContainer_ReturnValue, bool CallFunc_EqualEqual_GameplayTagContainer_ReturnValue_1, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, TArray<struct FFortItemEntry>& CallFunc_PickLootDrops_OutLootToDrop, bool CallFunc_PickLootDrops_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, const struct FFortItemEntry& CallFunc_Array_Get_Item, bool CallFunc_BooleanAND_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemEntryToInventoryOwner_InventoryOwner_CastInput, bool CallFunc_GiveItemEntryToInventoryOwner_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC TryToDropLootOnDeath");

	Params::NPC_Pawn_Parent_C_NPC_TryToDropLootOnDeath Parms{};

	Parms.DamageTags = std::move(DamageTags);
	Parms.CanDropLootBool = CanDropLootBool;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_MakeLiteralGameplayTagContainer_ReturnValue = std::move(CallFunc_MakeLiteralGameplayTagContainer_ReturnValue);
	Parms.CallFunc_NotEqual_NameName_ReturnValue = CallFunc_NotEqual_NameName_ReturnValue;
	Parms.CallFunc_EqualEqual_GameplayTagContainer_ReturnValue = CallFunc_EqualEqual_GameplayTagContainer_ReturnValue;
	Parms.CallFunc_EqualEqual_GameplayTagContainer_ReturnValue_1 = CallFunc_EqualEqual_GameplayTagContainer_ReturnValue_1;
	Parms.CallFunc_NotEqual_GameplayTagContainer_ReturnValue = CallFunc_NotEqual_GameplayTagContainer_ReturnValue;
	Parms.CallFunc_HasAnyTags_ReturnValue = CallFunc_HasAnyTags_ReturnValue;
	Parms.CallFunc_NotEqual_GameplayTagContainer_ReturnValue_1 = CallFunc_NotEqual_GameplayTagContainer_ReturnValue_1;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_HasAnyTags_ReturnValue_1 = CallFunc_HasAnyTags_ReturnValue_1;
	Parms.CallFunc_BooleanOR_ReturnValue = CallFunc_BooleanOR_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_1 = CallFunc_BooleanAND_ReturnValue_1;
	Parms.CallFunc_PickLootDrops_OutLootToDrop = std::move(CallFunc_PickLootDrops_OutLootToDrop);
	Parms.CallFunc_PickLootDrops_ReturnValue = CallFunc_PickLootDrops_ReturnValue;
	Parms.CallFunc_BooleanOR_ReturnValue_1 = CallFunc_BooleanOR_ReturnValue_1;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_BooleanAND_ReturnValue_2 = CallFunc_BooleanAND_ReturnValue_2;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue_3 = CallFunc_BooleanAND_ReturnValue_3;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_GiveItemEntryToInventoryOwner_InventoryOwner_CastInput = CallFunc_GiveItemEntryToInventoryOwner_InventoryOwner_CastInput;
	Parms.CallFunc_GiveItemEntryToInventoryOwner_ReturnValue = CallFunc_GiveItemEntryToInventoryOwner_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_PickLootDrops_OutLootToDrop = std::move(Parms.CallFunc_PickLootDrops_OutLootToDrop);

	if (CanDropLoot != nullptr)
		*CanDropLoot = std::move(Parms.CanDropLoot);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC HandleAlertLevelVoice
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_AlertLevel                     Temp_byte_Variable                                     (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Temp_struct_Variable                                   (ConstParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Temp_struct_Variable_1                                 (ConstParm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     Temp_struct_Variable_2                                 (ConstParm, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayTag                     K2Node_Select_Default                                  (ConstParm, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_HandleAlertLevelVoice(Enum_NPC_AlertLevel Temp_byte_Variable, struct FGameplayTag& Temp_struct_Variable, struct FGameplayTag& Temp_struct_Variable_1, struct FGameplayTag& Temp_struct_Variable_2, bool K2Node_SwitchEnum_CmpSuccess, struct FGameplayTag& K2Node_Select_Default)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC HandleAlertLevelVoice");

	Params::NPC_Pawn_Parent_C_NPC_HandleAlertLevelVoice Parms{};

	Parms.Temp_byte_Variable = Temp_byte_Variable;
	Parms.Temp_struct_Variable = std::move(Temp_struct_Variable);
	Parms.Temp_struct_Variable_1 = std::move(Temp_struct_Variable_1);
	Parms.Temp_struct_Variable_2 = std::move(Temp_struct_Variable_2);
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.K2Node_Select_Default = std::move(K2Node_Select_Default);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC CheckIsInSafeZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TestSucceeded                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsInSafeZone                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGameStateBase*                   CallFunc_GetGameState_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAthena_GameState_C*              K2Node_DynamicCast_AsAthena_Game_State                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AFortSafeZoneIndicator*           CallFunc_GetSafeZoneIndicator_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_GetSafeZoneCenter_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   CallFunc_Vector_DistanceSquared_ReturnValue            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_GetSafeZoneRadius_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_Square_ReturnValue                            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_FloatFloat_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_CheckIsInSafeZone(bool* TestSucceeded, bool* IsInSafeZone, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AAthena_GameState_C* K2Node_DynamicCast_AsAthena_Game_State, bool K2Node_DynamicCast_bSuccess, class AFortSafeZoneIndicator* CallFunc_GetSafeZoneIndicator_ReturnValue, const struct FVector& CallFunc_GetSafeZoneCenter_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue, float CallFunc_GetSafeZoneRadius_ReturnValue, float CallFunc_Square_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC CheckIsInSafeZone");

	Params::NPC_Pawn_Parent_C_NPC_CheckIsInSafeZone Parms{};

	Parms.CallFunc_K2_GetActorLocation_ReturnValue = std::move(CallFunc_K2_GetActorLocation_ReturnValue);
	Parms.CallFunc_GetGameState_ReturnValue = CallFunc_GetGameState_ReturnValue;
	Parms.K2Node_DynamicCast_AsAthena_Game_State = K2Node_DynamicCast_AsAthena_Game_State;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_GetSafeZoneIndicator_ReturnValue = CallFunc_GetSafeZoneIndicator_ReturnValue;
	Parms.CallFunc_GetSafeZoneCenter_ReturnValue = std::move(CallFunc_GetSafeZoneCenter_ReturnValue);
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Vector_DistanceSquared_ReturnValue = CallFunc_Vector_DistanceSquared_ReturnValue;
	Parms.CallFunc_GetSafeZoneRadius_ReturnValue = CallFunc_GetSafeZoneRadius_ReturnValue;
	Parms.CallFunc_Square_ReturnValue = CallFunc_Square_ReturnValue;
	Parms.CallFunc_Less_FloatFloat_ReturnValue = CallFunc_Less_FloatFloat_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	if (TestSucceeded != nullptr)
		*TestSucceeded = std::move(Parms.TestSucceeded);

	if (IsInSafeZone != nullptr)
		*IsInSafeZone = std::move(Parms.IsInSafeZone);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC TargetSlotInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// Enum_NPC_TargetSlots                    TargetSlotType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetWeWantToSlotOnto                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TargetSlotCount                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TargetSlotMax                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NPC_TargetSlotsRequired                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    TargetSlotsMaxOrMore                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    TargetSlotCountIsExactlyMax                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    NPC_HasSpaceToSlotOnTarget                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_NPC_TargetSlots                    TargetSlotTypeOut                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           TargetSlotCountingGE                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScalableFloat                   AI_TargetSlotSizeHF                                    (Parm, OutParm)
// struct FScalableFloat                   AI_TargetSlotDurationHF                                (Parm, OutParm)
// class UClass*                           TargetSlotOverrideGE                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           TargetSlotOwnerGE                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           TargetSlotCountingMaxedGE                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           NPC_TargetSlotCountingMaxedGE                          (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           NPC_TargetSlotOwnerGE                                  (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           NPC_TargetSlotOverrideGE                               (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScalableFloat                   NPC_AI_TargetSlotDurationHF                            (Edit, BlueprintVisible)
// struct FScalableFloat                   NPC_AI_TargetSlotSizeHF                                (Edit, BlueprintVisible)
// class UClass*                           NPC_TargetSlotCountingGE                               (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Temp_bool_True_if_break_was_hit_Variable               (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAbilitySystemComponent*          CallFunc_GetAbilitySystemComponent_ReturnValue         (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   Temp_int_Array_Index_Variable                          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_GetScalableFloatHotfixValue_AsBool        (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UClass*>                   K2Node_MakeArray_Array                                 (ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_IsValidClass_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_GetTotalGameplayEffectCount_FinalEffectCount  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Temp_int_Loop_Counter_Variable                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FStruct_NPC_TargetSlots          CallFunc_Array_Get_Item                                (HasGetValueTypeHash)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Less_IntInt_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Add_IntInt_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_MakeLiteralInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_Subtract_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_GreaterEqual_IntInt_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_LessEqual_IntInt_ReturnValue                  (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_IntInt_ReturnValue                 (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_TargetSlotInfo(Enum_NPC_TargetSlots TargetSlotType, class AActor* TargetWeWantToSlotOnto, int32* TargetSlotCount, int32* TargetSlotMax, int32* NPC_TargetSlotsRequired, bool* TargetSlotsMaxOrMore, bool* TargetSlotCountIsExactlyMax, bool* NPC_HasSpaceToSlotOnTarget, Enum_NPC_TargetSlots* TargetSlotTypeOut, class UClass** TargetSlotCountingGE, struct FScalableFloat* AI_TargetSlotSizeHF, struct FScalableFloat* AI_TargetSlotDurationHF, class UClass** TargetSlotOverrideGE, class UClass** TargetSlotOwnerGE, class UClass** TargetSlotCountingMaxedGE, class UClass* NPC_TargetSlotCountingMaxedGE, class UClass* NPC_TargetSlotOwnerGE, class UClass* NPC_TargetSlotOverrideGE, const struct FScalableFloat& NPC_AI_TargetSlotDurationHF, const struct FScalableFloat& NPC_AI_TargetSlotSizeHF, class UClass* NPC_TargetSlotCountingGE, bool Temp_bool_True_if_break_was_hit_Variable, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, TArray<class UClass*>& K2Node_MakeArray_Array, bool CallFunc_IsValidClass_ReturnValue, int32 CallFunc_GetTotalGameplayEffectCount_FinalEffectCount, int32 Temp_int_Loop_Counter_Variable, const struct FStruct_NPC_TargetSlots& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC TargetSlotInfo");

	Params::NPC_Pawn_Parent_C_NPC_TargetSlotInfo Parms{};

	Parms.TargetSlotType = TargetSlotType;
	Parms.TargetWeWantToSlotOnto = TargetWeWantToSlotOnto;
	Parms.NPC_TargetSlotCountingMaxedGE = NPC_TargetSlotCountingMaxedGE;
	Parms.NPC_TargetSlotOwnerGE = NPC_TargetSlotOwnerGE;
	Parms.NPC_TargetSlotOverrideGE = NPC_TargetSlotOverrideGE;
	Parms.NPC_AI_TargetSlotDurationHF = std::move(NPC_AI_TargetSlotDurationHF);
	Parms.NPC_AI_TargetSlotSizeHF = std::move(NPC_AI_TargetSlotSizeHF);
	Parms.NPC_TargetSlotCountingGE = NPC_TargetSlotCountingGE;
	Parms.Temp_bool_True_if_break_was_hit_Variable = Temp_bool_True_if_break_was_hit_Variable;
	Parms.CallFunc_GetAbilitySystemComponent_ReturnValue = CallFunc_GetAbilitySystemComponent_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;
	Parms.Temp_int_Array_Index_Variable = Temp_int_Array_Index_Variable;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsBool = CallFunc_NPC_GetScalableFloatHotfixValue_AsBool;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded = CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded;
	Parms.CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat = CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_IsValidClass_ReturnValue = CallFunc_IsValidClass_ReturnValue;
	Parms.CallFunc_GetTotalGameplayEffectCount_FinalEffectCount = CallFunc_GetTotalGameplayEffectCount_FinalEffectCount;
	Parms.Temp_int_Loop_Counter_Variable = Temp_int_Loop_Counter_Variable;
	Parms.CallFunc_Array_Get_Item = std::move(CallFunc_Array_Get_Item);
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Less_IntInt_ReturnValue = CallFunc_Less_IntInt_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_Add_IntInt_ReturnValue = CallFunc_Add_IntInt_ReturnValue;
	Parms.CallFunc_MakeLiteralInt_ReturnValue = CallFunc_MakeLiteralInt_ReturnValue;
	Parms.CallFunc_Subtract_IntInt_ReturnValue = CallFunc_Subtract_IntInt_ReturnValue;
	Parms.CallFunc_GreaterEqual_IntInt_ReturnValue = CallFunc_GreaterEqual_IntInt_ReturnValue;
	Parms.CallFunc_LessEqual_IntInt_ReturnValue = CallFunc_LessEqual_IntInt_ReturnValue;
	Parms.CallFunc_EqualEqual_IntInt_ReturnValue = CallFunc_EqualEqual_IntInt_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	if (TargetSlotCount != nullptr)
		*TargetSlotCount = std::move(Parms.TargetSlotCount);

	if (TargetSlotMax != nullptr)
		*TargetSlotMax = std::move(Parms.TargetSlotMax);

	if (NPC_TargetSlotsRequired != nullptr)
		*NPC_TargetSlotsRequired = std::move(Parms.NPC_TargetSlotsRequired);

	if (TargetSlotsMaxOrMore != nullptr)
		*TargetSlotsMaxOrMore = std::move(Parms.TargetSlotsMaxOrMore);

	if (TargetSlotCountIsExactlyMax != nullptr)
		*TargetSlotCountIsExactlyMax = std::move(Parms.TargetSlotCountIsExactlyMax);

	if (NPC_HasSpaceToSlotOnTarget != nullptr)
		*NPC_HasSpaceToSlotOnTarget = std::move(Parms.NPC_HasSpaceToSlotOnTarget);

	if (TargetSlotTypeOut != nullptr)
		*TargetSlotTypeOut = std::move(Parms.TargetSlotTypeOut);

	if (TargetSlotCountingGE != nullptr)
		*TargetSlotCountingGE = std::move(Parms.TargetSlotCountingGE);

	if (AI_TargetSlotSizeHF != nullptr)
		*AI_TargetSlotSizeHF = Parms.AI_TargetSlotSizeHF;

	if (AI_TargetSlotDurationHF != nullptr)
		*AI_TargetSlotDurationHF = Parms.AI_TargetSlotDurationHF;

	if (TargetSlotOverrideGE != nullptr)
		*TargetSlotOverrideGE = std::move(Parms.TargetSlotOverrideGE);

	if (TargetSlotOwnerGE != nullptr)
		*TargetSlotOwnerGE = std::move(Parms.TargetSlotOwnerGE);

	if (TargetSlotCountingMaxedGE != nullptr)
		*TargetSlotCountingMaxedGE = std::move(Parms.TargetSlotCountingMaxedGE);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC TargetSlotIsUsingOverride
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// Enum_NPC_TargetSlots                    TargetSlotType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           TargetWeWantToSlotOnto                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Override                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UClass*                           NPC_TargetSlotOverrideGE                               (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_NPC_TargetSlotInfo_TargetSlotCount            (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_NPC_TargetSlotInfo_TargetSlotMax              (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_NPC_TargetSlotInfo_NPC_TargetSlotsRequired    (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NPC_TargetSlotInfo_TargetSlotsMaxOrMore       (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_TargetSlotInfo_TargetSlotCountIsExactlyMax(ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_NPC_TargetSlotInfo_NPC_HasSpaceToSlotOnTarget (ZeroConstructor, IsPlainOldData, NoDestructor)
// Enum_NPC_TargetSlots                    CallFunc_NPC_TargetSlotInfo_TargetSlotTypeOut          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CallFunc_NPC_TargetSlotInfo_TargetSlotCountingGE       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FScalableFloat                   CallFunc_NPC_TargetSlotInfo_AI_TargetSlotSizeHF        ()
// struct FScalableFloat                   CallFunc_NPC_TargetSlotInfo_AI_TargetSlotDurationHF    ()
// class UClass*                           CallFunc_NPC_TargetSlotInfo_TargetSlotOverrideGE       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CallFunc_NPC_TargetSlotInfo_TargetSlotOwnerGE          (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           CallFunc_NPC_TargetSlotInfo_TargetSlotCountingMaxedGE  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValidClass_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAbilitySystemComponent*          CallFunc_GetAbilitySystemComponent_ReturnValue         (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class UClass*>                   K2Node_MakeArray_Array                                 (ReferenceParm, HasGetValueTypeHash)
// int32                                   CallFunc_GetTotalGameplayEffectCount_FinalEffectCount  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_NotEqual_IntInt_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_TargetSlotIsUsingOverride(Enum_NPC_TargetSlots TargetSlotType, class AActor* TargetWeWantToSlotOnto, bool* Override, class UClass* NPC_TargetSlotOverrideGE, int32 CallFunc_NPC_TargetSlotInfo_TargetSlotCount, int32 CallFunc_NPC_TargetSlotInfo_TargetSlotMax, int32 CallFunc_NPC_TargetSlotInfo_NPC_TargetSlotsRequired, bool CallFunc_NPC_TargetSlotInfo_TargetSlotsMaxOrMore, bool CallFunc_NPC_TargetSlotInfo_TargetSlotCountIsExactlyMax, bool CallFunc_NPC_TargetSlotInfo_NPC_HasSpaceToSlotOnTarget, Enum_NPC_TargetSlots CallFunc_NPC_TargetSlotInfo_TargetSlotTypeOut, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotCountingGE, const struct FScalableFloat& CallFunc_NPC_TargetSlotInfo_AI_TargetSlotSizeHF, const struct FScalableFloat& CallFunc_NPC_TargetSlotInfo_AI_TargetSlotDurationHF, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotOverrideGE, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotOwnerGE, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotCountingMaxedGE, bool CallFunc_IsValidClass_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UClass*>& K2Node_MakeArray_Array, int32 CallFunc_GetTotalGameplayEffectCount_FinalEffectCount, bool CallFunc_NotEqual_IntInt_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC TargetSlotIsUsingOverride");

	Params::NPC_Pawn_Parent_C_NPC_TargetSlotIsUsingOverride Parms{};

	Parms.TargetSlotType = TargetSlotType;
	Parms.TargetWeWantToSlotOnto = TargetWeWantToSlotOnto;
	Parms.NPC_TargetSlotOverrideGE = NPC_TargetSlotOverrideGE;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotCount = CallFunc_NPC_TargetSlotInfo_TargetSlotCount;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotMax = CallFunc_NPC_TargetSlotInfo_TargetSlotMax;
	Parms.CallFunc_NPC_TargetSlotInfo_NPC_TargetSlotsRequired = CallFunc_NPC_TargetSlotInfo_NPC_TargetSlotsRequired;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotsMaxOrMore = CallFunc_NPC_TargetSlotInfo_TargetSlotsMaxOrMore;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotCountIsExactlyMax = CallFunc_NPC_TargetSlotInfo_TargetSlotCountIsExactlyMax;
	Parms.CallFunc_NPC_TargetSlotInfo_NPC_HasSpaceToSlotOnTarget = CallFunc_NPC_TargetSlotInfo_NPC_HasSpaceToSlotOnTarget;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotTypeOut = CallFunc_NPC_TargetSlotInfo_TargetSlotTypeOut;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotCountingGE = CallFunc_NPC_TargetSlotInfo_TargetSlotCountingGE;
	Parms.CallFunc_NPC_TargetSlotInfo_AI_TargetSlotSizeHF = std::move(CallFunc_NPC_TargetSlotInfo_AI_TargetSlotSizeHF);
	Parms.CallFunc_NPC_TargetSlotInfo_AI_TargetSlotDurationHF = std::move(CallFunc_NPC_TargetSlotInfo_AI_TargetSlotDurationHF);
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotOverrideGE = CallFunc_NPC_TargetSlotInfo_TargetSlotOverrideGE;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotOwnerGE = CallFunc_NPC_TargetSlotInfo_TargetSlotOwnerGE;
	Parms.CallFunc_NPC_TargetSlotInfo_TargetSlotCountingMaxedGE = CallFunc_NPC_TargetSlotInfo_TargetSlotCountingMaxedGE;
	Parms.CallFunc_IsValidClass_ReturnValue = CallFunc_IsValidClass_ReturnValue;
	Parms.CallFunc_GetAbilitySystemComponent_ReturnValue = CallFunc_GetAbilitySystemComponent_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_GetTotalGameplayEffectCount_FinalEffectCount = CallFunc_GetTotalGameplayEffectCount_FinalEffectCount;
	Parms.CallFunc_NotEqual_IntInt_ReturnValue = CallFunc_NotEqual_IntInt_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	if (Override != nullptr)
		*Override = std::move(Parms.Override);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC DamageAttemptDisableIntroPhaseBehavior
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            DamageTags                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    CallFunc_HasAuthority_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_DoesContainerMatchTagQuery_ReturnValue        (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsTagQueryEmpty_ReturnValue                   (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_Not_PreBool_ReturnValue                       (ZeroConstructor, IsPlainOldData, NoDestructor)

void ANPC_Pawn_Parent_C::NPC_DamageAttemptDisableIntroPhaseBehavior(const struct FGameplayTagContainer& DamageTags, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_DoesContainerMatchTagQuery_ReturnValue, bool CallFunc_IsTagQueryEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC DamageAttemptDisableIntroPhaseBehavior");

	Params::NPC_Pawn_Parent_C_NPC_DamageAttemptDisableIntroPhaseBehavior Parms{};

	Parms.DamageTags = std::move(DamageTags);
	Parms.CallFunc_HasAuthority_ReturnValue = CallFunc_HasAuthority_ReturnValue;
	Parms.CallFunc_DoesContainerMatchTagQuery_ReturnValue = CallFunc_DoesContainerMatchTagQuery_ReturnValue;
	Parms.CallFunc_IsTagQueryEmpty_ReturnValue = CallFunc_IsTagQueryEmpty_ReturnValue;
	Parms.CallFunc_Not_PreBool_ReturnValue = CallFunc_Not_PreBool_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NPC_Pawn_Parent.NPC_Pawn_Parent_C.NPC DisableIntroPhaseBehavior
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValidClass_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FActiveGameplayEffectHandle      CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue    (NoDestructor, HasGetValueTypeHash)
// int32                                   CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ANPC_Pawn_Parent_C::NPC_DisableIntroPhaseBehavior(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NPC_Pawn_Parent_C", "NPC DisableIntroPhaseBehavior");

	Params::NPC_Pawn_Parent_C_NPC_DisableIntroPhaseBehavior Parms{};

	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_IsValidClass_ReturnValue = CallFunc_IsValidClass_ReturnValue;
	Parms.CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue = std::move(CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue);
	Parms.CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue = CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);
}

}

