#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerBannedModal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "FortniteGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerBannedModal.PlayerBannedModal_C
// 0x00F8 (0x0588 - 0x0490)
class UPlayerBannedModal_C final  : public UFortPlayerBanned
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0490(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             BanMessage;                                        // 0x0498(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      CloseButton;                                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Disclaimer;                                        // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Severe;                                      // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ULightbox_C*                            Lightbox;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TimeRemaining;                                     // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Title;                                             // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_1;                                       // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_2;                                       // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Triangles_3;                                       // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_SeverityImage;                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          AckSucceeded;                                      // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7849[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   BanInformation;                                    // 0x04F8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	FMulticastInlineDelegateProperty_             OnCloseSucceeded;                                  // 0x0510(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         TryCount;                                          // 0x0520(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsWarning;                                        // 0x0524(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_784A[0x3];                                     // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMcpBanInfo                            McpBanInfo;                                        // 0x0528(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   BanType;                                           // 0x0568(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsCompetitiveBan;                                 // 0x0580(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsTeamingWithCheaterBan;                          // 0x0581(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void HandleCloseAttempted(int32 Temp_int_Variable, class UFortMcpContext* CallFunc_GetContext_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, TDelegate<void(bool bSuccess)> K2Node_CreateDelegate_OutputDelegate);
	void RemoveModal();
	class FText BanEnumToText(EPlayerBanReasons Param_Index, const class FString& ExploitProgramName, EPlayerCompetitiveBanReasons Competitive_Ban_Reason, bool Param_bIsCompetitiveBan, EPlayerCompetitiveBanReasons Temp_byte_Variable, int32 CallFunc_Len_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, class FText Temp_text_Variable, bool CallFunc_BooleanAND_ReturnValue, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, class FText Temp_text_Variable_8, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, bool Temp_bool_Variable, class FText K2Node_Select_Default, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, EPlayerBanReasons Temp_byte_Variable_1, class FText Temp_text_Variable_15, class FText Temp_text_Variable_16, class FText Temp_text_Variable_17, class FText Temp_text_Variable_18, class FText Temp_text_Variable_19, class FText Temp_text_Variable_20, class FText Temp_text_Variable_21, class FText Temp_text_Variable_22, class FText CallFunc_MakeLiteralText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, class FText K2Node_Select_Default_1, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, bool Temp_bool_Variable_1, class FText CallFunc_Format_ReturnValue, class FText CallFunc_MakeLiteralText_ReturnValue_1, bool Temp_bool_Variable_2, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText K2Node_Select_Default_2, class FText CallFunc_Format_ReturnValue_1, class FText K2Node_Select_Default_3, class FText K2Node_Select_Default_4);
	void OnBanAck(bool Success);
	void UpdateTimeRemaining(class FText Time, bool Temp_bool_Variable, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, bool CallFunc_TextIsEmpty_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, ESlateVisibility K2Node_Select_Default);
	void DisableButton(bool Param_DisableButton, bool CallFunc_Not_PreBool_ReturnValue);
	void UpdateText(class FText Param_Title, class FText Content);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_16_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BP_OnActivated();
	void ExecuteUbergraph_PlayerBannedModal(int32 EntryPoint, class FText Temp_text_Variable, bool Temp_bool_Variable, class FText Temp_text_Variable_1, class FText Temp_text_Variable_2, class UFortMcpContext* CallFunc_GetContext_ReturnValue, class UFortMcpContext* CallFunc_GetContext_ReturnValue_1, class UFortMcpContext* CallFunc_GetContext_ReturnValue_2, struct FMcpBanInfo& CallFunc_GetBanInfo_ReturnValue, class UFortMcpContext* CallFunc_GetContext_ReturnValue_3, bool Temp_bool_Variable_1, class FText Temp_text_Variable_3, class FText Temp_text_Variable_4, EPlayerBanReasons Temp_byte_Variable, bool Temp_bool_Variable_2, EPlayerBanReasons Temp_byte_Variable_1, bool Temp_bool_Variable_3, bool Temp_bool_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, int32 Temp_int_Array_Index_Variable, class FText Temp_text_Variable_7, class UCommonButton* K2Node_ComponentBoundEvent_Button, bool Temp_bool_Variable_5, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, TDelegate<void(bool bSuccess)> K2Node_CreateDelegate_OutputDelegate, class FText K2Node_Select_Default, class FText K2Node_Select_Default_1, const struct FTimespan& CallFunc_GetBanDuration_ReturnValue, class FText K2Node_Select_Default_2, float CallFunc_GetTotalSeconds_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, const struct FTimespan& CallFunc_GetBanDuration_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_1, class FText CallFunc_GetTimespanAsText_ReturnValue, int32 CallFunc_Len_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, EPlayerBanReasons CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Array_Contains_ReturnValue, bool CallFunc_Array_Contains_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class FText K2Node_Select_Default_3, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_2, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, class FText CallFunc_Format_ReturnValue, class FText K2Node_Select_Default_4, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_3, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_1, class FText CallFunc_BanEnumToText_ReturnValue, class FText CallFunc_Format_ReturnValue_1, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_4, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_2, class FText CallFunc_MakeLiteralText_ReturnValue, class FText CallFunc_Format_ReturnValue_2, class FText CallFunc_MakeLiteralText_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, class FText CallFunc_MakeLiteralText_ReturnValue_2, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class FText CallFunc_MakeLiteralText_ReturnValue_3, class FText CallFunc_MakeLiteralText_ReturnValue_4, class FText K2Node_Select_Default_5, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData_5, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array_3, class FText CallFunc_Format_ReturnValue_3);
	void OnCloseSucceeded__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerBannedModal_C">();
	}
	static class UPlayerBannedModal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerBannedModal_C>();
	}
};
static_assert(alignof(UPlayerBannedModal_C) == 0x000008, "Wrong alinment on UPlayerBannedModal_C");
static_assert(sizeof(UPlayerBannedModal_C) == 0x000588, "Wrong size on UPlayerBannedModal_C");
static_assert(offsetof(UPlayerBannedModal_C, UberGraphFrame) == 0x000490, "Member 'UPlayerBannedModal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanMessage) == 0x000498, "Member 'UPlayerBannedModal_C::BanMessage' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, CloseButton) == 0x0004A0, "Member 'UPlayerBannedModal_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Disclaimer) == 0x0004A8, "Member 'UPlayerBannedModal_C::Disclaimer' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Image_Severe) == 0x0004B0, "Member 'UPlayerBannedModal_C::Image_Severe' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Lightbox) == 0x0004B8, "Member 'UPlayerBannedModal_C::Lightbox' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, TimeRemaining) == 0x0004C0, "Member 'UPlayerBannedModal_C::TimeRemaining' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Title) == 0x0004C8, "Member 'UPlayerBannedModal_C::Title' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_1) == 0x0004D0, "Member 'UPlayerBannedModal_C::Triangles_1' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_2) == 0x0004D8, "Member 'UPlayerBannedModal_C::Triangles_2' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, Triangles_3) == 0x0004E0, "Member 'UPlayerBannedModal_C::Triangles_3' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, WidgetSwitcher_SeverityImage) == 0x0004E8, "Member 'UPlayerBannedModal_C::WidgetSwitcher_SeverityImage' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, AckSucceeded) == 0x0004F0, "Member 'UPlayerBannedModal_C::AckSucceeded' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanInformation) == 0x0004F8, "Member 'UPlayerBannedModal_C::BanInformation' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, OnCloseSucceeded) == 0x000510, "Member 'UPlayerBannedModal_C::OnCloseSucceeded' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, TryCount) == 0x000520, "Member 'UPlayerBannedModal_C::TryCount' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsWarning) == 0x000524, "Member 'UPlayerBannedModal_C::bIsWarning' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, McpBanInfo) == 0x000528, "Member 'UPlayerBannedModal_C::McpBanInfo' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, BanType) == 0x000568, "Member 'UPlayerBannedModal_C::BanType' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsCompetitiveBan) == 0x000580, "Member 'UPlayerBannedModal_C::bIsCompetitiveBan' has a wrong offset!");
static_assert(offsetof(UPlayerBannedModal_C, bIsTeamingWithCheaterBan) == 0x000581, "Member 'UPlayerBannedModal_C::bIsTeamingWithCheaterBan' has a wrong offset!");

}

