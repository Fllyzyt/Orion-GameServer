#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HeldObject_Generic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_HeldObject_Generic.B_HeldObject_Generic_C
// 0x0010 (0x0D38 - 0x0D28)
class AB_HeldObject_Generic_C final  : public AFortWeapon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0D28(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_HeldObject_Generic(int32 EntryPoint, class APawn* CallFunc_GetInstigator_ReturnValue, TArray<class AActor*>& CallFunc_GetAttachedActors_OutActors, TArray<class AActor*>& CallFunc_FilterArray_FilteredArray, class AActor* CallFunc_Array_Get_Item, class AB_HeldObject_Parent_C* K2Node_DynamicCast_AsB_Held_Object_Parent, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetComponentScale_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_HeldObject_Generic_C">();
	}
	static class AB_HeldObject_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_HeldObject_Generic_C>();
	}
};
static_assert(alignof(AB_HeldObject_Generic_C) == 0x000008, "Wrong alinment on AB_HeldObject_Generic_C");
static_assert(sizeof(AB_HeldObject_Generic_C) == 0x000D38, "Wrong size on AB_HeldObject_Generic_C");
static_assert(offsetof(AB_HeldObject_Generic_C, UberGraphFrame) == 0x000D28, "Member 'AB_HeldObject_Generic_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Generic_C, StaticMesh) == 0x000D30, "Member 'AB_HeldObject_Generic_C::StaticMesh' has a wrong offset!");

}

