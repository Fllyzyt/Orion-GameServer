#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_SurfaceChange

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_SurfaceChange.GAB_SurfaceChange_C
// 0x0258 (0x0D10 - 0x0AB8)
class UGAB_SurfaceChange_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          Debug;                                             // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CC7[0x7];                                     // 0x0AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         RemovalDelay;                                      // 0x0AC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         IcySurfacesEnabled;                                // 0x0AF0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  HasIce;                                            // 0x0B18(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_SurfaceChange_Ice;                              // 0x0B38(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SurfaceChange_Snow;                             // 0x0B40(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_SurfaceChange_Lava;                             // 0x0B48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  PlayerPawn;                                        // 0x0B50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  IceTags;                                           // 0x0B58(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  LavaTags;                                          // 0x0B78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  SnowTags;                                          // 0x0B98(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  SandTags;                                          // 0x0BB8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         LavaBounceMultiplier;                              // 0x0BD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomAngleOffset;                                 // 0x0BDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         RandomConeAngle;                                   // 0x0BE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         FacingAngleVelocityComponent;                      // 0x0C08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BaseVerticalBounceVelocity;                        // 0x0C30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BaseLateralBounceVelocity;                         // 0x0C58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxBounceMultiplier;                               // 0x0C80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         BounceMultiplierStepAmount;                        // 0x0CA8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRandomStream                          RandomAngleStream;                                 // 0x0CD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor)
	struct FGameplayTag                           LavaBounceCue;                                     // 0x0CD8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         SandBurrowingEnabled;                              // 0x0CE0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventTag_SandUnburrow;                             // 0x0D08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_SurfaceChange(int32 EntryPoint, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, struct FGameplayEventData& K2Node_Event_EventData, bool GameplayTagsK2Node_SwitchGameplayTagContainer_CmpSuccess, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1, TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate, class ACharacter* K2Node_CustomEvent_Character, EMovementMode K2Node_CustomEvent_PrevMovementMode, uint8 K2Node_CustomEvent_PreviousCustomMode, bool CallFunc_IsValid_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_2);
	void MovementModeChanged(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void K2_ActivateAbilityFromEvent(struct FGameplayEventData& EventData);
	void SurfaceCleanupSpecial();
	void HotfixableGEApplication(struct FScalableFloat& Input, class UClass* GameplayEffectAppliedOnTrue, class UClass* GameplayEffectAppliedOnFalse, float CallFunc_GetValueAtLevel_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1);
	void LavaBounce(const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_NormalizeAxis_ReturnValue, int32 CallFunc_FFloor_ReturnValue, int32 CallFunc_FFloor_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_1, int32 CallFunc_FFloor_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, float CallFunc_RandomFloatFromStream_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue_3, float CallFunc_GetValueAtLevel_ReturnValue_4, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_5, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_6, float CallFunc_Subtract_FloatFloat_ReturnValue_2, const struct FRotator& CallFunc_MakeRotator_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue_1, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_GreaterGreater_VectorRotator_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue, float CallFunc_FMin_ReturnValue, const struct FVector2D& CallFunc_Normal2D_ReturnValue, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, const struct FVector2D& CallFunc_Conv_VectorToVector2D_ReturnValue_1, const struct FVector2D& CallFunc_Normal2D_ReturnValue_1, const struct FVector2D& CallFunc_Multiply_Vector2DFloat_ReturnValue_1, const struct FVector2D& CallFunc_Add_Vector2DVector2D_ReturnValue, const struct FVector& CallFunc_Conv_Vector2DToVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector_NetQuantizeNormal& K2Node_MakeStruct_Vector_NetQuantizeNormal, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue);
	void SurfaceCleanup(bool AddLingeringEffects, EPhysicalSurface SurfaceType, bool bHasSand, bool bHasSnow, bool bAddLingeringEffects, bool bHasLava, bool bHasIce, bool CallFunc_NotEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_NotEqual_ByteByte_ReturnValue_1, bool CallFunc_NotEqual_ByteByte_ReturnValue_2, bool CallFunc_NotEqual_ByteByte_ReturnValue_3, bool CallFunc_BooleanAND_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue_3, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_1, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_2, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue_2, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput_3, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue_3);
	void OnRep_ReplicatedRandomAngle(const class FString& CallFunc_Conv_FloatToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_SurfaceChange_C">();
	}
	static class UGAB_SurfaceChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_SurfaceChange_C>();
	}
};
static_assert(alignof(UGAB_SurfaceChange_C) == 0x000008, "Wrong alinment on UGAB_SurfaceChange_C");
static_assert(sizeof(UGAB_SurfaceChange_C) == 0x000D10, "Wrong size on UGAB_SurfaceChange_C");
static_assert(offsetof(UGAB_SurfaceChange_C, UberGraphFrame) == 0x000AB8, "Member 'UGAB_SurfaceChange_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, Debug) == 0x000AC0, "Member 'UGAB_SurfaceChange_C::Debug' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, RemovalDelay) == 0x000AC8, "Member 'UGAB_SurfaceChange_C::RemovalDelay' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, IcySurfacesEnabled) == 0x000AF0, "Member 'UGAB_SurfaceChange_C::IcySurfacesEnabled' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, HasIce) == 0x000B18, "Member 'UGAB_SurfaceChange_C::HasIce' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, GE_SurfaceChange_Ice) == 0x000B38, "Member 'UGAB_SurfaceChange_C::GE_SurfaceChange_Ice' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, GE_SurfaceChange_Snow) == 0x000B40, "Member 'UGAB_SurfaceChange_C::GE_SurfaceChange_Snow' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, GE_SurfaceChange_Lava) == 0x000B48, "Member 'UGAB_SurfaceChange_C::GE_SurfaceChange_Lava' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, PlayerPawn) == 0x000B50, "Member 'UGAB_SurfaceChange_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, IceTags) == 0x000B58, "Member 'UGAB_SurfaceChange_C::IceTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, LavaTags) == 0x000B78, "Member 'UGAB_SurfaceChange_C::LavaTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, SnowTags) == 0x000B98, "Member 'UGAB_SurfaceChange_C::SnowTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, SandTags) == 0x000BB8, "Member 'UGAB_SurfaceChange_C::SandTags' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, LavaBounceMultiplier) == 0x000BD8, "Member 'UGAB_SurfaceChange_C::LavaBounceMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, RandomAngleOffset) == 0x000BDC, "Member 'UGAB_SurfaceChange_C::RandomAngleOffset' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, RandomConeAngle) == 0x000BE0, "Member 'UGAB_SurfaceChange_C::RandomConeAngle' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, FacingAngleVelocityComponent) == 0x000C08, "Member 'UGAB_SurfaceChange_C::FacingAngleVelocityComponent' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, BaseVerticalBounceVelocity) == 0x000C30, "Member 'UGAB_SurfaceChange_C::BaseVerticalBounceVelocity' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, BaseLateralBounceVelocity) == 0x000C58, "Member 'UGAB_SurfaceChange_C::BaseLateralBounceVelocity' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, MaxBounceMultiplier) == 0x000C80, "Member 'UGAB_SurfaceChange_C::MaxBounceMultiplier' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, BounceMultiplierStepAmount) == 0x000CA8, "Member 'UGAB_SurfaceChange_C::BounceMultiplierStepAmount' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, RandomAngleStream) == 0x000CD0, "Member 'UGAB_SurfaceChange_C::RandomAngleStream' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, LavaBounceCue) == 0x000CD8, "Member 'UGAB_SurfaceChange_C::LavaBounceCue' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, SandBurrowingEnabled) == 0x000CE0, "Member 'UGAB_SurfaceChange_C::SandBurrowingEnabled' has a wrong offset!");
static_assert(offsetof(UGAB_SurfaceChange_C, EventTag_SandUnburrow) == 0x000D08, "Member 'UGAB_SurfaceChange_C::EventTag_SandUnburrow' has a wrong offset!");

}

