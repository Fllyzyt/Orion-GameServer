#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_FlintLock_Pistol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK::Params
{

// Function AnimBP_FlintLock_Pistol.AnimBP_FlintLock_Pistol_C.ExecuteUbergraph_AnimBP_FlintLock_Pistol
// 0x0030 (0x0030 - 0x0000)
struct AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol final 
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D07[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Pistol_Flintlock_Athena_C*           K2Node_DynamicCast_AsB_Pistol_Flintlock_Athena;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D08[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawnAthena*                  K2Node_DynamicCast_AsFort_Player_Pawn_Athena;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFortCustomGender                             CallFunc_GetCharacterGender_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol) == 0x000008, "Wrong alinment on AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol");
static_assert(sizeof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol) == 0x000030, "Wrong size on AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, EntryPoint) == 0x000000, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::EntryPoint' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, K2Node_DynamicCast_AsB_Pistol_Flintlock_Athena) == 0x000010, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::K2Node_DynamicCast_AsB_Pistol_Flintlock_Athena' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, K2Node_Event_DeltaTimeX) == 0x00001C, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, K2Node_DynamicCast_AsFort_Player_Pawn_Athena) == 0x000020, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::K2Node_DynamicCast_AsFort_Player_Pawn_Athena' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol, CallFunc_GetCharacterGender_ReturnValue) == 0x000029, "Member 'AnimBP_FlintLock_Pistol_C_ExecuteUbergraph_AnimBP_FlintLock_Pistol::CallFunc_GetCharacterGender_ReturnValue' has a wrong offset!");

// Function AnimBP_FlintLock_Pistol.AnimBP_FlintLock_Pistol_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation final 
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alinment on AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation");
static_assert(sizeof(AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'AnimBP_FlintLock_Pistol_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function AnimBP_FlintLock_Pistol.AnimBP_FlintLock_Pistol_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct AnimBP_FlintLock_Pistol_C_AnimGraph final 
{
public:
	struct FPoseLink                              Param_AnimGraph;                                   // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(AnimBP_FlintLock_Pistol_C_AnimGraph) == 0x000008, "Wrong alinment on AnimBP_FlintLock_Pistol_C_AnimGraph");
static_assert(sizeof(AnimBP_FlintLock_Pistol_C_AnimGraph) == 0x000010, "Wrong size on AnimBP_FlintLock_Pistol_C_AnimGraph");
static_assert(offsetof(AnimBP_FlintLock_Pistol_C_AnimGraph, Param_AnimGraph) == 0x000000, "Member 'AnimBP_FlintLock_Pistol_C_AnimGraph::Param_AnimGraph' has a wrong offset!");

}

