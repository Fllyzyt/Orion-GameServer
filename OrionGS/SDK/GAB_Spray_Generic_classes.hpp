#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_Spray_Generic

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GAB_Emote_Generic_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_Spray_Generic.GAB_Spray_Generic_C
// 0x0070 (0x0B88 - 0x0B18)
class UGAB_Spray_Generic_C final  : public UGAB_Emote_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GAB_Spray_Generic_C;                // 0x0B18(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         DecalSize;                                         // 0x0B20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557D[0x4];                                     // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAthenaSprayItemDefinition*             MySpray;                                           // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalTraceDistance;                                // 0x0B30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_557E[0x4];                                     // 0x0B34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            DefaultSprayMontage_M;                             // 0x0B38(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            DefaultSprayMontage_F;                             // 0x0B60(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_Spray_Generic(int32 EntryPoint, class AFortPawn* CallFunc_GetActivatingPawn_ReturnValue, class AFortPawn* CallFunc_GetActivatingPawn_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetRightVector_ReturnValue, bool CallFunc_TargetLineTrace_HitSomething, const struct FVector& CallFunc_TargetLineTrace_Location, const struct FVector& CallFunc_TargetLineTrace_Normal, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, class AController* CallFunc_GetController_ReturnValue, const struct FRotator& CallFunc_MakeRotationFromAxes_ReturnValue, class AFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_HasPermissionToEditWorld_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, bool CallFunc_CanPlaceInstanceOfClass_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class ABP_SprayDecal_C* CallFunc_FinishSpawningActor_ReturnValue, bool CallFunc_IsServer_ReturnValue, class UObject* CallFunc_GetCurrentSourceObject_ReturnValue, class UAthenaSprayItemDefinition* K2Node_DynamicCast_AsAthena_Spray_Item_Definition, bool K2Node_DynamicCast_bSuccess_1);
	void OnMontageStartedPlaying();
	void TargetLineTrace(class AFortPawn* ActivatingPawn, bool* HitSomething, struct FVector* Location, struct FVector* Normal, const struct FRotator& CallFunc_GetBaseAimRotation_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetForwardVector_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, class UCapsuleComponent* K2Node_DynamicCast_AsCapsule_Collision, bool K2Node_DynamicCast_bSuccess, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Add_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FHitResult& CallFunc_LineTraceSingle_OutHit, bool CallFunc_LineTraceSingle_ReturnValue, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess_1, class ABuildingGameplayActor* K2Node_DynamicCast_AsBuilding_Gameplay_Actor, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_AcceptsEmoteSprays_ReturnValue);
	TSoftObjectPtr<class UAnimMontage> GetMontageToPlay(class UFortMontageItemDefinitionBase* EmoteAsset, EFortCustomBodyType BodyType, EFortCustomGender Gender, EFortCustomGender Temp_byte_Variable, TSoftObjectPtr<class UAnimMontage> CallFunc_GetMontageToPlay_ReturnValue, bool CallFunc_IsAssetNull_ReturnValue, TSoftObjectPtr<class UAnimMontage> K2Node_Select_Default);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_Spray_Generic_C">();
	}
	static class UGAB_Spray_Generic_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_Spray_Generic_C>();
	}
};
static_assert(alignof(UGAB_Spray_Generic_C) == 0x000008, "Wrong alinment on UGAB_Spray_Generic_C");
static_assert(sizeof(UGAB_Spray_Generic_C) == 0x000B88, "Wrong size on UGAB_Spray_Generic_C");
static_assert(offsetof(UGAB_Spray_Generic_C, UberGraphFrame_GAB_Spray_Generic_C) == 0x000B18, "Member 'UGAB_Spray_Generic_C::UberGraphFrame_GAB_Spray_Generic_C' has a wrong offset!");
static_assert(offsetof(UGAB_Spray_Generic_C, DecalSize) == 0x000B20, "Member 'UGAB_Spray_Generic_C::DecalSize' has a wrong offset!");
static_assert(offsetof(UGAB_Spray_Generic_C, MySpray) == 0x000B28, "Member 'UGAB_Spray_Generic_C::MySpray' has a wrong offset!");
static_assert(offsetof(UGAB_Spray_Generic_C, DecalTraceDistance) == 0x000B30, "Member 'UGAB_Spray_Generic_C::DecalTraceDistance' has a wrong offset!");
static_assert(offsetof(UGAB_Spray_Generic_C, DefaultSprayMontage_M) == 0x000B38, "Member 'UGAB_Spray_Generic_C::DefaultSprayMontage_M' has a wrong offset!");
static_assert(offsetof(UGAB_Spray_Generic_C, DefaultSprayMontage_F) == 0x000B60, "Member 'UGAB_Spray_Generic_C::DefaultSprayMontage_F' has a wrong offset!");

}

