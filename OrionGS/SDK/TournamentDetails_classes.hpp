#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TournamentDetails

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteUI_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass TournamentDetails.TournamentDetails_C
// 0x0200 (0x08D0 - 0x06D0)
class UTournamentDetails_C final  : public UFortTournamentDetailsPage
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x06D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HidePosterFade;                                    // 0x06D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       CollapseLeaderboardSummary;                        // 0x06E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FullScreenContent;                                 // 0x06E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Intro;                                             // 0x06F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurPoster;                                        // 0x06F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BlurBG;                                            // 0x0700(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowEventWindowDetails;                            // 0x0708(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowDetails;                                       // 0x0710(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PosterFlip;                                        // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_Background;                         // 0x0720(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        BackgroundBlur_PosterLayer;                        // 0x0728(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  Button_Back;                                       // 0x0730(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UIconTextButton_C*                      Button_EnableMFA;                                  // 0x0738(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCloseButton_C*                         CloseButton;                                       // 0x0740(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_BGText;                               // 0x0748(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_ScoringBG;                            // 0x0750(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonBorder*                          CommonBorder_ScoringTitleBG;                       // 0x0758(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_TournamentDescription;             // 0x0760(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_TournamentSubtitle;                // 0x0768(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_UnlockCriteria;                    // 0x0770(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_DetailsButtons;               // 0x0778(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_FullScreenSwitch;             // 0x0780(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  CommonWidgetSwitcher_WindowsDetails;               // 0x0788(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  DetailsPanelButton;                                // 0x0790(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  DetailsSwitcher;                                   // 0x0798(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardScreen_C*              EventLeaderboardScreen;                            // 0x07A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventLeaderboardSummary_C*             EventLeaderboardSummary;                           // 0x07A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             EventsScrollBox;                                   // 0x07B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PosterFade;                                  // 0x07B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       MFA_WarningText;                                   // 0x07C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           MFAContainer;                                      // 0x07C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OverviewPanel;                                     // 0x07D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UEventsSimpleButton_C*                  OverviewPanelButton;                               // 0x07D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_BGText;                                // 0x07E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_TimeCallout;                           // 0x07E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URichTextBlock*                         RichTextBlock_TournamentTimeCallout1;              // 0x07F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_DetailAndRules;                          // 0x07F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile;                                 // 0x0800(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_0;                               // 0x0808(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_1;                               // 0x0810(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownEventTile_C*                   ShowdownEventTile_2;                               // 0x0818(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentDetailsScoringRule_C* ShowdownTournamentDetailsScoringRule;              // 0x0820(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentDetailsScoringRule_C* ShowdownTournamentDetailsScoringRule_C_3;          // 0x0828(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Text_PinUnlockScore;                               // 0x0830(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentEventWindowDetails_C*        TournamentEventWindowDetails;                      // 0x0838(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentMatchType;                               // 0x0840(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentPayoutModal_C*               TournamentPayoutModal;                             // 0x0848(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentPosterBack_C*        TournamentPosterBack;                              // 0x0850(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UShowdownTournamentPosterFront_C*       TournamentPosterFront;                             // 0x0858(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentRoundText;                               // 0x0860(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       TournamentSubTitleBackground;                      // 0x0868(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTournamentLiveGames_C*                 TournamentWatchList;                               // 0x0870(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanel_TournamentScoringRules;           // 0x0878(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         UnlockPinContent;                                  // 0x0880(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          EventWindowDetailsShown;                           // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TournamentDetailsShown;                            // 0x0889(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C08[0x6];                                     // 0x088A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             BackActionSelected;                                // 0x0890(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWidget*                                FirstActiveEvent;                                  // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                LastFocusedEvent;                                  // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCenteringScrollBox;                              // 0x08B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          LeaderboardisCollapsed;                            // 0x08B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C09[0x6];                                     // 0x08B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DefaultTournamentIdForScoringRules;                // 0x08B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class ULeaderboardListViewWrapper_C*          LeaderboardListViewWrapper;                        // 0x08C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BackActionSelected__DelegateSignature();
	void ExecuteUbergraph_TournamentDetails(int32 EntryPoint, bool Temp_bool_Variable, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue, float Temp_float_Variable, class UCommonButton* K2Node_CustomEvent_Button, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_1, bool K2Node_DynamicCast_bSuccess_1, bool K2Node_CustomEvent_In_1, class UWidgetAnimation* K2Node_CustomEvent_Animation, float K2Node_CustomEvent_PlaySpeed, float CallFunc_PauseAnimation_ReturnValue, float CallFunc_GetStartTime_ReturnValue, float CallFunc_PauseAnimation_ReturnValue_1, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetEndTime_ReturnValue, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, int32 Temp_int_Variable, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_GetChildrenCount_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, int32 CallFunc_GetChildrenCount_ReturnValue_1, class UWidget* CallFunc_GetChildAt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_2, bool K2Node_DynamicCast_bSuccess_2, int32 CallFunc_GetChildrenCount_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, class UWidget* K2Node_CustomEvent_SelectedWidget, int32 CallFunc_GetChildIndex_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, int32 CallFunc_GetChildrenCount_ReturnValue_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, class UWidget* K2Node_CustomEvent_Widget, class UCommonButton* K2Node_DynamicCast_AsCommon_Button, bool K2Node_DynamicCast_bSuccess_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_5, const struct FGeometry& K2Node_Event_MyGeometry, float K2Node_Event_InDeltaTime, const struct FVector4& CallFunc_GetSafeZonePadding_SafePadding, const struct FVector2D& CallFunc_GetSafeZonePadding_SafePaddingScale, const struct FVector4& CallFunc_GetSafeZonePadding_SpillOverPadding, TDelegate<void(const class FString& EventWindowId, const class FString& EventId)> K2Node_CreateDelegate_OutputDelegate_6, ESlateVisibility Temp_byte_Variable, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue, ESlateVisibility Temp_byte_Variable_1, float CallFunc_Subtract_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue_2, float CallFunc_Subtract_FloatFloat_ReturnValue_3, float CallFunc_Subtract_FloatFloat_ReturnValue_4, const struct FMargin& K2Node_MakeStruct_Margin, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_1, bool Temp_bool_Variable_1, class UOverlaySlot* CallFunc_SlotAsOverlaySlot_ReturnValue_2, class UCommonButton* K2Node_ComponentBoundEvent_Button_4, class UCommonButton* K2Node_ComponentBoundEvent_Button_3, class UCommonButton* K2Node_ComponentBoundEvent_Button_2, const class FString& K2Node_CustomEvent_TournamentId, const class FString& K2Node_CustomEvent_EventId_1, bool K2Node_CustomEvent_In, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_7, TDelegate<void(const class FString& TournamentId, const class FString& EventId)> K2Node_CreateDelegate_OutputDelegate_8, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_9, class UWidget* CallFunc_GetActiveWidget_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class UCommonButton* K2Node_ComponentBoundEvent_Button_1, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, bool CallFunc_DoCalloutMFARequirement_ReturnValue, class UEnableMultiFactorAuthModalBP_C* CallFunc_Create_ReturnValue, ESlateVisibility K2Node_Select_Default, bool CallFunc_QueueModal_ReturnValue, const class FString& K2Node_CustomEvent_EventWindowId, const class FString& K2Node_CustomEvent_EventId, int32 Temp_int_Variable_1, bool CallFunc_IsValid_ReturnValue, class UWidget* CallFunc_GetChildAt_ReturnValue_1, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_3, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_Add_IntInt_ReturnValue_1, bool Temp_bool_Variable_2, bool CallFunc_IsValid_ReturnValue_1, float K2Node_Select_Default_1, class UUMGSequencePlayer* CallFunc_PlayAnimation_ReturnValue_2, class UCommonButton* K2Node_ComponentBoundEvent_Button, int32 Temp_int_Variable_2, class UWidget* CallFunc_GetChildAt_ReturnValue_2, bool CallFunc_NotEqual_IntInt_ReturnValue, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_4, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_GetSelected_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 Temp_int_Variable_3, int32 CallFunc_Add_IntInt_ReturnValue_3, class UWidget* CallFunc_GetChildAt_ReturnValue_3, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_5, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_LessEqual_IntInt_ReturnValue_3);
	void BndEvt__CloseButton_K2Node_ComponentBoundEvent_6_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void EventFullScreenAnimOutFinished();
	void EventBackoutLiveGames();
	void EventViewLiveGames();
	void OnActivateScreen();
	void No_payouts();
	void EventclosePayout();
	void EventViewPayout(const class FString& EventWindowId, const class FString& EventId);
	void BndEvt__Button_EnableMFA_K2Node_ComponentBoundEvent_4_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void EventCloseLeaderboard();
	void EventToggleFullScreenContent(bool In);
	void EventViewFullLeaderboard(const class FString& TournamentId, const class FString& EventId);
	void BndEvt__OverviewPanelButton2_K2Node_ComponentBoundEvent_3_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__DetailsPanelButton2_K2Node_ComponentBoundEvent_2_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void BndEvt__BackButton2_K2Node_ComponentBoundEvent_1_CommonButtonClicked__DelegateSignature(class UCommonButton* Button);
	void EventStopCentering();
	void EventStartCentering();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void EventCenterEventWindow(class UWidget* Widget);
	void EventDeselectWindows(class UWidget* SelectedWidget);
	void CloseEventWindowDetails();
	void CloseTournamentDetails();
	void Construct();
	void AnimTransition(bool In, class UWidgetAnimation* Animation, float PlaySpeed);
	void EventShowWindowDetails(class UCommonButton* Button);
	void RefreshDataBP();
	void Refresh(const class FString& CallFunc_GetTournamentId_ReturnValue, const class FString& CallFunc_GetTournamentNextEvent_ReturnValue);
	void RefreshEvents(class UShowdownEventTile_C* CallFunc_Create_ReturnValue, int32 Temp_int_Loop_Counter_Variable, TDelegate<void(class UCommonButton* Button)> K2Node_CreateDelegate_OutputDelegate, int32 CallFunc_Add_IntInt_ReturnValue, const class FString& CallFunc_GetTournamentId_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UShowdownEventEmptySpacer_C* CallFunc_Create_ReturnValue_1, TArray<class FString>& CallFunc_GetTournamentEvents_ReturnValue, const class FString& CallFunc_Array_Get_Item, class UPanelSlot* CallFunc_AddChild_ReturnValue, class UPanelSlot* CallFunc_AddChild_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void RefreshScoringRules(const class FString& CallFunc_GetTournamentId_ReturnValue, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile, bool K2Node_DynamicCast_bSuccess);
	void RefreshOverviewPanel(class FText Temp_text_Variable, class FText Temp_text_Variable_1, bool Temp_bool_Variable, class FText Temp_text_Variable_2, class FText Temp_text_Variable_3, EFortShowdownMatchType Temp_byte_Variable, class FText Temp_text_Variable_4, class FText Temp_text_Variable_5, class FText Temp_text_Variable_6, class FText Temp_text_Variable_7, bool Temp_bool_Variable_1, class FText Temp_text_Variable_8, EFortShowdownEventState Temp_byte_Variable_1, class FText Temp_text_Variable_9, class FText Temp_text_Variable_10, class FText Temp_text_Variable_11, class FText Temp_text_Variable_12, class FText Temp_text_Variable_13, class FText Temp_text_Variable_14, class FText Temp_text_Variable_15, class FText Temp_text_Variable_16, class FText Temp_text_Variable_17, bool Temp_bool_Variable_2, EFortShowdownEventState CallFunc_GetTournamentTimeState_ReturnValue, EFortShowdownMatchType CallFunc_GetTournamentMatchType_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class FText K2Node_Select_Default, class FText CallFunc_TextToUpper_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue_1, class FText CallFunc_Conv_StringToText_ReturnValue_1, const struct FTimespan& CallFunc_GetTournamentTimeLeft_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue_2, class FText CallFunc_GetEventTimespanAsText_ReturnValue, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, int32 CallFunc_BreakTimespan_Days, int32 CallFunc_BreakTimespan_Hours, int32 CallFunc_BreakTimespan_Minutes, int32 CallFunc_BreakTimespan_Seconds, int32 CallFunc_BreakTimespan_Milliseconds, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, class FText K2Node_Select_Default_1, class FText K2Node_Select_Default_2, class FText K2Node_Select_Default_3, class FText K2Node_Select_Default_4, const class FString& CallFunc_GetTournamentId_ReturnValue, class FText CallFunc_Format_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue_3);
	void RefreshDetailsPanel(class UMaterialInstanceDynamic* CallFunc_GetEffectMaterial_ReturnValue, class ULeaderboardListViewWrapper_C* K2Node_DynamicCast_AsLeaderboard_List_View_Wrapper, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Array_Index_Variable, TArray<class UEventsSimpleButton_C*>& K2Node_MakeArray_Array, class UMaterialInstanceDynamic* CallFunc_GetEffectMaterial_ReturnValue_1, class UEventsSimpleButton_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicFontMaterial_ReturnValue, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, int32 Temp_int_Loop_Counter_Variable, class UMaterialInstanceDynamic* CallFunc_GetDynamicMaterial_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool Temp_bool_Variable, class FText CallFunc_Conv_IntToText_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue, ESlateVisibility K2Node_Select_Default, class FText CallFunc_Conv_StringToText_ReturnValue_1, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, const struct FLinearColor& CallFunc_MakeColor_ReturnValue, float CallFunc_RGBToHSV_H, float CallFunc_RGBToHSV_S, float CallFunc_RGBToHSV_V, float CallFunc_RGBToHSV_A, bool CallFunc_Less_FloatFloat_ReturnValue, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FSlateColor& K2Node_MakeStruct_SlateColor_1, const class FString& CallFunc_GetTournamentId_ReturnValue);
	void Handle_Back(bool* PassThrough, int32 CallFunc_GetActiveWidgetIndex_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue_2);
	void RefreshViolators(class UShowdownEventTile_C* FocusedEvent, int32 CallFunc_GetNumEventRounds_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, class FText CallFunc_GetWindowRoundDisplayString_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue, int32 CallFunc_GetEventWindowRoundNumber_ReturnValue, bool CallFunc_IsNullItem_Is_Null_Item, bool CallFunc_IsNullItem_Is_Null_Item_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, class FText CallFunc_Conv_StringToText_ReturnValue, bool CallFunc_IsValid_ReturnValue, class FText CallFunc_TextToUpper_ReturnValue_1, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile, bool K2Node_DynamicCast_bSuccess, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UWidget* CallFunc_GetChildAt_ReturnValue, int32 CallFunc_GetChildrenCount_ReturnValue, class UShowdownEventTile_C* K2Node_DynamicCast_AsShowdown_Event_Tile_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_LessEqual_IntInt_ReturnValue_1, int32 CallFunc_GetEventWindowRoundNumber_ReturnValue_1, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void OnHandleBack(bool* bResult, bool CallFunc_Handle_Back_Passthrough);
	void CreateScoringWidgets(const class FString& TournamentSeriesId, const class FString& TournamentId, TArray<struct FFortShowdownScoringRuleInfo>& CallFunc_FindTournamentScoringRules_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, const struct FFortShowdownScoringRuleInfo& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Divide_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, class UShowdownTournamentDetailsScoringRule_C* CallFunc_Create_ReturnValue, bool Temp_bool_Variable, int32 K2Node_Select_Default, class UUniformGridSlot* CallFunc_AddChildToUniformGrid_ReturnValue, int32 Temp_int_Variable, int32 Temp_int_Variable_1, bool Temp_bool_Variable_1, int32 K2Node_Select_Default_1);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"TournamentDetails_C">();
	}
	static class UTournamentDetails_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTournamentDetails_C>();
	}
};
static_assert(alignof(UTournamentDetails_C) == 0x000008, "Wrong alinment on UTournamentDetails_C");
static_assert(sizeof(UTournamentDetails_C) == 0x0008D0, "Wrong size on UTournamentDetails_C");
static_assert(offsetof(UTournamentDetails_C, UberGraphFrame) == 0x0006D0, "Member 'UTournamentDetails_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, HidePosterFade) == 0x0006D8, "Member 'UTournamentDetails_C::HidePosterFade' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CollapseLeaderboardSummary) == 0x0006E0, "Member 'UTournamentDetails_C::CollapseLeaderboardSummary' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, FullScreenContent) == 0x0006E8, "Member 'UTournamentDetails_C::FullScreenContent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Intro) == 0x0006F0, "Member 'UTournamentDetails_C::Intro' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BlurPoster) == 0x0006F8, "Member 'UTournamentDetails_C::BlurPoster' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BlurBG) == 0x000700, "Member 'UTournamentDetails_C::BlurBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowEventWindowDetails) == 0x000708, "Member 'UTournamentDetails_C::ShowEventWindowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowDetails) == 0x000710, "Member 'UTournamentDetails_C::ShowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, PosterFlip) == 0x000718, "Member 'UTournamentDetails_C::PosterFlip' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackgroundBlur_Background) == 0x000720, "Member 'UTournamentDetails_C::BackgroundBlur_Background' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackgroundBlur_PosterLayer) == 0x000728, "Member 'UTournamentDetails_C::BackgroundBlur_PosterLayer' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Button_Back) == 0x000730, "Member 'UTournamentDetails_C::Button_Back' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Button_EnableMFA) == 0x000738, "Member 'UTournamentDetails_C::Button_EnableMFA' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CloseButton) == 0x000740, "Member 'UTournamentDetails_C::CloseButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_BGText) == 0x000748, "Member 'UTournamentDetails_C::CommonBorder_BGText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_ScoringBG) == 0x000750, "Member 'UTournamentDetails_C::CommonBorder_ScoringBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonBorder_ScoringTitleBG) == 0x000758, "Member 'UTournamentDetails_C::CommonBorder_ScoringTitleBG' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_TournamentDescription) == 0x000760, "Member 'UTournamentDetails_C::CommonTextBlock_TournamentDescription' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_TournamentSubtitle) == 0x000768, "Member 'UTournamentDetails_C::CommonTextBlock_TournamentSubtitle' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonTextBlock_UnlockCriteria) == 0x000770, "Member 'UTournamentDetails_C::CommonTextBlock_UnlockCriteria' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_DetailsButtons) == 0x000778, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_DetailsButtons' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_FullScreenSwitch) == 0x000780, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_FullScreenSwitch' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, CommonWidgetSwitcher_WindowsDetails) == 0x000788, "Member 'UTournamentDetails_C::CommonWidgetSwitcher_WindowsDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DetailsPanelButton) == 0x000790, "Member 'UTournamentDetails_C::DetailsPanelButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DetailsSwitcher) == 0x000798, "Member 'UTournamentDetails_C::DetailsSwitcher' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventLeaderboardScreen) == 0x0007A0, "Member 'UTournamentDetails_C::EventLeaderboardScreen' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventLeaderboardSummary) == 0x0007A8, "Member 'UTournamentDetails_C::EventLeaderboardSummary' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventsScrollBox) == 0x0007B0, "Member 'UTournamentDetails_C::EventsScrollBox' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Image_PosterFade) == 0x0007B8, "Member 'UTournamentDetails_C::Image_PosterFade' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, MFA_WarningText) == 0x0007C0, "Member 'UTournamentDetails_C::MFA_WarningText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, MFAContainer) == 0x0007C8, "Member 'UTournamentDetails_C::MFAContainer' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, OverviewPanel) == 0x0007D0, "Member 'UTournamentDetails_C::OverviewPanel' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, OverviewPanelButton) == 0x0007D8, "Member 'UTournamentDetails_C::OverviewPanelButton' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RetainerBox_BGText) == 0x0007E0, "Member 'UTournamentDetails_C::RetainerBox_BGText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RetainerBox_TimeCallout) == 0x0007E8, "Member 'UTournamentDetails_C::RetainerBox_TimeCallout' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, RichTextBlock_TournamentTimeCallout1) == 0x0007F0, "Member 'UTournamentDetails_C::RichTextBlock_TournamentTimeCallout1' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ScrollBox_DetailAndRules) == 0x0007F8, "Member 'UTournamentDetails_C::ScrollBox_DetailAndRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile) == 0x000800, "Member 'UTournamentDetails_C::ShowdownEventTile' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_0) == 0x000808, "Member 'UTournamentDetails_C::ShowdownEventTile_0' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_1) == 0x000810, "Member 'UTournamentDetails_C::ShowdownEventTile_1' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownEventTile_2) == 0x000818, "Member 'UTournamentDetails_C::ShowdownEventTile_2' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownTournamentDetailsScoringRule) == 0x000820, "Member 'UTournamentDetails_C::ShowdownTournamentDetailsScoringRule' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, ShowdownTournamentDetailsScoringRule_C_3) == 0x000828, "Member 'UTournamentDetails_C::ShowdownTournamentDetailsScoringRule_C_3' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, Text_PinUnlockScore) == 0x000830, "Member 'UTournamentDetails_C::Text_PinUnlockScore' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentEventWindowDetails) == 0x000838, "Member 'UTournamentDetails_C::TournamentEventWindowDetails' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentMatchType) == 0x000840, "Member 'UTournamentDetails_C::TournamentMatchType' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPayoutModal) == 0x000848, "Member 'UTournamentDetails_C::TournamentPayoutModal' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPosterBack) == 0x000850, "Member 'UTournamentDetails_C::TournamentPosterBack' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentPosterFront) == 0x000858, "Member 'UTournamentDetails_C::TournamentPosterFront' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentRoundText) == 0x000860, "Member 'UTournamentDetails_C::TournamentRoundText' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentSubTitleBackground) == 0x000868, "Member 'UTournamentDetails_C::TournamentSubTitleBackground' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentWatchList) == 0x000870, "Member 'UTournamentDetails_C::TournamentWatchList' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, UniformGridPanel_TournamentScoringRules) == 0x000878, "Member 'UTournamentDetails_C::UniformGridPanel_TournamentScoringRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, UnlockPinContent) == 0x000880, "Member 'UTournamentDetails_C::UnlockPinContent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, EventWindowDetailsShown) == 0x000888, "Member 'UTournamentDetails_C::EventWindowDetailsShown' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, TournamentDetailsShown) == 0x000889, "Member 'UTournamentDetails_C::TournamentDetailsShown' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, BackActionSelected) == 0x000890, "Member 'UTournamentDetails_C::BackActionSelected' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, FirstActiveEvent) == 0x0008A0, "Member 'UTournamentDetails_C::FirstActiveEvent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, LastFocusedEvent) == 0x0008A8, "Member 'UTournamentDetails_C::LastFocusedEvent' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, IsCenteringScrollBox) == 0x0008B0, "Member 'UTournamentDetails_C::IsCenteringScrollBox' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, LeaderboardisCollapsed) == 0x0008B1, "Member 'UTournamentDetails_C::LeaderboardisCollapsed' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, DefaultTournamentIdForScoringRules) == 0x0008B8, "Member 'UTournamentDetails_C::DefaultTournamentIdForScoringRules' has a wrong offset!");
static_assert(offsetof(UTournamentDetails_C, LeaderboardListViewWrapper) == 0x0008C8, "Member 'UTournamentDetails_C::LeaderboardListViewWrapper' has a wrong offset!");

}

