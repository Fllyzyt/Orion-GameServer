#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerPawn_Athena

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "PawnHighlight_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FCreativeEffectColorIndex_structs.hpp"
#include "PlayerPawn_Athena_Generic_classes.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerPawn_Athena.PlayerPawn_Athena_C
// 0x06B0 (0x43D0 - 0x3D20)
#pragma pack(push, 0x1)
class alignas(0x10) APlayerPawn_Athena_C : public APlayerPawn_Athena_Generic_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerPawn_Athena_C;                // 0x3D20(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFortContrailsComponent*                FortContrails;                                     // 0x3D28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortUnderwaterDamageComponent*         FortUnderwaterDamage;                              // 0x3D30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8; // 0x3D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8; // 0x3D3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5877[0x3];                                     // 0x3D3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x3D40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetHead;                                        // 0x3D48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 TargetBody;                                        // 0x3D50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnHeadMaterials_0;                               // 0x3D58(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             PawnBodyMaterials_0;                               // 0x3D68(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_FlakVest;                                       // 0x3D78(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayEventData                     Event_Data;                                        // 0x3D98(0x00B0)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           EventSpawnEffect;                                  // 0x3E48(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMale;                                            // 0x3E50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5878[0x7];                                     // 0x3E51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortWeapon*                            MenuGoingCommandowWeapon;                          // 0x3E58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             SafeZonePassThroughSound;                          // 0x3E60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenOutsideSafeZone;                           // 0x3E68(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5879[0x3];                                     // 0x3E69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ThreatColor;                                       // 0x3E6C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_587A[0x4];                                     // 0x3E7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PlayerKilledSound;                                 // 0x3E80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               WindDebrisParticles;                               // 0x3E88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               FallingRainParticles;                              // 0x3E90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               StormAuraParticles;                                // 0x3E98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LightningSpawnLocation;                            // 0x3EA0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMin;                             // 0x3EAC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensityMax;                             // 0x3EB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_587B[0x4];                                     // 0x3EB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SafeZoneActor;                                     // 0x3EB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningIntensity;                                // 0x3EC0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_587C[0x4];                                     // 0x3EC4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   RandomLightningLight;                              // 0x3EC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMin;                     // 0x3ED0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningTimelinePlaySpeedMax;                     // 0x3ED4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashDiameter;                            // 0x3ED8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashHeight;                              // 0x3EDC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMin;                      // 0x3EE0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LightningFlashRepeatDelayMax;                      // 0x3EE4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AEmitterCameraLensEffectBase*           RainCameraLensParticles;                           // 0x3EE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         _ChanceOfLightningMesh;                            // 0x3EF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowInvulnerableVisuals;                           // 0x3EF4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_587D[0x3];                                     // 0x3EF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        StormAudioLoop_Inst;                               // 0x3EF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StormAudioVolume;                                  // 0x3F00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_587E[0x4];                                     // 0x3F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        FallingAudioLoop_Inst;                             // 0x3F08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPlayingFallingSound;                            // 0x3F10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_587F[0x3];                                     // 0x3F11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerAttributes_Speed_Walk;                       // 0x3F14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Run;                        // 0x3F18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlayerAttributes_Speed_Sprint;                     // 0x3F1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxTrailsLOD;                                      // 0x3F20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5880[0x4];                                     // 0x3F24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  MobilePostProcess;                                 // 0x3F28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsOutsideSafeZoneCached;                          // 0x3F30(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5881[0x7];                                     // 0x3F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       ResOutMaterials;                                   // 0x3F38(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class ADuplicateResOutMesh_C*                 RezInFXActor;                                      // 0x3F48(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezIn;                                       // 0x3F50(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5882[0x7];                                     // 0x3F51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADuplicateResOutMesh_C*                 RezOutFXActor;                                     // 0x3F58(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bQueueRezOut;                                      // 0x3F60(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasEverInWarmUp;                                  // 0x3F61(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bStormAudioCleanedUp;                              // 0x3F62(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5883[0xD];                                     // 0x3F63(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Box_Local_Transform;                               // 0x3F70(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BoundsRadius;                                      // 0x3FA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5884[0x4];                                     // 0x3FA4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPointLightComponent*                   TeleportationPointLight;                           // 0x3FA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxLightIntensity;                                 // 0x3FB0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshTop;                                    // 0x3FB4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Socket_MeshBot;                                    // 0x3FBC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_Transition;                               // 0x3FC4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolvePercent;                          // 0x3FCC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDirection;                        // 0x3FD4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveBaseLoc;                          // 0x3FDC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveDistance;                         // 0x3FE4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MIDParam_DissolveFirstSpawn;                       // 0x3FEC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5885[0x4];                                     // 0x3FF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Mat_CharacterDissolve;                             // 0x3FF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       DissolveMIDs;                                      // 0x4000(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          bUseNewTeleportFX;                                 // 0x4010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5886[0x3];                                     // 0x4011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           OutsideSafeZoneGameplayCueTag;                     // 0x4014(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SafeZonePhase;                                     // 0x401C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WhichSafeZoneTag;                                  // 0x4020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOutsideSafeZoneGameplayCueActive;                 // 0x4024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5887[0x3];                                     // 0x4025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         SafeZoneDamageScalableFloat;                       // 0x4028(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bFrontendPartyInProgress;                          // 0x4050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLockOnInteractionComplete;                        // 0x4051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5888[0x6];                                     // 0x4052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             ResIn;                                             // 0x4058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             ResOut;                                            // 0x4068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingRight;                                        // 0x4078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft;                                         // 0x4088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bSkeletalArrayReady;                               // 0x4098(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5889[0x3];                                     // 0x4099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurDissolveSetupAttempt;                           // 0x409C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             DBNOEnterSound;                                    // 0x40A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFadeToWhiteTeleported;                           // 0x40A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Is_Ashton;                                         // 0x40B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_588A[0x7];                                     // 0x40B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Ashton;                                            // 0x40C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SwingRightEnd;                                     // 0x40C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeftEnd;                                      // 0x40D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FGameplayTag                           PhoneGhostCue;                                     // 0x40E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WhiteoutCue;                                       // 0x40F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZoneCue;                                // 0x40F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone2Cue;                               // 0x4100(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           OutsideSafeZone3Cue;                               // 0x4108(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayRespawnFXOnSpawn;                              // 0x4110(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor)
	uint8                                         Pad_588B[0x7];                                     // 0x4111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawnAthena*                  PlayerPawnAthena;                                  // 0x4118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SwingRight2;                                       // 0x4120(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             SwingLeft2;                                        // 0x4130(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          TestProceduralWaterInIsolation;                    // 0x4140(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x4141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_First_Water_Body;                               // 0x4142(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Is_Last_Water_Body;                                // 0x4143(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AccumulatedNormalizedDiveSpeed;                    // 0x4144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           WaterSprintBoostTag;                               // 0x4148(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             CCPM_isHiddenInProp;                               // 0x4150(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<class UObject*, struct FPawnHighlight>   PawnHighlights;                                    // 0x4160(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UObject*                                Current_Highlight_Source;                          // 0x41B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Current_Highlight_Priority;                        // 0x41B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPawnHighlight                         Invulnerable_Highlight;                            // 0x41BC(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCreativeEffectColorIndex             LastCreativeEffectColorIndex;                      // 0x41EC(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGalileo;                                         // 0x41F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_588C[0x3];                                     // 0x41F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         HotFixSnow;                                        // 0x41F8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSet<class FName>                             NoSnowPlaylists;                                   // 0x4220(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           GalileoPlaylistTag;                                // 0x4270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WeaponMIDs;                                        // 0x4278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         AmountOfTimesToAttemptRestoreMats;                 // 0x4288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaNPC;                                  // 0x428C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         HitGlowBrightnessScalar;                           // 0x4294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CurrentWeaponMaterials;                            // 0x4298(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class USkeletalMeshComponent*>         CurrentWeaponMeshes;                               // 0x42A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       WeaponDissolveMIDs;                                // 0x42B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         HitGlowBrightnessScalar_Mobile;                    // 0x42C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           TC_PawnAthenaDecoy;                                // 0x42CC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleRate;                                         // 0x42D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TetherQuestTag;                                    // 0x42D8(0x0020)(Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class FName                                   FirefliesTag;                                      // 0x42F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RightSideRim_Transform;                            // 0x4300(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class USpotLightComponent*                    Right_Side_Rim_Light;                              // 0x4330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_light_Shadow_Bias;                             // 0x4338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Attenuation_Radius;                      // 0x433C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Rim_Light_Intensity;                               // 0x4340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlayerAimRotation;                                 // 0x4344(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FScalableFloat                         ControlRotationReplicationTickRate;                // 0x4350(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           Elimination_Rez_Sequence_GC;                       // 0x4378(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Creative_Respawn_Teleportation_GC;                 // 0x4380(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Teleport_In_GC;                                    // 0x4388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightDistanceFromCamera;                        // 0x4390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RimlightOffsetFromCamera;                          // 0x4394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color_Minus_Night;                       // 0x4398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Rim_Light_Color_Minus_Day;                         // 0x43A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneModeratorModeGameplayCue;                     // 0x43B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PhoneInvulnerableGameplayCue;                      // 0x43C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ResIn__DelegateSignature();
	void ResOut__DelegateSignature();
	void SwingRight__DelegateSignature();
	void SwingLeft__DelegateSignature();
	void OnFadeToWhiteTeleported__DelegateSignature();
	void SwingRightEnd__DelegateSignature();
	void SwingLeftEnd__DelegateSignature();
	void SwingRight2__DelegateSignature();
	void SwingLeft2__DelegateSignature();
	void CCPM_isHiddenInProp__DelegateSignature(bool IsHidden);
	void ExecuteUbergraph_PlayerPawn_Athena(int32 EntryPoint, bool Temp_bool_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsMobilePlatform_ReturnValue, class AController* K2Node_Event_NewController, bool CallFunc_IsMobilePlatform_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, EEndPlayReason K2Node_Event_EndPlayReason, const struct FRotator& CallFunc_K2_GetComponentRotation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_9, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_9, float CallFunc_BreakGameplayCueParameters_NormalizedMagnitude, float CallFunc_BreakGameplayCueParameters_RawMagnitude, const struct FGameplayEffectContextHandle& CallFunc_BreakGameplayCueParameters_EffectContext, const struct FGameplayTag& CallFunc_BreakGameplayCueParameters_MatchedTagName, const struct FGameplayTag& CallFunc_BreakGameplayCueParameters_OriginalTag, const struct FGameplayTagContainer& CallFunc_BreakGameplayCueParameters_AggregatedSourceTags, const struct FGameplayTagContainer& CallFunc_BreakGameplayCueParameters_AggregatedTargetTags, const struct FVector& CallFunc_BreakGameplayCueParameters_Location, const struct FVector& CallFunc_BreakGameplayCueParameters_Normal, class AActor* CallFunc_BreakGameplayCueParameters_Instigator, class AActor* CallFunc_BreakGameplayCueParameters_EffectCauser, class UObject* CallFunc_BreakGameplayCueParameters_SourceObject, class UPhysicalMaterial* CallFunc_BreakGameplayCueParameters_PhysicalMaterial, int32 CallFunc_BreakGameplayCueParameters_GameplayEffectLevel, int32 CallFunc_BreakGameplayCueParameters_AbilityLevel, class USceneComponent* CallFunc_BreakGameplayCueParameters_TargetAttachComponent, class AFortPlayerPawn* K2Node_CustomEvent_Pawn, TDelegate<void(class AFortPlayerPawn* Pawn)> K2Node_CreateDelegate_OutputDelegate, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAllMatchingGameplayTags_TagContainerInterface_CastInput, bool CallFunc_HasAllMatchingGameplayTags_ReturnValue, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena, bool K2Node_DynamicCast_bSuccess, int32 CallFunc_Conv_ByteToInt_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, int32 K2Node_CustomEvent_InSafeZonePhase, bool K2Node_CustomEvent_bSpawnGameplayCue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, int32 K2Node_CustomEvent_NewWhichSafeZoneTag, const struct FGameplayTag& K2Node_CustomEvent_GameplayTag, bool K2Node_CustomEvent_bSpawnGameplayCue, int32 K2Node_Event_SafeZonePhase, bool CallFunc_NotEqual_IntInt_ReturnValue, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_10, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_10, bool K2Node_Event_First_Left, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_1, class UParticleSystemComponent* CallFunc_SpawnEmitterAttached_ReturnValue_1, bool K2Node_Event_First_Right, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_8, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_8, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_7, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_7, bool K2Node_SwitchEnum_CmpSuccess_1, float K2Node_CustomEvent_Duration, uint8 CallFunc_GetActorTeam_ReturnValue, EFortTeamAffiliation CallFunc_GetTeamAffiliationToLocalPlayer_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess_2, bool CallFunc_IsLocallyControlled_ReturnValue_2, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_1, bool CallFunc_IsDedicatedServer_ReturnValue_1, bool Temp_bool_Has_Been_Initd_Variable, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AFortPawn* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, class APlayerController* CallFunc_GetLocalViewingPlayerController_ReturnValue, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_11, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_11, class AFortPlayerControllerSpectating* K2Node_DynamicCast_AsFort_Player_Controller_Spectating, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsLocallyControlled_ReturnValue_3, class APlayerController* CallFunc_GetLocalViewingPlayerController_ReturnValue_1, class AFortPlayerControllerSpectating* K2Node_DynamicCast_AsFort_Player_Controller_Spectating_1, bool K2Node_DynamicCast_bSuccess_2, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_6, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_6, float K2Node_CustomEvent_SecondsTillTeleport, const struct FVector& K2Node_CustomEvent_DestLocation_1, const struct FRotator& K2Node_CustomEvent_DestRotation_1, bool K2Node_CustomEvent_Instant_1, const struct FVector& K2Node_CustomEvent_DestLocation, const struct FRotator& K2Node_CustomEvent_DestRotation, bool K2Node_CustomEvent_Instant, float K2Node_CustomEvent_Gravity, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1, bool CallFunc_K2_TeleportTo_ReturnValue, float CallFunc_Conv_BoolToFloat_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_2, bool CallFunc_IsValid_ReturnValue, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_5, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_5, bool CallFunc_IsLocallyControlled_ReturnValue_4, bool K2Node_SwitchEnum_CmpSuccess_3, class APlayerController* CallFunc_GetLocalViewingPlayerController_ReturnValue_2, class AFortPlayerControllerSpectating* K2Node_DynamicCast_AsFort_Player_Controller_Spectating_2, bool K2Node_DynamicCast_bSuccess_3, bool Temp_bool_IsClosed_Variable, class UFortAsyncAction_CurrentPlaylistReady* CallFunc_PlaylistDataReadyAsync_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class AFortGameStateAthena* Temp_object_Variable, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_4, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_4, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class UFortPlaylist* Temp_object_Variable_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue, const struct FGameplayTagContainer& Temp_struct_Variable, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_3, const struct FVector& CallFunc_K2_GetComponentLocation_ReturnValue_2, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, int32 Temp_int_Array_Index_Variable, class APlayerController* CallFunc_GetLocalViewingPlayerController_ReturnValue_3, TScriptInterface<class IFortVehicleInterface> CallFunc_GetVehicleUInterface_ReturnValue, class AFortPlayerControllerSpectating* K2Node_DynamicCast_AsFort_Player_Controller_Spectating_3, bool K2Node_DynamicCast_bSuccess_4, class AFortPlayerPawn* CallFunc_GetDriver_ReturnValue, class UObject* CallFunc_Conv_InterfaceToObject_ReturnValue, class AActor* CallFunc_GetVehicleActorPtrConst_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class AFortCharacterVehicle* K2Node_DynamicCast_AsFort_Character_Vehicle, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_IsLocallyControlled_ReturnValue_5, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, class AFortGameStateAthena* K2Node_CustomEvent_GameState, class UFortPlaylist* K2Node_CustomEvent_Playlist, struct FGameplayTagContainer& K2Node_CustomEvent_PlaylistContextTags, class AFortWaterBodyActor* K2Node_Event_WaterBody_1, bool K2Node_Event_bIsFirstBody, class AFortWaterBodyActor* K2Node_Event_WaterBody, bool K2Node_Event_bIsLastBody, EMovementMode K2Node_Event_PrevMovementMode, EMovementMode K2Node_Event_NewMovementMode, uint8 K2Node_Event_PrevCustomMode, uint8 K2Node_Event_NewCustomMode, bool CallFunc_IsSurfaceSwimming_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, float CallFunc_GetNumericCVar_OutValue, bool CallFunc_GetNumericCVar_ReturnValue, bool CallFunc_IsInVehicle_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_2, bool CallFunc_IsInAthena_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_3, class AGameStateBase* CallFunc_GetGameState_ReturnValue_1, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfacePosition, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_OutWaterSurfaceNormal, class AFortGameStateAthena* K2Node_DynamicCast_AsFort_Game_State_Athena_1, bool K2Node_DynamicCast_bSuccess_6, bool CallFunc_IsStormCN_ReturnValue, TDelegate<void(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags)> K2Node_CreateDelegate_OutputDelegate_1, float CallFunc_GetWaterImmersionDepth_ReturnValue, float CallFunc_MapRangeClamped_ReturnValue, class AFortWaterBodyActor* CallFunc_GetCurrentWaterBody_ReturnValue, class UFortMovementComp_Character* K2Node_DynamicCast_AsFort_Movement_Comp_Character, bool K2Node_DynamicCast_bSuccess_7, bool CallFunc_IsValid_ReturnValue_4, bool CallFunc_IsMovingOnGround_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, const struct FVector& CallFunc_GetWaterSurfaceLocation_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_4, bool CallFunc_IsLocallyControlled_ReturnValue_6, bool K2Node_CustomEvent_isHidden, const struct FFCreativeEffectColorIndex& K2Node_CustomEvent_Index, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable_1, class APawn* K2Node_Event_LastTetherPawn_1, class APawn* K2Node_Event_LastTetherPawn, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class APawn* CallFunc_GetTetherPawn_ReturnValue, class UFortQuestManager* CallFunc_GetQuestManager_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface, bool K2Node_DynamicCast_bSuccess_8, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, const struct FRotator& CallFunc_GetControlRotation_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData_1, const struct FRotator& K2Node_CustomEvent_PlayerAimRotation, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool Temp_bool_IsClosed_Variable_1, TDelegate<void(class UFortAbilitySystemComponent* AbilitySystemComponent, class AFortPlayerPawn* AffectedPawn)> K2Node_CreateDelegate_OutputDelegate_2, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_5, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_6, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_7, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_8, TDelegate<void(const class FString& CVarName)> K2Node_CreateDelegate_OutputDelegate_3, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, struct FTransform& Temp_struct_Variable_1, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_2, class UPostProcessComponent* CallFunc_AddComponent_ReturnValue, float K2Node_Event_DeltaSeconds, bool Temp_bool_Has_Been_Initd_Variable_2, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_3, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_3, const struct FFortAnimInput_Vitality& K2Node_MakeStruct_FortAnimInput_Vitality, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue, class UFortPlayerAnimInstance* K2Node_DynamicCast_AsFort_Player_Anim_Instance, bool K2Node_DynamicCast_bSuccess_9, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue_1, class UFortPlayerAnimInstance* K2Node_DynamicCast_AsFort_Player_Anim_Instance_1, bool K2Node_DynamicCast_bSuccess_10, const struct FFortAnimInput_Vitality& K2Node_MakeStruct_FortAnimInput_Vitality_1, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_2, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_2, const struct FFortAnimInput_Vitality& K2Node_MakeStruct_FortAnimInput_Vitality_2, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue_2, bool CallFunc_IsDedicatedServer_ReturnValue_2, class UFortPlayerAnimInstance* K2Node_DynamicCast_AsFort_Player_Anim_Instance_2, bool K2Node_DynamicCast_bSuccess_11, EGameplayCueEvent K2Node_GameplayCueEvent_EventType_1, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters_1, const struct FFortAnimInput_Vitality& K2Node_MakeStruct_FortAnimInput_Vitality_3, class UAnimInstance* CallFunc_GetAnimInstance_ReturnValue_3, EGameplayCueEvent K2Node_GameplayCueEvent_EventType, const struct FGameplayCueParameters& K2Node_GameplayCueEvent_Parameters, class UFortPlayerAnimInstance* K2Node_DynamicCast_AsFort_Player_Anim_Instance_3, bool K2Node_DynamicCast_bSuccess_12, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_2, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_2, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_3, bool CallFunc_IsValid_ReturnValue_5, class UDataDrivenCVarEngineSubsystem* CallFunc_GetEngineSubsystem_ReturnValue, class UFortAbilitySystemComponent* K2Node_CustomEvent_AbilitySystemComponent, class AFortPlayerPawn* K2Node_CustomEvent_AffectedPawn, bool CallFunc_IsDedicatedServer_ReturnValue_3, bool Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable, bool CallFunc_HasAuthority_ReturnValue, bool Temp_bool_IsClosed_Variable_2, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_9, const struct FGameplayTagContainer& Temp_struct_Variable_2, bool CallFunc_SendComplexCustomStatEvent_QuestActive, bool CallFunc_SendComplexCustomStatEvent_QuestCompleted, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_10, float Temp_float_Variable, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsDedicatedServer_ReturnValue_4, TArray<class USceneComponent*>& CallFunc_GetChildrenComponents_Children, class USceneComponent* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, float Temp_float_Variable_1, float K2Node_Select_Default);
	void OnCreativeStopInvulnerable();
	void OnCreativeStartInvulnerable();
	void OnCreativeModeratorModeDeactivate();
	void OnCreativeModeratorModeActivate();
	void ApplyColdTag_Retry(class UFortAbilitySystemComponent* Param_AbilitySystemComponent, class AFortPlayerPawn* AffectedPawn);
	void ApplyColdTag();
	void SetupColdTag();
	void GameplayCue_Shield_PotionConsumed(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage_Shielded(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Healing(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Damage(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReceiveTick(float DeltaSeconds);
	void AimTick();
	void ReplicateAimRotation(const struct FRotator& Param_PlayerAimRotation);
	void EndRotationTick();
	void StartAImRotationTick();
	void OnTetherEnded(class APawn* LastTetherPawn);
	void OnTetherStarted(class APawn* LastTetherPawn);
	void OnTetheredExitReleased();
	void OnTetheredExitPressed();
	void ScalePlayerDown();
	void ScalePlayerUp();
	void OnLandscapeCheckFailedAndTeleported();
	void ServerSetCreativeEffectColorIndex(const struct FFCreativeEffectColorIndex& Param_Index);
	void IsHiddingInProp(bool IsHidden);
	void OnBeginWaterSprintBoost();
	void K2_OnMovementModeChanged(EMovementMode PrevMovementMode, EMovementMode NewMovementMode, uint8 PrevCustomMode, uint8 NewCustomMode);
	void OnExitedWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsLastBody);
	void OnEnteredWaterBody(class AFortWaterBodyActor* WaterBody, bool bIsFirstBody);
	void OnSpawnImmunityTimeReset();
	void Play_Respawn_FX();
	void OnSuccessfulBuildingEdit();
	void RemoveSafeZoneGameplayCueServerToClient();
	void AddSafeZoneGameplayCue();
	void MeleeSwingRight_End();
	void MeleeSwingLeft_End();
	void OnCreativeStartGhost();
	void OnCreativeStopGhost();
	void GameplayCue_Athena_Boost(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier1(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void WhiteoutAndTeleport(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool Instant, float Gravity);
	void ClientRunSnowGC(bool Instant);
	void TeleportInNSeconds(float SecondsTillTeleport, const struct FVector& DestLocation, const struct FRotator& DestRotation);
	void GameplayCue_Athena_Reloading(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ActivateInvincibleVisuals(float Duration);
	void GameplayCue_Abilities_Activation_Generic_HarvestBuff_Tier2(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void GameplayCue_Abilities_Activation_DBNOEnter(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void MeleeSwingRight(bool First_Right);
	void MeleeSwingLeft(bool First_Left);
	void OnReceivedStormSurgeDamage();
	void RemoveSafeZoneGameplayCue();
	void OnOutsideSafeZonePhaseChanged(int32 Param_SafeZonePhase);
	void SetSafeZoneTagWhenChanged(int32 NewWhichSafeZoneTag, const struct FGameplayTag& GameplayTag, bool bSpawnGameplayCue);
	void SetSafeZonePhaseAndGameplayCueTag(int32 InSafeZonePhase, bool bSpawnGameplayCue);
	void AddStormFX();
	void OnResInDuringWarmup();
	void OnCharacterCustomizationCompleted(class AFortPlayerPawn* Pawn);
	void OnEnteredReplayRelevancy();
	void OnLeftReplayRelevancy();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void NotifyTeammateSkydivedFromBus();
	void ReceivePossessed(class AController* NewController);
	void OnExitedWaterVolume();
	void OnEnteredWaterVolume();
	void GameplayCue_Abilities_Activation_DBNOResurrect(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void ReceiveBeginPlay();
	void RemoveStormFX();
	void GameplayCue_Athena_Player_BeingRevivedFromDBNO(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void GameplayCue_Athena_Equipping(EGameplayCueEvent EventType, const struct FGameplayCueParameters& Parameters);
	void SafeZoneStatusChanged();
	void ReceiveDestroyed();
	void OnReady_978607004CDEB137CACF38831BECEF40(class AFortGameStateAthena* GameState, class UFortPlaylist* Playlist, struct FGameplayTagContainer& PlaylistContextTags);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void UserConstructionScript(const struct FFortPlayerPawnStats& CallFunc_GetDataTableRowFromName_OutRow, bool CallFunc_GetDataTableRowFromName_ReturnValue);
	void InitAthenaFoleyAudio(bool Temp_bool_Variable, class USoundBase* Temp_object_Variable, class USoundBase* Temp_object_Variable_1, bool Temp_bool_Variable_1, class USoundBase* Temp_object_Variable_2, class USoundBase* Temp_object_Variable_3, bool Temp_bool_Variable_2, class USoundBase* Temp_object_Variable_4, class USoundBase* Temp_object_Variable_5, bool Temp_bool_Variable_3, class USoundBase* Temp_object_Variable_6, class USoundBase* Temp_object_Variable_7, bool Temp_bool_Variable_4, class USoundBase* Temp_object_Variable_8, class USoundBase* Temp_object_Variable_9, bool Temp_bool_Variable_5, class USoundBase* Temp_object_Variable_10, class USoundBase* Temp_object_Variable_11, bool Temp_bool_Variable_6, class USoundBase* Temp_object_Variable_12, class USoundBase* Temp_object_Variable_13, bool CallFunc_IsLocallyControlled_ReturnValue, class USoundBase* K2Node_Select_Default, class USoundBase* K2Node_Select_Default_1, class USoundBase* K2Node_Select_Default_2, class USoundBase* K2Node_Select_Default_3, class USoundBase* K2Node_Select_Default_4, class USoundBase* K2Node_Select_Default_5, class USoundBase* K2Node_Select_Default_6);
	void GetLocationInCircle_XY(struct FVector* LocationLocalSpace, const struct FVector& CallFunc_MakeVector_ReturnValue, float CallFunc_RandomFloat_ReturnValue, float CallFunc_GetPI_ReturnValue, float CallFunc_RandomFloatInRange_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Lerp_ReturnValue, float CallFunc_Cos_ReturnValue, float CallFunc_Sin_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue);
	void EnableWaterAudio(bool Is_Entering_Water, class USoundBase* Temp_object_Variable, class USoundBase* Temp_object_Variable_1, bool Temp_bool_Variable, class USoundBase* Temp_object_Variable_2, class USoundBase* Temp_object_Variable_3, bool Temp_bool_Variable_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, class USoundBase* K2Node_Select_Default, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue_1, class USoundBase* K2Node_Select_Default_1);
	void StopLoopingAudio(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void InWarmup(bool* bInWarmup, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AAthena_GameState_C* K2Node_DynamicCast_AsAthena_Game_State, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue);
	void OnStartLongInteract(class AActor* ReceivingActor, bool* Out_bConsumeEvent, bool* Out_bSkipSetInteractDuration, bool* Out_bSkipStartAnimation, EItemInteractionType* Out_ItemInteractionType, bool CallFunc_ActorHasTag_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue_1, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	void QueueTeleportIn();
	void QueueTeleportOut();
	void FindBounds(bool bGunTrue, const struct FVector& CallFunc_GetActorBounds_Origin, const struct FVector& CallFunc_GetActorBounds_BoxExtent, const struct FVector& CallFunc_BreakTransform_Location, const struct FRotator& CallFunc_BreakTransform_Rotation, const struct FVector& CallFunc_BreakTransform_Scale, const struct FVector& CallFunc_Multiply_VectorVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FTransform& CallFunc_MakeTransform_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, const struct FVector& CallFunc_BreakTransform_Location_1, const struct FRotator& CallFunc_BreakTransform_Rotation_1, const struct FVector& CallFunc_BreakTransform_Scale_1, float CallFunc_VSize_ReturnValue);
	void SpawnTeleportationLight(bool CallFunc_PawnIsNPC_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, bool CallFunc_IsValid_ReturnValue, class UPointLightComponent* CallFunc_AddComponent_ReturnValue, bool CallFunc_IsMobilePlatform_ReturnValue);
	void UpdateDissolveFx(float Scalar_Transition, float Scalar_ZHeight, float Scalar_LightIntensity);
	void CleanupDissolveFX(bool Temp_bool_Variable, class UMaterialInterface* Temp_object_Variable, bool CallFunc_PawnIsNPC_ReturnValue, class UMaterialInterface* K2Node_Select_Default);
	void SetupDissolveFx(bool Temp_bool_Variable, class UMaterialInterface* Temp_object_Variable, bool CallFunc_PawnIsNPC_ReturnValue, class UMaterialInterface* K2Node_Select_Default, bool CallFunc_SetupDissolveFx_ReturnValue);
	void SetPetHidden(bool NewHidden, bool CallFunc_IsValid_ReturnValue);
	void RestoreCharacterMats(bool* bFullyCompleted, int32 CurrentReplacementIndex, int32 Itr, int32 Temp_int_Loop_Counter_Variable, class UMaterialInstanceDynamic* Temp_wildcard_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable_1, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Array_Index_Variable_1, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, bool CallFunc_Array_IsValidIndex_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class USkeletalMeshComponent* CallFunc_Array_Get_Item_1, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue_1, int32 CallFunc_Array_Length_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3);
	void CleanUpTeleportationFXLight(bool CallFunc_IsValid_ReturnValue);
	void SetPartyInProgress(bool bIsPartyInProgress);
	void OnLockOnSearchCompleted(bool* bConsumeEvent, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	void LockonSearchCompleteTimedOut();
	void OnRep_PlayRespawnFXOnSpawn();
	void ApplyPawnHighlight(class UObject* Source, const struct FPawnHighlight& HitGlow, float CallFunc_Add_FloatFloat_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void Remove_Pawn_Highlight_from_Source(class UObject* Source, class UObject* CallFunc_Get_Highest_Priority_Highlight_Source, const struct FPawnHighlight& CallFunc_Get_Highest_Priority_Highlight_Top_Priority, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_Map_Remove_ReturnValue);
	void Highlight_Pawn_from_Source(class UObject* Source, const struct FPawnHighlight& Highlight, bool Only_Update_If_Current, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, const struct FPawnHighlight& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void Get_Highest_Priority_Highlight(class UObject** Source, struct FPawnHighlight* Top_Priority, class UObject* Best_Source, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FPawnHighlight& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, TArray<class UObject*>& CallFunc_Map_Keys_Keys, class UObject* CallFunc_Array_Get_Item, const struct FPawnHighlight& CallFunc_Map_Find_Value_1, bool CallFunc_Map_Find_ReturnValue_1, const struct FPawnHighlight& CallFunc_Map_Find_Value_2, bool CallFunc_Map_Find_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue);
	void GalileoMaterialSetup(int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue);
	void AddSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject, class UMaterialInterface* Temp_object_Variable, bool CallFunc_IsValid_ReturnValue, TArray<class USkeletalMeshComponentBudgeted*>& CallFunc_GetWeaponMeshes_WeaponMeshes, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, bool Temp_bool_Variable, class USkeletalMeshComponentBudgeted* CallFunc_Array_Get_Item, TArray<class UMaterialInterface*>& CallFunc_GetMaterials_ReturnValue, bool CallFunc_PawnIsNPC_ReturnValue, class UMaterialInterface* K2Node_Select_Default, bool CallFunc_SetupDissolveFx_ReturnValue, int32 CallFunc_Array_AddUnique_ReturnValue, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void RemoveSkeletalMeshComponentsFromWeaponObject(class AFortWeapon* WeaponObject, int32 ComponentIndexOffset, int32 Temp_int_Variable, bool CallFunc_IsValid_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, TArray<class USkeletalMeshComponentBudgeted*>& CallFunc_GetWeaponMeshes_WeaponMeshes, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, bool CallFunc_Less_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UMaterialInterface* Temp_wildcard_Variable, class USkeletalMeshComponentBudgeted* CallFunc_Array_Get_Item, int32 CallFunc_GetNumMaterials_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Array_Length_ReturnValue_1, bool CallFunc_Conv_IntToBool_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, int32 CallFunc_Add_IntInt_ReturnValue_3, class UMaterialInterface* CallFunc_Array_Get_Item_1, bool CallFunc_Array_IsValidIndex_ReturnValue, bool CallFunc_Array_RemoveItem_ReturnValue);
	bool PawnIsNPC(bool CallFunc_HasTag_ReturnValue);
	bool PawnIsDecoy(bool CallFunc_HasTag_ReturnValue);
	void ValidateRimLight(bool L_usePhysicalRimlight, class USpringArmComponent* L_springArm, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, class UMaterialInstanceDynamic* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue, bool CallFunc_GetConsoleVariableBoolValue_ReturnValue, class USpotLightComponent* CallFunc_AddComponent_ReturnValue);
	void GetAimPoint(struct FRotator* ControlRotation, const struct FRotator& CallFunc_GetControlRotation_ReturnValue);
	void OnRep_PlayerAimRotation();
	void HandleCvarsUpdated(const class FString& CVarName, const class FString& L_cvarName, bool CallFunc_EqualEqual_StrStr_ReturnValue);
	void Update_Rim_Light_Location(EFortDayPhase CallFunc_GetCurrentDayPhase_ReturnValue, EFortDayPhase CallFunc_GetCurrentDayPhase_ReturnValue_1, float CallFunc_Multiply_FloatFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, EFortDayPhase Temp_byte_Variable, bool CallFunc_IsValid_ReturnValue, float K2Node_Select_Default, class APawn* CallFunc_GetPlayerPawn_ReturnValue, EFortDayPhase Temp_byte_Variable_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, const struct FLinearColor& K2Node_Select_Default_1, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_MakeVector_ReturnValue, class APlayerCameraManager* CallFunc_GetPlayerCameraManager_ReturnValue, const struct FVector& CallFunc_GetCameraLocation_ReturnValue, const struct FRotator& CallFunc_GetCameraRotation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, const struct FVector& CallFunc_TransformLocation_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldLocation_SweepHitResult, const struct FRotator& CallFunc_FindLookAtRotation_ReturnValue, const struct FHitResult& CallFunc_K2_SetWorldRotation_SweepHitResult);
	void Get_Creative_Effect_Data(struct FFCreativeEffectColorIndex* Effect_Color);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerPawn_Athena_C">();
	}
	static class APlayerPawn_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerPawn_Athena_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(APlayerPawn_Athena_C) == 0x000010, "Wrong alinment on APlayerPawn_Athena_C");
static_assert(sizeof(APlayerPawn_Athena_C) == 0x0043D0, "Wrong size on APlayerPawn_Athena_C");
static_assert(offsetof(APlayerPawn_Athena_C, UberGraphFrame_PlayerPawn_Athena_C) == 0x003D20, "Member 'APlayerPawn_Athena_C::UberGraphFrame_PlayerPawn_Athena_C' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortContrails) == 0x003D28, "Member 'APlayerPawn_Athena_C::FortContrails' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FortUnderwaterDamage) == 0x003D30, "Member 'APlayerPawn_Athena_C::FortUnderwaterDamage' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8) == 0x003D38, "Member 'APlayerPawn_Athena_C::Timeline_0_BlendWeight_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8) == 0x003D3C, "Member 'APlayerPawn_Athena_C::Timeline_0__Direction_A4943458400C3662DB243099F9EAC7E8' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Timeline_0) == 0x003D40, "Member 'APlayerPawn_Athena_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetHead) == 0x003D48, "Member 'APlayerPawn_Athena_C::TargetHead' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TargetBody) == 0x003D50, "Member 'APlayerPawn_Athena_C::TargetBody' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHeadMaterials_0) == 0x003D58, "Member 'APlayerPawn_Athena_C::PawnHeadMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnBodyMaterials_0) == 0x003D68, "Member 'APlayerPawn_Athena_C::PawnBodyMaterials_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_FlakVest) == 0x003D78, "Member 'APlayerPawn_Athena_C::TC_FlakVest' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Event_Data) == 0x003D98, "Member 'APlayerPawn_Athena_C::Event_Data' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, EventSpawnEffect) == 0x003E48, "Member 'APlayerPawn_Athena_C::EventSpawnEffect' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsMale) == 0x003E50, "Member 'APlayerPawn_Athena_C::IsMale' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MenuGoingCommandowWeapon) == 0x003E58, "Member 'APlayerPawn_Athena_C::MenuGoingCommandowWeapon' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePassThroughSound) == 0x003E60, "Member 'APlayerPawn_Athena_C::SafeZonePassThroughSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bHasBeenOutsideSafeZone) == 0x003E68, "Member 'APlayerPawn_Athena_C::bHasBeenOutsideSafeZone' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ThreatColor) == 0x003E6C, "Member 'APlayerPawn_Athena_C::ThreatColor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerKilledSound) == 0x003E80, "Member 'APlayerPawn_Athena_C::PlayerKilledSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WindDebrisParticles) == 0x003E88, "Member 'APlayerPawn_Athena_C::WindDebrisParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingRainParticles) == 0x003E90, "Member 'APlayerPawn_Athena_C::FallingRainParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAuraParticles) == 0x003E98, "Member 'APlayerPawn_Athena_C::StormAuraParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningSpawnLocation) == 0x003EA0, "Member 'APlayerPawn_Athena_C::LightningSpawnLocation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMin) == 0x003EAC, "Member 'APlayerPawn_Athena_C::LightningIntensityMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensityMax) == 0x003EB0, "Member 'APlayerPawn_Athena_C::LightningIntensityMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneActor) == 0x003EB8, "Member 'APlayerPawn_Athena_C::SafeZoneActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningIntensity) == 0x003EC0, "Member 'APlayerPawn_Athena_C::LightningIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RandomLightningLight) == 0x003EC8, "Member 'APlayerPawn_Athena_C::RandomLightningLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMin) == 0x003ED0, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningTimelinePlaySpeedMax) == 0x003ED4, "Member 'APlayerPawn_Athena_C::LightningTimelinePlaySpeedMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashDiameter) == 0x003ED8, "Member 'APlayerPawn_Athena_C::LightningFlashDiameter' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashHeight) == 0x003EDC, "Member 'APlayerPawn_Athena_C::LightningFlashHeight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMin) == 0x003EE0, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMin' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LightningFlashRepeatDelayMax) == 0x003EE4, "Member 'APlayerPawn_Athena_C::LightningFlashRepeatDelayMax' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RainCameraLensParticles) == 0x003EE8, "Member 'APlayerPawn_Athena_C::RainCameraLensParticles' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, _ChanceOfLightningMesh) == 0x003EF0, "Member 'APlayerPawn_Athena_C::_ChanceOfLightningMesh' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ShowInvulnerableVisuals) == 0x003EF4, "Member 'APlayerPawn_Athena_C::ShowInvulnerableVisuals' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioLoop_Inst) == 0x003EF8, "Member 'APlayerPawn_Athena_C::StormAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, StormAudioVolume) == 0x003F00, "Member 'APlayerPawn_Athena_C::StormAudioVolume' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FallingAudioLoop_Inst) == 0x003F08, "Member 'APlayerPawn_Athena_C::FallingAudioLoop_Inst' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsPlayingFallingSound) == 0x003F10, "Member 'APlayerPawn_Athena_C::bIsPlayingFallingSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Walk) == 0x003F14, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Walk' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Run) == 0x003F18, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Run' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAttributes_Speed_Sprint) == 0x003F1C, "Member 'APlayerPawn_Athena_C::PlayerAttributes_Speed_Sprint' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxTrailsLOD) == 0x003F20, "Member 'APlayerPawn_Athena_C::MaxTrailsLOD' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MobilePostProcess) == 0x003F28, "Member 'APlayerPawn_Athena_C::MobilePostProcess' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bIsOutsideSafeZoneCached) == 0x003F30, "Member 'APlayerPawn_Athena_C::bIsOutsideSafeZoneCached' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOutMaterials) == 0x003F38, "Member 'APlayerPawn_Athena_C::ResOutMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezInFXActor) == 0x003F48, "Member 'APlayerPawn_Athena_C::RezInFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezIn) == 0x003F50, "Member 'APlayerPawn_Athena_C::bQueueRezIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RezOutFXActor) == 0x003F58, "Member 'APlayerPawn_Athena_C::RezOutFXActor' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bQueueRezOut) == 0x003F60, "Member 'APlayerPawn_Athena_C::bQueueRezOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bWasEverInWarmUp) == 0x003F61, "Member 'APlayerPawn_Athena_C::bWasEverInWarmUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bStormAudioCleanedUp) == 0x003F62, "Member 'APlayerPawn_Athena_C::bStormAudioCleanedUp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Box_Local_Transform) == 0x003F70, "Member 'APlayerPawn_Athena_C::Box_Local_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, BoundsRadius) == 0x003FA0, "Member 'APlayerPawn_Athena_C::BoundsRadius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TeleportationPointLight) == 0x003FA8, "Member 'APlayerPawn_Athena_C::TeleportationPointLight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MaxLightIntensity) == 0x003FB0, "Member 'APlayerPawn_Athena_C::MaxLightIntensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshTop) == 0x003FB4, "Member 'APlayerPawn_Athena_C::Socket_MeshTop' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Socket_MeshBot) == 0x003FBC, "Member 'APlayerPawn_Athena_C::Socket_MeshBot' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_Transition) == 0x003FC4, "Member 'APlayerPawn_Athena_C::MIDParam_Transition' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolvePercent) == 0x003FCC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolvePercent' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDirection) == 0x003FD4, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDirection' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveBaseLoc) == 0x003FDC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveBaseLoc' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveDistance) == 0x003FE4, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveDistance' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, MIDParam_DissolveFirstSpawn) == 0x003FEC, "Member 'APlayerPawn_Athena_C::MIDParam_DissolveFirstSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Mat_CharacterDissolve) == 0x003FF8, "Member 'APlayerPawn_Athena_C::Mat_CharacterDissolve' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DissolveMIDs) == 0x004000, "Member 'APlayerPawn_Athena_C::DissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bUseNewTeleportFX) == 0x004010, "Member 'APlayerPawn_Athena_C::bUseNewTeleportFX' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneGameplayCueTag) == 0x004014, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneGameplayCueTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZonePhase) == 0x00401C, "Member 'APlayerPawn_Athena_C::SafeZonePhase' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhichSafeZoneTag) == 0x004020, "Member 'APlayerPawn_Athena_C::WhichSafeZoneTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bOutsideSafeZoneGameplayCueActive) == 0x004024, "Member 'APlayerPawn_Athena_C::bOutsideSafeZoneGameplayCueActive' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SafeZoneDamageScalableFloat) == 0x004028, "Member 'APlayerPawn_Athena_C::SafeZoneDamageScalableFloat' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bFrontendPartyInProgress) == 0x004050, "Member 'APlayerPawn_Athena_C::bFrontendPartyInProgress' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bLockOnInteractionComplete) == 0x004051, "Member 'APlayerPawn_Athena_C::bLockOnInteractionComplete' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResIn) == 0x004058, "Member 'APlayerPawn_Athena_C::ResIn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ResOut) == 0x004068, "Member 'APlayerPawn_Athena_C::ResOut' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight) == 0x004078, "Member 'APlayerPawn_Athena_C::SwingRight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft) == 0x004088, "Member 'APlayerPawn_Athena_C::SwingLeft' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, bSkeletalArrayReady) == 0x004098, "Member 'APlayerPawn_Athena_C::bSkeletalArrayReady' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurDissolveSetupAttempt) == 0x00409C, "Member 'APlayerPawn_Athena_C::CurDissolveSetupAttempt' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, DBNOEnterSound) == 0x0040A0, "Member 'APlayerPawn_Athena_C::DBNOEnterSound' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OnFadeToWhiteTeleported) == 0x0040A8, "Member 'APlayerPawn_Athena_C::OnFadeToWhiteTeleported' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Ashton) == 0x0040B8, "Member 'APlayerPawn_Athena_C::Is_Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Ashton) == 0x0040C0, "Member 'APlayerPawn_Athena_C::Ashton' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRightEnd) == 0x0040C8, "Member 'APlayerPawn_Athena_C::SwingRightEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeftEnd) == 0x0040D8, "Member 'APlayerPawn_Athena_C::SwingLeftEnd' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneGhostCue) == 0x0040E8, "Member 'APlayerPawn_Athena_C::PhoneGhostCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WhiteoutCue) == 0x0040F0, "Member 'APlayerPawn_Athena_C::WhiteoutCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZoneCue) == 0x0040F8, "Member 'APlayerPawn_Athena_C::OutsideSafeZoneCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone2Cue) == 0x004100, "Member 'APlayerPawn_Athena_C::OutsideSafeZone2Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, OutsideSafeZone3Cue) == 0x004108, "Member 'APlayerPawn_Athena_C::OutsideSafeZone3Cue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayRespawnFXOnSpawn) == 0x004110, "Member 'APlayerPawn_Athena_C::PlayRespawnFXOnSpawn' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerPawnAthena) == 0x004118, "Member 'APlayerPawn_Athena_C::PlayerPawnAthena' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingRight2) == 0x004120, "Member 'APlayerPawn_Athena_C::SwingRight2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, SwingLeft2) == 0x004130, "Member 'APlayerPawn_Athena_C::SwingLeft2' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TestProceduralWaterInIsolation) == 0x004140, "Member 'APlayerPawn_Athena_C::TestProceduralWaterInIsolation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NewVar_0) == 0x004141, "Member 'APlayerPawn_Athena_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_First_Water_Body) == 0x004142, "Member 'APlayerPawn_Athena_C::Is_First_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Is_Last_Water_Body) == 0x004143, "Member 'APlayerPawn_Athena_C::Is_Last_Water_Body' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AccumulatedNormalizedDiveSpeed) == 0x004144, "Member 'APlayerPawn_Athena_C::AccumulatedNormalizedDiveSpeed' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WaterSprintBoostTag) == 0x004148, "Member 'APlayerPawn_Athena_C::WaterSprintBoostTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CCPM_isHiddenInProp) == 0x004150, "Member 'APlayerPawn_Athena_C::CCPM_isHiddenInProp' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PawnHighlights) == 0x004160, "Member 'APlayerPawn_Athena_C::PawnHighlights' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Source) == 0x0041B0, "Member 'APlayerPawn_Athena_C::Current_Highlight_Source' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Current_Highlight_Priority) == 0x0041B8, "Member 'APlayerPawn_Athena_C::Current_Highlight_Priority' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Invulnerable_Highlight) == 0x0041BC, "Member 'APlayerPawn_Athena_C::Invulnerable_Highlight' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, LastCreativeEffectColorIndex) == 0x0041EC, "Member 'APlayerPawn_Athena_C::LastCreativeEffectColorIndex' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, IsGalileo) == 0x0041F4, "Member 'APlayerPawn_Athena_C::IsGalileo' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HotFixSnow) == 0x0041F8, "Member 'APlayerPawn_Athena_C::HotFixSnow' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, NoSnowPlaylists) == 0x004220, "Member 'APlayerPawn_Athena_C::NoSnowPlaylists' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, GalileoPlaylistTag) == 0x004270, "Member 'APlayerPawn_Athena_C::GalileoPlaylistTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponMIDs) == 0x004278, "Member 'APlayerPawn_Athena_C::WeaponMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, AmountOfTimesToAttemptRestoreMats) == 0x004288, "Member 'APlayerPawn_Athena_C::AmountOfTimesToAttemptRestoreMats' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaNPC) == 0x00428C, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaNPC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar) == 0x004294, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMaterials) == 0x004298, "Member 'APlayerPawn_Athena_C::CurrentWeaponMaterials' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, CurrentWeaponMeshes) == 0x0042A8, "Member 'APlayerPawn_Athena_C::CurrentWeaponMeshes' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, WeaponDissolveMIDs) == 0x0042B8, "Member 'APlayerPawn_Athena_C::WeaponDissolveMIDs' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, HitGlowBrightnessScalar_Mobile) == 0x0042C8, "Member 'APlayerPawn_Athena_C::HitGlowBrightnessScalar_Mobile' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TC_PawnAthenaDecoy) == 0x0042CC, "Member 'APlayerPawn_Athena_C::TC_PawnAthenaDecoy' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ScaleRate) == 0x0042D4, "Member 'APlayerPawn_Athena_C::ScaleRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, TetherQuestTag) == 0x0042D8, "Member 'APlayerPawn_Athena_C::TetherQuestTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, FirefliesTag) == 0x0042F8, "Member 'APlayerPawn_Athena_C::FirefliesTag' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RightSideRim_Transform) == 0x004300, "Member 'APlayerPawn_Athena_C::RightSideRim_Transform' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Right_Side_Rim_Light) == 0x004330, "Member 'APlayerPawn_Athena_C::Right_Side_Rim_Light' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_light_Shadow_Bias) == 0x004338, "Member 'APlayerPawn_Athena_C::Rim_light_Shadow_Bias' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Attenuation_Radius) == 0x00433C, "Member 'APlayerPawn_Athena_C::Rim_Light_Attenuation_Radius' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Intensity) == 0x004340, "Member 'APlayerPawn_Athena_C::Rim_Light_Intensity' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PlayerAimRotation) == 0x004344, "Member 'APlayerPawn_Athena_C::PlayerAimRotation' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, ControlRotationReplicationTickRate) == 0x004350, "Member 'APlayerPawn_Athena_C::ControlRotationReplicationTickRate' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Elimination_Rez_Sequence_GC) == 0x004378, "Member 'APlayerPawn_Athena_C::Elimination_Rez_Sequence_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Creative_Respawn_Teleportation_GC) == 0x004380, "Member 'APlayerPawn_Athena_C::Creative_Respawn_Teleportation_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Teleport_In_GC) == 0x004388, "Member 'APlayerPawn_Athena_C::Teleport_In_GC' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightDistanceFromCamera) == 0x004390, "Member 'APlayerPawn_Athena_C::RimlightDistanceFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, RimlightOffsetFromCamera) == 0x004394, "Member 'APlayerPawn_Athena_C::RimlightOffsetFromCamera' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color_Minus_Night) == 0x004398, "Member 'APlayerPawn_Athena_C::Rim_Light_Color_Minus_Night' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, Rim_Light_Color_Minus_Day) == 0x0043A8, "Member 'APlayerPawn_Athena_C::Rim_Light_Color_Minus_Day' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneModeratorModeGameplayCue) == 0x0043B8, "Member 'APlayerPawn_Athena_C::PhoneModeratorModeGameplayCue' has a wrong offset!");
static_assert(offsetof(APlayerPawn_Athena_C, PhoneInvulnerableGameplayCue) == 0x0043C0, "Member 'APlayerPawn_Athena_C::PhoneInvulnerableGameplayCue' has a wrong offset!");

}

