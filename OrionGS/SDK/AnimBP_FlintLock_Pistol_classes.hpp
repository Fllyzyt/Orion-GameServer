#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_FlintLock_Pistol

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_FlintLock_Pistol.AnimBP_FlintLock_Pistol_C
// 0x0320 (0x05E0 - 0x02C0)
class UAnimBP_FlintLock_Pistol_C final  : public UAnimInstance
{
public:
	uint8                                         Pad_7D05[0x8];                                     // 0x02B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimInstanceSubsystemData             AnimBlueprintClassSubsystem_PropertyAccess;        // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D06[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x02D0(0x0030)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x0300(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0348(0x0078)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x03C0(0x00C8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x0488(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x04B0(0x00B0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x0560(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0588(0x0048)()
	EFortCustomGender                             Gender;                                            // 0x05D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_FlintLock_Pistol(int32 EntryPoint, class AActor* CallFunc_GetOwningActor_ReturnValue, class AB_Pistol_Flintlock_Athena_C* K2Node_DynamicCast_AsB_Pistol_Flintlock_Athena, bool K2Node_DynamicCast_bSuccess, float K2Node_Event_DeltaTimeX, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_1, EFortCustomGender CallFunc_GetCharacterGender_ReturnValue);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void AnimGraph(struct FPoseLink* Param_AnimGraph);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_FlintLock_Pistol_C">();
	}
	static class UAnimBP_FlintLock_Pistol_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_FlintLock_Pistol_C>();
	}
};
static_assert(alignof(UAnimBP_FlintLock_Pistol_C) == 0x000010, "Wrong alinment on UAnimBP_FlintLock_Pistol_C");
static_assert(sizeof(UAnimBP_FlintLock_Pistol_C) == 0x0005E0, "Wrong size on UAnimBP_FlintLock_Pistol_C");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, UberGraphFrame) == 0x0002C0, "Member 'UAnimBP_FlintLock_Pistol_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimBlueprintClassSubsystem_PropertyAccess) == 0x0002C8, "Member 'UAnimBP_FlintLock_Pistol_C::AnimBlueprintClassSubsystem_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_Root) == 0x0002D0, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_Slot_1) == 0x000300, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_SequencePlayer) == 0x000348, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_SaveCachedPose) == 0x0003C0, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_UseCachedPose_1) == 0x000488, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_BlendListByEnum) == 0x0004B0, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_UseCachedPose) == 0x000560, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, AnimGraphNode_Slot) == 0x000588, "Member 'UAnimBP_FlintLock_Pistol_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UAnimBP_FlintLock_Pistol_C, Gender) == 0x0005D0, "Member 'UAnimBP_FlintLock_Pistol_C::Gender' has a wrong offset!");

}

