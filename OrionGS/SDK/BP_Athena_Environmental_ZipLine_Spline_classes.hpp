#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Athena_Environmental_ZipLine_Spline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Athena_Environmental_ZipLine_Spline.BP_Athena_Environmental_ZipLine_Spline_C
// 0x0080 (0x09A0 - 0x0920)
class ABP_Athena_Environmental_ZipLine_Spline_C final  : public AFortAthenaSplineZipline
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0920(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMesh*                            SplineStaticMesh;                                  // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TangentSmoothStrength;                             // 0x0930(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSmoothTangents;                                // 0x0934(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESplineMeshAxis                               ForwardMeshAxis;                                   // 0x0935(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60AF[0x2];                                     // 0x0936(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                MotorOffset;                                       // 0x0938(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_60B0[0x4];                                     // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PoleA;                                             // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 PoleB;                                             // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                PoleASocketLocation;                               // 0x0958(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PoleBSocketLocation;                               // 0x0964(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LowerPointID;                                      // 0x0970(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HigherPointID;                                     // 0x0974(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HigherEndLocation;                                 // 0x0978(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LowerEndLocation;                                  // 0x0984(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AutoSplineTangentLengthCoef;                       // 0x0990(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoSplineTangentHorizCoef;                        // 0x0994(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AutoSplineTangentVertCoef;                         // 0x0998(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Auto_Set_Spline_Ends;                              // 0x099C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          Auto_Set_Spline_Mids;                              // 0x099D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)

public:
	void ExecuteUbergraph_BP_Athena_Environmental_ZipLine_Spline(int32 EntryPoint, const struct FVector& CallFunc_GetLocationAtSplinePoint_ReturnValue, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, const struct FVector& CallFunc_GetLocationAtSplinePoint_ReturnValue_1);
	void ReceiveBeginPlay();
	void UserConstructionScript(bool NewLocalVar_0, int32 Temp_int_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_1, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue_2, int32 CallFunc_Subtract_IntInt_ReturnValue_2, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, bool CallFunc_Less_FloatFloat_ReturnValue, int32 Temp_int_Variable_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_2, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_GetSocketLocation_ReturnValue_1, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location_1, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1, class USplineMeshComponent* CallFunc_AddSplineMeshSegment_SplineMeshSegment, const struct FVector& CallFunc_AutoSmoothTanget_SmoothedTangent, const struct FVector& CallFunc_AutoSmoothTanget_SmoothedTangent_1, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue_3, int32 CallFunc_Subtract_IntInt_ReturnValue_3, bool CallFunc_LessEqual_IntInt_ReturnValue_1);
	void AddSplineMeshSegment(class USplineMeshComponent** SplineMeshSegment, struct FTransform& Temp_struct_Variable, class USplineMeshComponent* CallFunc_AddComponent_ReturnValue, bool CallFunc_SetStaticMesh_ReturnValue);
	void AutoSmoothTanget(const struct FVector& Tangent, const struct FVector& PointA, const struct FVector& PointB, struct FVector* SmoothedTangent, bool Temp_bool_Variable, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, float CallFunc_VSize_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& K2Node_Select_Default);
	void CalculatePositionOfPoles(int32 CallFunc_GetNumberOfSplinePoints_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Location_1, const struct FVector& CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue_1, const struct FVector& CallFunc_GetSocketLocation_ReturnValue, const struct FVector& CallFunc_GetSocketLocation_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void SetSplinePositionAndTangent(bool SetPosition, bool SetTangent, int32 ID, float OneDivNumPoints, int32 SplinePointIDToSet, float AlphaForLocation, bool IsFirstPoint, int32 SplinePointID, float PrevAlpha, float Alpha, const struct FVector& CallFunc_Calc_Auto_Location_At_Alpha_PointLocation, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue_2, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, int32 CallFunc_GetNumberOfSplinePoints_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, int32 CallFunc_Subtract_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_Divide_FloatFloat_ReturnValue_1, float CallFunc_Divide_FloatFloat_ReturnValue_2);
	void Calc_Auto_Location_At_Alpha(float InAlpha, bool DrawDebug, struct FVector* PointLocation, float SplinePointID, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FVector& CallFunc_MakeVector_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_3, const struct FVector& CallFunc_VLerp_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue_1, const struct FVector& CallFunc_VLerp_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_3);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Athena_Environmental_ZipLine_Spline_C">();
	}
	static class ABP_Athena_Environmental_ZipLine_Spline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Athena_Environmental_ZipLine_Spline_C>();
	}
};
static_assert(alignof(ABP_Athena_Environmental_ZipLine_Spline_C) == 0x000008, "Wrong alinment on ABP_Athena_Environmental_ZipLine_Spline_C");
static_assert(sizeof(ABP_Athena_Environmental_ZipLine_Spline_C) == 0x0009A0, "Wrong size on ABP_Athena_Environmental_ZipLine_Spline_C");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, UberGraphFrame) == 0x000920, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, SplineStaticMesh) == 0x000928, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::SplineStaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, TangentSmoothStrength) == 0x000930, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::TangentSmoothStrength' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSmoothTangents) == 0x000934, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSmoothTangents' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, ForwardMeshAxis) == 0x000935, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::ForwardMeshAxis' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, MotorOffset) == 0x000938, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::MotorOffset' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleA) == 0x000948, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleA' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleB) == 0x000950, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleB' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleASocketLocation) == 0x000958, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleASocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, PoleBSocketLocation) == 0x000964, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::PoleBSocketLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, LowerPointID) == 0x000970, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::LowerPointID' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, HigherPointID) == 0x000974, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::HigherPointID' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, HigherEndLocation) == 0x000978, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::HigherEndLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, LowerEndLocation) == 0x000984, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::LowerEndLocation' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentLengthCoef) == 0x000990, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentLengthCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentHorizCoef) == 0x000994, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentHorizCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, AutoSplineTangentVertCoef) == 0x000998, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::AutoSplineTangentVertCoef' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, Auto_Set_Spline_Ends) == 0x00099C, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::Auto_Set_Spline_Ends' has a wrong offset!");
static_assert(offsetof(ABP_Athena_Environmental_ZipLine_Spline_C, Auto_Set_Spline_Mids) == 0x00099D, "Member 'ABP_Athena_Environmental_ZipLine_Spline_C::Auto_Set_Spline_Mids' has a wrong offset!");

}

