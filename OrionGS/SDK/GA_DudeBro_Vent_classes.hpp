#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_DudeBro_Vent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_DudeBro_Vent.GA_DudeBro_Vent_C
// 0x0038 (0x0AF0 - 0x0AB8)
class UGA_DudeBro_Vent_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 VehicleSkelMesh;                                   // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GravFloorAltitude;                                 // 0x0AD0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UpwardLaunchVelocity;                              // 0x0AD4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         VentsHitBeforeLanding;                             // 0x0AD8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         NumVentsToHitForQuest;                             // 0x0AE8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_DudeBro_Vent(int32 EntryPoint, bool K2Node_Event_bWasCancelled, bool CallFunc_IsValid_ReturnValue, class ACharacter* K2Node_CustomEvent_Character, EMovementMode K2Node_CustomEvent_PrevMovementMode, uint8 K2Node_CustomEvent_PreviousCustomMode, TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate, class UPawnMovementComponent* CallFunc_GetMovementComponent_ReturnValue, class UFortMovementComp_CharacterAthena* K2Node_DynamicCast_AsFort_Movement_Comp_Character_Athena, bool K2Node_DynamicCast_bSuccess, struct FGameplayEventData& K2Node_Event_EventData, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, bool GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess, bool CallFunc_IsServer_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, const struct FGameplayEffectContextHandle& CallFunc_MakeEffectContext_ReturnValue, TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_1, class AGameStateBase* CallFunc_GetGameState_ReturnValue, bool CallFunc_Athena_CheckCreativeMode_CanCompleteQuest, class UPrimitiveComponent* K2Node_CustomEvent_HitComponent, class AActor* K2Node_CustomEvent_OtherActor, class UPrimitiveComponent* K2Node_CustomEvent_OtherComp, const struct FVector& K2Node_CustomEvent_NormalImpulse, struct FHitResult& K2Node_CustomEvent_Hit, class ABuildingActor* K2Node_DynamicCast_AsBuilding_Actor, bool K2Node_DynamicCast_bSuccess_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_2, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_2, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_2, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue);
	void PlayerCapsuleHit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void K2_ActivateAbilityFromEvent(struct FGameplayEventData& EventData);
	void MovementModeChangedDelegate_Event_0(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode);
	void K2_OnEndAbility(bool bWasCancelled);
	void ActuallyCleanPlayerUp(bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsValid_ReturnValue, TDelegate<void(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit)> K2Node_CreateDelegate_OutputDelegate);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_DudeBro_Vent_C">();
	}
	static class UGA_DudeBro_Vent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_DudeBro_Vent_C>();
	}
};
static_assert(alignof(UGA_DudeBro_Vent_C) == 0x000008, "Wrong alinment on UGA_DudeBro_Vent_C");
static_assert(sizeof(UGA_DudeBro_Vent_C) == 0x000AF0, "Wrong size on UGA_DudeBro_Vent_C");
static_assert(offsetof(UGA_DudeBro_Vent_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_DudeBro_Vent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, VehicleSkelMesh) == 0x000AC0, "Member 'UGA_DudeBro_Vent_C::VehicleSkelMesh' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, PlayerPawn) == 0x000AC8, "Member 'UGA_DudeBro_Vent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, GravFloorAltitude) == 0x000AD0, "Member 'UGA_DudeBro_Vent_C::GravFloorAltitude' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, UpwardLaunchVelocity) == 0x000AD4, "Member 'UGA_DudeBro_Vent_C::UpwardLaunchVelocity' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, VentsHitBeforeLanding) == 0x000AD8, "Member 'UGA_DudeBro_Vent_C::VentsHitBeforeLanding' has a wrong offset!");
static_assert(offsetof(UGA_DudeBro_Vent_C, NumVentsToHitForQuest) == 0x000AE8, "Member 'UGA_DudeBro_Vent_C::NumVentsToHitForQuest' has a wrong offset!");

}

