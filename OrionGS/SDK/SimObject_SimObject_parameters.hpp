#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SimObject_SimObject

#include "Basic.hpp"


namespace SDK::Params
{

// Function SimObject_SimObject.SimObject.destroyObject
// 0x0010 (0x0010 - 0x0000)
struct SimObject_DestroyObject final 
{
public:
	class UEntityComponent*                       __verse_0x4ED5ED1D_component;                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(SimObject_DestroyObject) == 0x000008, "Wrong alinment on SimObject_DestroyObject");
static_assert(sizeof(SimObject_DestroyObject) == 0x000010, "Wrong size on SimObject_DestroyObject");
static_assert(offsetof(SimObject_DestroyObject, __verse_0x4ED5ED1D_component) == 0x000000, "Member 'SimObject_DestroyObject::__verse_0x4ED5ED1D_component' has a wrong offset!");

// Function SimObject_SimObject.SimObject.getComponentOfTypeC
// 0x0018 (0x0018 - 0x0000)
struct SimObject_GetComponentOfTypeC final 
{
public:
	class UEntityComponent*                       __verse_0x4ED5ED1D_component;                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x0F99A7FE_type;                           // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEntityComponent*                       RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetComponentOfTypeC) == 0x000008, "Wrong alinment on SimObject_GetComponentOfTypeC");
static_assert(sizeof(SimObject_GetComponentOfTypeC) == 0x000018, "Wrong size on SimObject_GetComponentOfTypeC");
static_assert(offsetof(SimObject_GetComponentOfTypeC, __verse_0x4ED5ED1D_component) == 0x000000, "Member 'SimObject_GetComponentOfTypeC::__verse_0x4ED5ED1D_component' has a wrong offset!");
static_assert(offsetof(SimObject_GetComponentOfTypeC, __verse_0x0F99A7FE_type) == 0x000008, "Member 'SimObject_GetComponentOfTypeC::__verse_0x0F99A7FE_type' has a wrong offset!");
static_assert(offsetof(SimObject_GetComponentOfTypeC, RetVal) == 0x000010, "Member 'SimObject_GetComponentOfTypeC::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.spawnA
// 0x0028 (0x0028 - 0x0000)
struct SimObject_SpawnA final 
{
public:
	class UObject*                                __verse_0x9866B8E7_contextObject;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTransform*                             __verse_0x9801F364_transform;                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 __verse_0x45A29901_name;                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class USimObject*                             RetVal;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_SpawnA) == 0x000008, "Wrong alinment on SimObject_SpawnA");
static_assert(sizeof(SimObject_SpawnA) == 0x000028, "Wrong size on SimObject_SpawnA");
static_assert(offsetof(SimObject_SpawnA, __verse_0x9866B8E7_contextObject) == 0x000000, "Member 'SimObject_SpawnA::__verse_0x9866B8E7_contextObject' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnA, __verse_0x9801F364_transform) == 0x000008, "Member 'SimObject_SpawnA::__verse_0x9801F364_transform' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnA, __verse_0x45A29901_name) == 0x000010, "Member 'SimObject_SpawnA::__verse_0x45A29901_name' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnA, RetVal) == 0x000020, "Member 'SimObject_SpawnA::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.spawnB
// 0x0038 (0x0038 - 0x0000)
struct SimObject_SpawnB final 
{
public:
	class UObject*                                __verse_0x9866B8E7_contextObject;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector3*                               __verse_0x7AF6BB5D_position;                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector3*                               __verse_0xAA1ABDC9_rotation;                       // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector3*                               __verse_0xA8267C47_scale;                          // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 __verse_0x45A29901_name;                           // 0x0020(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class USimObject*                             RetVal;                                            // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_SpawnB) == 0x000008, "Wrong alinment on SimObject_SpawnB");
static_assert(sizeof(SimObject_SpawnB) == 0x000038, "Wrong size on SimObject_SpawnB");
static_assert(offsetof(SimObject_SpawnB, __verse_0x9866B8E7_contextObject) == 0x000000, "Member 'SimObject_SpawnB::__verse_0x9866B8E7_contextObject' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnB, __verse_0x7AF6BB5D_position) == 0x000008, "Member 'SimObject_SpawnB::__verse_0x7AF6BB5D_position' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnB, __verse_0xAA1ABDC9_rotation) == 0x000010, "Member 'SimObject_SpawnB::__verse_0xAA1ABDC9_rotation' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnB, __verse_0xA8267C47_scale) == 0x000018, "Member 'SimObject_SpawnB::__verse_0xA8267C47_scale' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnB, __verse_0x45A29901_name) == 0x000020, "Member 'SimObject_SpawnB::__verse_0x45A29901_name' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnB, RetVal) == 0x000030, "Member 'SimObject_SpawnB::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.spawnC
// 0x0028 (0x0028 - 0x0000)
struct SimObject_SpawnC final 
{
public:
	class UObject*                                __verse_0x9866B8E7_contextObject;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVector3*                               __verse_0x7AF6BB5D_position;                       // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 __verse_0x45A29901_name;                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class USimObject*                             RetVal;                                            // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_SpawnC) == 0x000008, "Wrong alinment on SimObject_SpawnC");
static_assert(sizeof(SimObject_SpawnC) == 0x000028, "Wrong size on SimObject_SpawnC");
static_assert(offsetof(SimObject_SpawnC, __verse_0x9866B8E7_contextObject) == 0x000000, "Member 'SimObject_SpawnC::__verse_0x9866B8E7_contextObject' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnC, __verse_0x7AF6BB5D_position) == 0x000008, "Member 'SimObject_SpawnC::__verse_0x7AF6BB5D_position' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnC, __verse_0x45A29901_name) == 0x000010, "Member 'SimObject_SpawnC::__verse_0x45A29901_name' has a wrong offset!");
static_assert(offsetof(SimObject_SpawnC, RetVal) == 0x000020, "Member 'SimObject_SpawnC::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.AddComponent
// 0x0010 (0x0010 - 0x0000)
struct SimObject_AddComponent final 
{
public:
	class UClass*                                 __verse_0x159E825F_componentType;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEntityComponent*                       RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_AddComponent) == 0x000008, "Wrong alinment on SimObject_AddComponent");
static_assert(sizeof(SimObject_AddComponent) == 0x000010, "Wrong size on SimObject_AddComponent");
static_assert(offsetof(SimObject_AddComponent, __verse_0x159E825F_componentType) == 0x000000, "Member 'SimObject_AddComponent::__verse_0x159E825F_componentType' has a wrong offset!");
static_assert(offsetof(SimObject_AddComponent, RetVal) == 0x000008, "Member 'SimObject_AddComponent::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.Destroy
// 0x0001 (0x0001 - 0x0000)
struct SimObject_Destroy final 
{
public:
	uint8                                         RetVal : 1;                                        // 0x0000(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(SimObject_Destroy) == 0x000001, "Wrong alinment on SimObject_Destroy");
static_assert(sizeof(SimObject_Destroy) == 0x000001, "Wrong size on SimObject_Destroy");

// Function SimObject_SimObject.SimObject.getAllComponentsOfType
// 0x0018 (0x0018 - 0x0000)
struct SimObject_GetAllComponentsOfType final 
{
public:
	class UClass*                                 __verse_0x159E825F_componentType;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UEntityComponent*>               RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetAllComponentsOfType) == 0x000008, "Wrong alinment on SimObject_GetAllComponentsOfType");
static_assert(sizeof(SimObject_GetAllComponentsOfType) == 0x000018, "Wrong size on SimObject_GetAllComponentsOfType");
static_assert(offsetof(SimObject_GetAllComponentsOfType, __verse_0x159E825F_componentType) == 0x000000, "Member 'SimObject_GetAllComponentsOfType::__verse_0x159E825F_componentType' has a wrong offset!");
static_assert(offsetof(SimObject_GetAllComponentsOfType, RetVal) == 0x000008, "Member 'SimObject_GetAllComponentsOfType::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.getComponentOfType
// 0x0010 (0x0010 - 0x0000)
struct SimObject_GetComponentOfType final 
{
public:
	class UClass*                                 __verse_0x159E825F_componentType;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEntityComponent*                       RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetComponentOfType) == 0x000008, "Wrong alinment on SimObject_GetComponentOfType");
static_assert(sizeof(SimObject_GetComponentOfType) == 0x000010, "Wrong size on SimObject_GetComponentOfType");
static_assert(offsetof(SimObject_GetComponentOfType, __verse_0x159E825F_componentType) == 0x000000, "Member 'SimObject_GetComponentOfType::__verse_0x159E825F_componentType' has a wrong offset!");
static_assert(offsetof(SimObject_GetComponentOfType, RetVal) == 0x000008, "Member 'SimObject_GetComponentOfType::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.GetFullName
// 0x0010 (0x0010 - 0x0000)
struct SimObject_GetFullName final 
{
public:
	class FString                                 RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetFullName) == 0x000008, "Wrong alinment on SimObject_GetFullName");
static_assert(sizeof(SimObject_GetFullName) == 0x000010, "Wrong size on SimObject_GetFullName");
static_assert(offsetof(SimObject_GetFullName, RetVal) == 0x000000, "Member 'SimObject_GetFullName::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.GetName
// 0x0010 (0x0010 - 0x0000)
struct SimObject_GetName final 
{
public:
	class FString                                 RetVal;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetName) == 0x000008, "Wrong alinment on SimObject_GetName");
static_assert(sizeof(SimObject_GetName) == 0x000010, "Wrong size on SimObject_GetName");
static_assert(offsetof(SimObject_GetName, RetVal) == 0x000000, "Member 'SimObject_GetName::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.getOrCreateComponentOfType
// 0x0010 (0x0010 - 0x0000)
struct SimObject_GetOrCreateComponentOfType final 
{
public:
	class UClass*                                 __verse_0x159E825F_componentType;                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEntityComponent*                       RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_GetOrCreateComponentOfType) == 0x000008, "Wrong alinment on SimObject_GetOrCreateComponentOfType");
static_assert(sizeof(SimObject_GetOrCreateComponentOfType) == 0x000010, "Wrong size on SimObject_GetOrCreateComponentOfType");
static_assert(offsetof(SimObject_GetOrCreateComponentOfType, __verse_0x159E825F_componentType) == 0x000000, "Member 'SimObject_GetOrCreateComponentOfType::__verse_0x159E825F_componentType' has a wrong offset!");
static_assert(offsetof(SimObject_GetOrCreateComponentOfType, RetVal) == 0x000008, "Member 'SimObject_GetOrCreateComponentOfType::RetVal' has a wrong offset!");

// Function SimObject_SimObject.SimObject.removeComponent
// 0x0010 (0x0010 - 0x0000)
struct SimObject_RemoveComponent final 
{
public:
	class UEntityComponent*                       __verse_0x4ED5ED1D_component;                      // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(SimObject_RemoveComponent) == 0x000008, "Wrong alinment on SimObject_RemoveComponent");
static_assert(sizeof(SimObject_RemoveComponent) == 0x000010, "Wrong size on SimObject_RemoveComponent");
static_assert(offsetof(SimObject_RemoveComponent, __verse_0x4ED5ED1D_component) == 0x000000, "Member 'SimObject_RemoveComponent::__verse_0x4ED5ED1D_component' has a wrong offset!");

// Function SimObject_SimObject.SimObject.setupComponents
// 0x0050 (0x0050 - 0x0000)
struct SimObject_SetupComponents final 
{
public:
	TArray<class UClass*>                         __verse_0x452A7A62_requiredComponentClasses;       // 0x0000(0x0010)(Parm, HasGetValueTypeHash)
	TArray<class UClass*>                         __verse_0x1A7F8FD8_addComponentClasses;            // 0x0010(0x0010)(Parm, HasGetValueTypeHash)
	FOptionalProperty_                            RetVal;                                            // 0x0020(0x0002)(Parm, OutParm, ReturnParm)
	uint8                                         Pad_7A4D[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         _TEMP_0;                                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _TEMP_1;                                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4E[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 __verse_0x9423708A_componentClass_1;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEntityComponent*                       _TEMP_2;                                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _TEMP_3;                                           // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         _TEMP_4;                                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 __verse_0x9423708A_componentClass_4;               // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SimObject_SetupComponents) == 0x000008, "Wrong alinment on SimObject_SetupComponents");
static_assert(sizeof(SimObject_SetupComponents) == 0x000050, "Wrong size on SimObject_SetupComponents");
static_assert(offsetof(SimObject_SetupComponents, __verse_0x452A7A62_requiredComponentClasses) == 0x000000, "Member 'SimObject_SetupComponents::__verse_0x452A7A62_requiredComponentClasses' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, __verse_0x1A7F8FD8_addComponentClasses) == 0x000010, "Member 'SimObject_SetupComponents::__verse_0x1A7F8FD8_addComponentClasses' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, RetVal) == 0x000020, "Member 'SimObject_SetupComponents::RetVal' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, _TEMP_0) == 0x000024, "Member 'SimObject_SetupComponents::_TEMP_0' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, _TEMP_1) == 0x000028, "Member 'SimObject_SetupComponents::_TEMP_1' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, __verse_0x9423708A_componentClass_1) == 0x000030, "Member 'SimObject_SetupComponents::__verse_0x9423708A_componentClass_1' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, _TEMP_2) == 0x000038, "Member 'SimObject_SetupComponents::_TEMP_2' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, _TEMP_3) == 0x000040, "Member 'SimObject_SetupComponents::_TEMP_3' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, _TEMP_4) == 0x000044, "Member 'SimObject_SetupComponents::_TEMP_4' has a wrong offset!");
static_assert(offsetof(SimObject_SetupComponents, __verse_0x9423708A_componentClass_4) == 0x000048, "Member 'SimObject_SetupComponents::__verse_0x9423708A_componentClass_4' has a wrong offset!");

}

