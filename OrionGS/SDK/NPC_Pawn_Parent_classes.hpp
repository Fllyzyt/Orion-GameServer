#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_Pawn_Parent

#include "Basic.hpp"

#include "Enum_NPC_AlertLevel_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Struct_NPC_TargetSlots_structs.hpp"
#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EnemyPawn_Parent_Deimos_classes.hpp"
#include "Enum_NPC_TargetSlots_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass NPC_Pawn_Parent.NPC_Pawn_Parent_C
// 0x0300 (0x2960 - 0x2660)
class ANPC_Pawn_Parent_C : public AEnemyPawn_Parent_Deimos_C
{
public:
	uint8                                         Pad_5D2B[0x4];                                     // 0x2654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_NPC_Pawn_Parent_C;                  // 0x2658(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        MovementAudioComponent;                            // 0x2660(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNPC_VoiceComponent_C*                  NPC_VoiceComponent;                                // 0x2668(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        VOAudioComponent;                                  // 0x2670(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortWidgetComponent*                   NPCStatusWidget;                                   // 0x2678(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_NPC_RecentlyDamaged;                            // 0x2680(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_AlertLevel                           NPC_AlertLevel;                                    // 0x2688(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	Enum_NPC_AlertLevel                           NPC_AlertLevelPrevious;                            // 0x2689(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2C[0x6];                                     // 0x268A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<Enum_NPC_AlertLevel, struct FGameplayTag> NPC_AlertLevelToTagMap;                            // 0x2690(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         NPC_MaxDistanceFromDamageInstigatorToDrawHealthBar; // 0x26E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NPC_HealthBarHideTimeAfterDeath;                   // 0x26E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NPC_StatusWidgetHealthBarDisabled;                 // 0x26E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D2D[0x3];                                     // 0x26E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           GameplayCue_PickupGrabbed;                         // 0x26EC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	EFortRarity                                   NPC_BestLootRarityInInventory;                     // 0x26F4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2E[0x3];                                     // 0x26F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  GrantStartingItemsAbilityTC;                       // 0x26F8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NPC_DebugPawn;                                     // 0x2718(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NPC_ShowInventoryRarityVisuals;                    // 0x2719(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D2F[0x2];                                     // 0x271A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InventoryGlowDelay;                                // 0x271C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         NPC_NumberOfInventoryItemsToDeliverHF;             // 0x2720(0x0028)(Edit, BlueprintVisible)
	bool                                          NPC_SpawnInvisible;                                // 0x2748(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D30[0x7];                                     // 0x2749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  TC_NPC_SpawnAbilityTag;                            // 0x2750(0x0020)(Edit, BlueprintVisible)
	bool                                          NPC_IsSpawning;                                    // 0x2770(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D31[0x3];                                     // 0x2771(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         NPC_OriginalGravityScale;                          // 0x2774(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NPC_OriginalRotationRate;                          // 0x2778(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          NPC_HasPawnGoal;                                   // 0x2784(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D32[0x3];                                     // 0x2785(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NPC_PawnGoalActor;                                 // 0x2788(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         NPC_NumberOfInventoryItemsToConsumeBeforeFullHF;   // 0x2790(0x0028)(Edit, BlueprintVisible)
	bool                                          NPC_PawnIsDestroyingBuildingForNavigation;         // 0x27B8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D33[0x7];                                     // 0x27B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MaxIdleVODelay;                                    // 0x27C0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MinIdleVODelay;                                    // 0x27E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         NPC_DeathDropLootDelay;                            // 0x2810(0x0028)(Edit, BlueprintVisible)
	class FName                                   NPC_DeathDropLootTierGroupName;                    // 0x2838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  NPC_DeathDropLootRequiredDamageTags;               // 0x2840(0x0020)(Edit, BlueprintVisible)
	struct FGameplayTagContainer                  NPC_DeathDropLootForbiddenDamageTags;              // 0x2860(0x0020)(Edit, BlueprintVisible)
	bool                                          NPC_HasItemInInventory;                            // 0x2880(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D34[0x3];                                     // 0x2881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           VoiceTag_FullAlertIdle;                            // 0x2884(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag_Idle;                                     // 0x288C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag_ReturnToIdle;                             // 0x2894(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag_LostTarget;                               // 0x289C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag_Suspicious;                               // 0x28A4(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           VoiceTag_FullAlert;                                // 0x28AC(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D35[0x4];                                     // 0x28B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FStruct_NPC_TargetSlots>        NPC_TargetSlotsHF;                                 // 0x28B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          NPC_DamageCanCancelIntroPhase;                     // 0x28C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D36[0x7];                                     // 0x28C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagQuery                      TQ_NPC_DamageTagsThatCanCancelIntroPhase;          // 0x28D0(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 GE_NPC_IntroPhaseBehaviorCooldown;                 // 0x2918(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  TC_IntroBehaviorActive;                            // 0x2920(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Debug_NPC_AlertLevelForced;                        // 0x2940(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D37[0x7];                                     // 0x2941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         SoundLibs;                                         // 0x2948(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          NPC_PawnCanInteract;                               // 0x2958(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_NPC_Pawn_Parent(int32 EntryPoint, bool CallFunc_IsValid_ReturnValue, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget, bool K2Node_DynamicCast_bSuccess, class UFoleySoundSubsystem* CallFunc_GetWorldSubsystem_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void(class AFortAIPawn* AI, class AFortPlayerController* InteractingPlayerController)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_1, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_1, bool K2Node_DynamicCast_bSuccess_1, float K2Node_Event_Damage_3, struct FGameplayTagContainer& K2Node_Event_DamageTags_3, const struct FVector& K2Node_Event_Momentum_3, struct FHitResult& K2Node_Event_HitInfo_3, class AController* K2Node_Event_InstigatedBy_3, class AActor* K2Node_Event_DamageCauser_3, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_3, float CallFunc_GetHealth_ReturnValue, float CallFunc_GetMaxHealth_ReturnValue, float K2Node_Event_Damage_2, struct FGameplayTagContainer& K2Node_Event_DamageTags_2, const struct FVector& K2Node_Event_Momentum_2, struct FHitResult& K2Node_Event_HitInfo_2, class AFortPawn* K2Node_Event_InstigatedBy_2, class AActor* K2Node_Event_DamageCauser_2, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_2, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_GetDistanceBetweenActors_Distance, bool CallFunc_Less_FloatFloat_ReturnValue, TDelegate<void(bool bVisible)> K2Node_CreateDelegate_OutputDelegate_1, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue_4, EEndPlayReason K2Node_Event_EndPlayReason, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_2, Enum_NPC_AlertLevel CallFunc_NPC_GetAlertLevelInfo_AlertLevel, const struct FGameplayTag& CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag, bool CallFunc_NPC_GetAlertLevelInfo_ValidDataFound, bool K2Node_CustomEvent_bVisible, bool CallFunc_IsValid_ReturnValue_6, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_2, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_2, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsVisible_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_3, class AActor* K2Node_CustomEvent_Vehicle, const struct FVector& K2Node_CustomEvent_Velocity, EFortRarity CallFunc_NPC_SetBestLootRarityInInventory_NPC_BestLootRarityInInventory, bool CallFunc_Not_PreBool_ReturnValue, float K2Node_Event_Damage_1, struct FGameplayTagContainer& K2Node_Event_DamageTags_1, const struct FVector& K2Node_Event_Momentum_1, struct FHitResult& K2Node_Event_HitInfo_1, class AFortPawn* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_7, bool CallFunc_Greater_FloatFloat_ReturnValue, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue, class AController* K2Node_Event_NewController, const struct FGameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue, Enum_NPC_AlertLevel K2Node_CustomEvent_NPC_AlertLevel_1, bool CallFunc_NotEqual_ByteByte_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, Enum_NPC_AlertLevel K2Node_CustomEvent_NPC_AlertLevel, float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_4, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_NPC_TryToDropLootOnDeath_CanDropLoot, const struct FGameplayTag& K2Node_Select_Default, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, Enum_NPC_AlertLevel K2Node_CustomEvent_NewNPC_AlertLevel, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_HasAuthority_ReturnValue_5, bool CallFunc_HasAuthority_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_8, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_3, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_3, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_IsValid_ReturnValue_9, bool CallFunc_TryActivateAbilitiesByTag_ReturnValue_1, class AFortAIPawn* K2Node_CustomEvent_AI, class AFortPlayerController* K2Node_CustomEvent_InteractingPlayerController, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, class AActor* K2Node_CustomEvent_AIPawn, class AFortPlayerPawn* K2Node_CustomEvent_InteractingPlayerPawn, bool CallFunc_IsValid_ReturnValue_10, bool CallFunc_IsValid_ReturnValue_11, class UUserWidget* CallFunc_GetUserWidgetObject_ReturnValue_4, class UNPCStatusWidget_C* K2Node_DynamicCast_AsNPCStatus_Widget_4, bool K2Node_DynamicCast_bSuccess_4);
	void On_NPC_PawnInteractedWith(class AActor* AIPawn, class AFortPlayerPawn* InteractingPlayerPawn);
	void NPC_Pawn_Interact(class AFortAIPawn* AI, class AFortPlayerController* InteractingPlayerController);
	void HandleInteracts();
	void Debug_ForceAlertLevel_Aggressive();
	void Debug_ForceAlertLevel_Alerted();
	void Debug_ForceAlertLevel_NA();
	void Debug_ForceAlertLevel_Unaware();
	void Debug_ForceAlertLevel_Invalid();
	void Debug_AlertLevel_ClearDebug();
	void Debug_AlertLevel_ForceLevel(Enum_NPC_AlertLevel NewNPC_AlertLevel);
	void NPCDisableHealthBars();
	void NPCEnableHealthBars();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void TriggerIdleVO();
	void NPC_InitializeIdleVO();
	void NPCAlertLevelChanged(Enum_NPC_AlertLevel Param_NPC_AlertLevel);
	void RequestUpdateNPCAlertLevel(Enum_NPC_AlertLevel Param_NPC_AlertLevel);
	void ReceivePossessed(class AController* NewController);
	void NPC_SetupHealthBarOnDeath();
	void OnDeathPlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void TestLoot();
	void NPC_ParentLaunchVehicle(class AActor* Vehicle, const struct FVector& Velocity);
	void WidgetVisibilityChanged(bool bVisible);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void GrantStartingItems();
	void ReceiveBeginPlay();
	void OnDamagePlayEffects(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AFortPawn* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	bool ShouldUpdateSkeletalMesh();
	void NPC_ApplyRecentlyDamagedTag(class UClass* RecentlyDamagedOverride, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, bool CallFunc_IsValidClass_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue_1);
	void NPC_GetAlertLevelInfo(Enum_NPC_AlertLevel* AlertLevel, struct FGameplayTag* AlertLevelTag, bool* ValidDataFound, const struct FGameplayTag& CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue);
	void OnRep_NPC_AlertLevel(bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Conv_BoolToInt_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_HasAuthority_ReturnValue_1, class UFortGameplayDataTrackerComponentManager* CallFunc_GetCurrent_ReturnValue, Enum_NPC_AlertLevel CallFunc_NPC_GetAlertLevelInfo_AlertLevel, const struct FGameplayTag& CallFunc_NPC_GetAlertLevelInfo_AlertLevelTag, bool CallFunc_NPC_GetAlertLevelInfo_ValidDataFound, bool CallFunc_IsValid_ReturnValue, class FName CallFunc_GetTagName_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, class FName CallFunc_Conv_StringToName_ReturnValue, const class FString& CallFunc_BuildString_Name_ReturnValue, const class FString& CallFunc_BuildString_Name_ReturnValue_1);
	void NPC_SetBestLootRarityInInventory(EFortRarity* Param_NPC_BestLootRarityInInventory, EFortRarity NPC_BestLootRarityInventoryFound, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_Greater_ByteByte_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput, TArray<class UFortWorldItem*>& CallFunc_GetItemsFromInventoryOwner_Items, class FName CallFunc_GetEnumeratorName_ReturnValue, class UFortWorldItem* CallFunc_Array_Get_Item, const class FString& CallFunc_BuildString_Name_ReturnValue, class FText CallFunc_GetDisplayName_ReturnValue, const class FString& CallFunc_Conv_TextToString_ReturnValue, EFortRarity CallFunc_GetRarity_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, class FName CallFunc_GetEnumeratorName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Conv_NameToString_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4, bool CallFunc_Greater_ByteByte_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_5, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue);
	void NPC_GetInventoryInformation(bool* HasItemInInventory, int32* TotalNumberOfInventoryItems, int32* LastInventoryItemIndex, bool* HasEnoughItemsToDeliver, bool* ConsumedEnoughItemsToBeConsideredFull, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool_1, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded_1, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat_1, bool CallFunc_Greater_IntInt_ReturnValue, const class FString& CallFunc_BuildString_Bool_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GetItemsFromInventoryOwner_InventoryOwner_CastInput, TArray<class UFortWorldItem*>& CallFunc_GetItemsFromInventoryOwner_Items, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Array_LastIndex_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, const class FString& CallFunc_BuildString_Bool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_1, const class FString& CallFunc_BuildString_Bool_ReturnValue_2, const class FString& CallFunc_BuildString_Bool_ReturnValue_3);
	void NPC_PawnDebugMessage(const class FString& String, bool OnlyWhenDebug, const class FString& CallFunc_Concat_StrStr_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const class FString& CallFunc_GetObjectName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_3, const class FString& CallFunc_Concat_StrStr_ReturnValue_4);
	void NPC_SendGameplayCuePickupGrabbed(bool CallFunc_IsDedicatedServer_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, const struct FGameplayTag& CallFunc_MakeLiteralGameplayTag_ReturnValue, bool CallFunc_IsGameplayTagValid_ReturnValue);
	void OnRep_NPC_BestLootRarityInInventory(bool CallFunc_IsDedicatedServer_ReturnValue);
	void NPC_PickupGrabbed(class AFortPickup* FortPickupGrabbed);
	void NPC_PickupDropped(class AFortPickup* FortPickupDropped);
	void NPC_ScalableFloatIsValid(struct FScalableFloat& ScalableFloat, bool* Valid, bool CallFunc_IsValid_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_BooleanAND_ReturnValue);
	void NPC_GetScalableFloatHotfixValue(struct FScalableFloat& ScalableFloatHotfix, float AtLevel, bool* AsBool, int32* AsIntRounded, float* AsFloat, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_Round_ReturnValue, int32 CallFunc_Round_ReturnValue_1, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue_1, bool CallFunc_NPC_ScalableFloatIsValid_Valid);
	void NPC_SetReturnGatheredLootToBlackboard(class FName CallFunc_MakeLiteralName_ReturnValue, bool CallFunc_NPC_GetInventoryInformation_HasItemInInventory, int32 CallFunc_NPC_GetInventoryInformation_TotalNumberOfInventoryItems, int32 CallFunc_NPC_GetInventoryInformation_LastInventoryItemIndex, bool CallFunc_NPC_GetInventoryInformation_HasEnoughItemsToDeliver, bool CallFunc_NPC_GetInventoryInformation_ConsumedEnoughItemsToBeConsideredFull, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue_1);
	void NPC_ResetOriginalGravityScale();
	void NPC_ResetOriginalRotationRate();
	void NPC_SetLootCollectionPhaseCompleteToBlackboard(bool LootCollectionPhaseComplete, class FName CallFunc_MakeLiteralName_ReturnValue, class UBlackboardComponent* CallFunc_GetBlackboard_ReturnValue, bool CallFunc_GetValueAsBool_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue);
	void NPC_ApplyGameplayEffectWithMMRScaling(class AActor* Actor, class UClass* GE_Class, class AActor* ApplyGeToThisActor, bool Temp_bool_Option_B___If_false__use_Option_A_Variable, bool CallFunc_IsValid_ReturnValue, bool Temp_bool_Variable, class AActor* K2Node_Select_Default);
	void NPC_TryToDropLootOnDeath(const struct FGameplayTagContainer& DamageTags, bool* CanDropLoot, bool CanDropLootBool, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, const struct FGameplayTagContainer& CallFunc_MakeLiteralGameplayTagContainer_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue, bool CallFunc_EqualEqual_GameplayTagContainer_ReturnValue, bool CallFunc_EqualEqual_GameplayTagContainer_ReturnValue_1, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue, bool CallFunc_NotEqual_GameplayTagContainer_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasAnyTags_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, TArray<struct FFortItemEntry>& CallFunc_PickLootDrops_OutLootToDrop, bool CallFunc_PickLootDrops_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, const struct FFortItemEntry& CallFunc_Array_Get_Item, bool CallFunc_BooleanAND_ReturnValue_2, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_3, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemEntryToInventoryOwner_InventoryOwner_CastInput, bool CallFunc_GiveItemEntryToInventoryOwner_ReturnValue);
	void NPC_HandleAlertLevelVoice(Enum_NPC_AlertLevel Temp_byte_Variable, struct FGameplayTag& Temp_struct_Variable, struct FGameplayTag& Temp_struct_Variable_1, struct FGameplayTag& Temp_struct_Variable_2, bool K2Node_SwitchEnum_CmpSuccess, struct FGameplayTag& K2Node_Select_Default);
	void NPC_CheckIsInSafeZone(bool* TestSucceeded, bool* IsInSafeZone, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class AGameStateBase* CallFunc_GetGameState_ReturnValue, class AAthena_GameState_C* K2Node_DynamicCast_AsAthena_Game_State, bool K2Node_DynamicCast_bSuccess, class AFortSafeZoneIndicator* CallFunc_GetSafeZoneIndicator_ReturnValue, const struct FVector& CallFunc_GetSafeZoneCenter_ReturnValue, bool CallFunc_IsValid_ReturnValue, float CallFunc_Vector_DistanceSquared_ReturnValue, float CallFunc_GetSafeZoneRadius_ReturnValue, float CallFunc_Square_ReturnValue, bool CallFunc_Less_FloatFloat_ReturnValue);
	void NPC_TargetSlotInfo(Enum_NPC_TargetSlots TargetSlotType, class AActor* TargetWeWantToSlotOnto, int32* TargetSlotCount, int32* TargetSlotMax, int32* NPC_TargetSlotsRequired, bool* TargetSlotsMaxOrMore, bool* TargetSlotCountIsExactlyMax, bool* NPC_HasSpaceToSlotOnTarget, Enum_NPC_TargetSlots* TargetSlotTypeOut, class UClass** TargetSlotCountingGE, struct FScalableFloat* AI_TargetSlotSizeHF, struct FScalableFloat* AI_TargetSlotDurationHF, class UClass** TargetSlotOverrideGE, class UClass** TargetSlotOwnerGE, class UClass** TargetSlotCountingMaxedGE, class UClass* NPC_TargetSlotCountingMaxedGE, class UClass* NPC_TargetSlotOwnerGE, class UClass* NPC_TargetSlotOverrideGE, const struct FScalableFloat& NPC_AI_TargetSlotDurationHF, const struct FScalableFloat& NPC_AI_TargetSlotSizeHF, class UClass* NPC_TargetSlotCountingGE, bool Temp_bool_True_if_break_was_hit_Variable, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, int32 Temp_int_Array_Index_Variable, bool CallFunc_NPC_GetScalableFloatHotfixValue_AsBool, int32 CallFunc_NPC_GetScalableFloatHotfixValue_AsIntRounded, float CallFunc_NPC_GetScalableFloatHotfixValue_AsFloat, TArray<class UClass*>& K2Node_MakeArray_Array, bool CallFunc_IsValidClass_ReturnValue, int32 CallFunc_GetTotalGameplayEffectCount_FinalEffectCount, int32 Temp_int_Loop_Counter_Variable, const struct FStruct_NPC_TargetSlots& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_MakeLiteralInt_ReturnValue, int32 CallFunc_Subtract_IntInt_ReturnValue, bool CallFunc_GreaterEqual_IntInt_ReturnValue, bool CallFunc_LessEqual_IntInt_ReturnValue, bool CallFunc_EqualEqual_IntInt_ReturnValue);
	void NPC_TargetSlotIsUsingOverride(Enum_NPC_TargetSlots TargetSlotType, class AActor* TargetWeWantToSlotOnto, bool* Override, class UClass* NPC_TargetSlotOverrideGE, int32 CallFunc_NPC_TargetSlotInfo_TargetSlotCount, int32 CallFunc_NPC_TargetSlotInfo_TargetSlotMax, int32 CallFunc_NPC_TargetSlotInfo_NPC_TargetSlotsRequired, bool CallFunc_NPC_TargetSlotInfo_TargetSlotsMaxOrMore, bool CallFunc_NPC_TargetSlotInfo_TargetSlotCountIsExactlyMax, bool CallFunc_NPC_TargetSlotInfo_NPC_HasSpaceToSlotOnTarget, Enum_NPC_TargetSlots CallFunc_NPC_TargetSlotInfo_TargetSlotTypeOut, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotCountingGE, const struct FScalableFloat& CallFunc_NPC_TargetSlotInfo_AI_TargetSlotSizeHF, const struct FScalableFloat& CallFunc_NPC_TargetSlotInfo_AI_TargetSlotDurationHF, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotOverrideGE, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotOwnerGE, class UClass* CallFunc_NPC_TargetSlotInfo_TargetSlotCountingMaxedGE, bool CallFunc_IsValidClass_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class UClass*>& K2Node_MakeArray_Array, int32 CallFunc_GetTotalGameplayEffectCount_FinalEffectCount, bool CallFunc_NotEqual_IntInt_ReturnValue);
	void NPC_DamageAttemptDisableIntroPhaseBehavior(const struct FGameplayTagContainer& DamageTags, bool CallFunc_HasAuthority_ReturnValue, bool CallFunc_DoesContainerMatchTagQuery_ReturnValue, bool CallFunc_IsTagQueryEmpty_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue);
	void NPC_DisableIntroPhaseBehavior(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValidClass_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, int32 CallFunc_RemoveActiveEffectsWithAppliedTags_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"NPC_Pawn_Parent_C">();
	}
	static class ANPC_Pawn_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ANPC_Pawn_Parent_C>();
	}
};
static_assert(alignof(ANPC_Pawn_Parent_C) == 0x000010, "Wrong alinment on ANPC_Pawn_Parent_C");
static_assert(sizeof(ANPC_Pawn_Parent_C) == 0x002960, "Wrong size on ANPC_Pawn_Parent_C");
static_assert(offsetof(ANPC_Pawn_Parent_C, UberGraphFrame_NPC_Pawn_Parent_C) == 0x002658, "Member 'ANPC_Pawn_Parent_C::UberGraphFrame_NPC_Pawn_Parent_C' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, MovementAudioComponent) == 0x002660, "Member 'ANPC_Pawn_Parent_C::MovementAudioComponent' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_VoiceComponent) == 0x002668, "Member 'ANPC_Pawn_Parent_C::NPC_VoiceComponent' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VOAudioComponent) == 0x002670, "Member 'ANPC_Pawn_Parent_C::VOAudioComponent' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPCStatusWidget) == 0x002678, "Member 'ANPC_Pawn_Parent_C::NPCStatusWidget' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, GE_NPC_RecentlyDamaged) == 0x002680, "Member 'ANPC_Pawn_Parent_C::GE_NPC_RecentlyDamaged' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_AlertLevel) == 0x002688, "Member 'ANPC_Pawn_Parent_C::NPC_AlertLevel' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_AlertLevelPrevious) == 0x002689, "Member 'ANPC_Pawn_Parent_C::NPC_AlertLevelPrevious' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_AlertLevelToTagMap) == 0x002690, "Member 'ANPC_Pawn_Parent_C::NPC_AlertLevelToTagMap' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_MaxDistanceFromDamageInstigatorToDrawHealthBar) == 0x0026E0, "Member 'ANPC_Pawn_Parent_C::NPC_MaxDistanceFromDamageInstigatorToDrawHealthBar' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_HealthBarHideTimeAfterDeath) == 0x0026E4, "Member 'ANPC_Pawn_Parent_C::NPC_HealthBarHideTimeAfterDeath' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_StatusWidgetHealthBarDisabled) == 0x0026E8, "Member 'ANPC_Pawn_Parent_C::NPC_StatusWidgetHealthBarDisabled' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, GameplayCue_PickupGrabbed) == 0x0026EC, "Member 'ANPC_Pawn_Parent_C::GameplayCue_PickupGrabbed' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_BestLootRarityInInventory) == 0x0026F4, "Member 'ANPC_Pawn_Parent_C::NPC_BestLootRarityInInventory' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, GrantStartingItemsAbilityTC) == 0x0026F8, "Member 'ANPC_Pawn_Parent_C::GrantStartingItemsAbilityTC' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DebugPawn) == 0x002718, "Member 'ANPC_Pawn_Parent_C::NPC_DebugPawn' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_ShowInventoryRarityVisuals) == 0x002719, "Member 'ANPC_Pawn_Parent_C::NPC_ShowInventoryRarityVisuals' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, InventoryGlowDelay) == 0x00271C, "Member 'ANPC_Pawn_Parent_C::InventoryGlowDelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_NumberOfInventoryItemsToDeliverHF) == 0x002720, "Member 'ANPC_Pawn_Parent_C::NPC_NumberOfInventoryItemsToDeliverHF' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_SpawnInvisible) == 0x002748, "Member 'ANPC_Pawn_Parent_C::NPC_SpawnInvisible' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, TC_NPC_SpawnAbilityTag) == 0x002750, "Member 'ANPC_Pawn_Parent_C::TC_NPC_SpawnAbilityTag' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_IsSpawning) == 0x002770, "Member 'ANPC_Pawn_Parent_C::NPC_IsSpawning' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_OriginalGravityScale) == 0x002774, "Member 'ANPC_Pawn_Parent_C::NPC_OriginalGravityScale' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_OriginalRotationRate) == 0x002778, "Member 'ANPC_Pawn_Parent_C::NPC_OriginalRotationRate' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_HasPawnGoal) == 0x002784, "Member 'ANPC_Pawn_Parent_C::NPC_HasPawnGoal' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_PawnGoalActor) == 0x002788, "Member 'ANPC_Pawn_Parent_C::NPC_PawnGoalActor' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_NumberOfInventoryItemsToConsumeBeforeFullHF) == 0x002790, "Member 'ANPC_Pawn_Parent_C::NPC_NumberOfInventoryItemsToConsumeBeforeFullHF' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_PawnIsDestroyingBuildingForNavigation) == 0x0027B8, "Member 'ANPC_Pawn_Parent_C::NPC_PawnIsDestroyingBuildingForNavigation' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, MaxIdleVODelay) == 0x0027C0, "Member 'ANPC_Pawn_Parent_C::MaxIdleVODelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, MinIdleVODelay) == 0x0027E8, "Member 'ANPC_Pawn_Parent_C::MinIdleVODelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DeathDropLootDelay) == 0x002810, "Member 'ANPC_Pawn_Parent_C::NPC_DeathDropLootDelay' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DeathDropLootTierGroupName) == 0x002838, "Member 'ANPC_Pawn_Parent_C::NPC_DeathDropLootTierGroupName' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DeathDropLootRequiredDamageTags) == 0x002840, "Member 'ANPC_Pawn_Parent_C::NPC_DeathDropLootRequiredDamageTags' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DeathDropLootForbiddenDamageTags) == 0x002860, "Member 'ANPC_Pawn_Parent_C::NPC_DeathDropLootForbiddenDamageTags' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_HasItemInInventory) == 0x002880, "Member 'ANPC_Pawn_Parent_C::NPC_HasItemInInventory' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_FullAlertIdle) == 0x002884, "Member 'ANPC_Pawn_Parent_C::VoiceTag_FullAlertIdle' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_Idle) == 0x00288C, "Member 'ANPC_Pawn_Parent_C::VoiceTag_Idle' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_ReturnToIdle) == 0x002894, "Member 'ANPC_Pawn_Parent_C::VoiceTag_ReturnToIdle' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_LostTarget) == 0x00289C, "Member 'ANPC_Pawn_Parent_C::VoiceTag_LostTarget' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_Suspicious) == 0x0028A4, "Member 'ANPC_Pawn_Parent_C::VoiceTag_Suspicious' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, VoiceTag_FullAlert) == 0x0028AC, "Member 'ANPC_Pawn_Parent_C::VoiceTag_FullAlert' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_TargetSlotsHF) == 0x0028B8, "Member 'ANPC_Pawn_Parent_C::NPC_TargetSlotsHF' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_DamageCanCancelIntroPhase) == 0x0028C8, "Member 'ANPC_Pawn_Parent_C::NPC_DamageCanCancelIntroPhase' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, TQ_NPC_DamageTagsThatCanCancelIntroPhase) == 0x0028D0, "Member 'ANPC_Pawn_Parent_C::TQ_NPC_DamageTagsThatCanCancelIntroPhase' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, GE_NPC_IntroPhaseBehaviorCooldown) == 0x002918, "Member 'ANPC_Pawn_Parent_C::GE_NPC_IntroPhaseBehaviorCooldown' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, TC_IntroBehaviorActive) == 0x002920, "Member 'ANPC_Pawn_Parent_C::TC_IntroBehaviorActive' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, Debug_NPC_AlertLevelForced) == 0x002940, "Member 'ANPC_Pawn_Parent_C::Debug_NPC_AlertLevelForced' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, SoundLibs) == 0x002948, "Member 'ANPC_Pawn_Parent_C::SoundLibs' has a wrong offset!");
static_assert(offsetof(ANPC_Pawn_Parent_C, NPC_PawnCanInteract) == 0x002958, "Member 'ANPC_Pawn_Parent_C::NPC_PawnCanInteract' has a wrong offset!");

}

