#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Moonbeam_PowerRatingWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "FortniteUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass Moonbeam_PowerRatingWidget.Moonbeam_PowerRatingWidget_C
// 0x00D0 (0x0380 - 0x02B0)
class UMoonbeam_PowerRatingWidget_C final  : public UFortPlayerPowerRating
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonTextBlock*                       BaseRatingValue;                                   // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       BaseRatingValueMinusLarge;                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BuffedRatingOuterGlow;                             // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHomebaseRatingBar_C*                   HomebaseRatingBar;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Power;                                       // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  ModeTypeSwitcher;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Moonbeam_Power_Back;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           OversizedMode;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PowerIconGlow;                                     // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RatingMinusGlowMinusLarge;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               RatingBar;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RegularMode;                                       // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TeamRatingValue;                                   // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                TeamRatingValueMinusLarge;                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          ShowDualPower;                                     // 0x0328(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowProgress;                                      // 0x0329(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowGlow;                                          // 0x032A(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseLargeStyle;                                     // 0x032B(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseOversizedMode;                                  // 0x032C(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46AB[0x3];                                     // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         InterpDuration;                                    // 0x0330(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46AC[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PowerIncreasedSound;                               // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Power_Rating_Num;                                  // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PowerBackingColor;                                 // 0x0344(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46AD[0x4];                                     // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            FontColor;                                         // 0x0358(0x0028)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_Moonbeam_PowerRatingWidget(int32 EntryPoint, bool CallFunc_HasTeamMembers_ReturnValue, bool Temp_bool_Variable, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, int32 K2Node_Event_BasePowerRating, int32 K2Node_Event_TeamPowerRating, const struct FFormatArgumentData& K2Node_MakeStruct_FormatArgumentData, float CallFunc_Conv_IntToFloat_ReturnValue, TArray<struct FFormatArgumentData>& K2Node_MakeArray_Array, float K2Node_Event_BaseRatingProgress, float K2Node_Event_TeamRatingProgress, class FText CallFunc_Format_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, ESlateVisibility K2Node_Select_Default, bool K2Node_Event_IsDesignTime, ESlateVisibility Temp_byte_Variable_2, bool CallFunc_Greater_FloatFloat_ReturnValue, ESlateVisibility Temp_byte_Variable_3, bool Temp_bool_Variable_1, ESlateVisibility K2Node_Select_Default_1, int32 CallFunc_GetBasePowerRating_ReturnValue, int32 CallFunc_GetTeamPowerRating_ReturnValue, bool Temp_bool_Variable_2, bool CallFunc_EqualEqual_IntInt_ReturnValue, class UWidget* K2Node_Select_Default_2);
	void OnTeamMembershipChanged();
	void PreConstruct(bool IsDesignTime);
	void OnPowerRatingProgressUpdated(float BaseRatingProgress, float TeamRatingProgress);
	void OnTeamPowerRatingUpdated(int32 TeamPowerRating);
	void OnBasePowerRatingUpdated(int32 BasePowerRating);
	void Construct();
	void UpdateWidgetState(bool IsContributingToTeamPowerRating, ESlateVisibility Temp_byte_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool Temp_bool_IsClosed_Variable, ESlateVisibility Temp_byte_Variable_1, int32 CallFunc_GetBasePowerRating_ReturnValue, bool CallFunc_HasTeamMembers_ReturnValue, int32 CallFunc_GetBasePowerRating_ReturnValue_1, bool CallFunc_NotEqual_IntInt_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_HasTeamMembers_ReturnValue_1, bool Temp_bool_Variable, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, ESlateVisibility K2Node_Select_Default, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_1, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_2, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush_3);
	void SetBackgroundColor(const struct FLinearColor& NewColor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Moonbeam_PowerRatingWidget_C">();
	}
	static class UMoonbeam_PowerRatingWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoonbeam_PowerRatingWidget_C>();
	}
};
static_assert(alignof(UMoonbeam_PowerRatingWidget_C) == 0x000008, "Wrong alinment on UMoonbeam_PowerRatingWidget_C");
static_assert(sizeof(UMoonbeam_PowerRatingWidget_C) == 0x000380, "Wrong size on UMoonbeam_PowerRatingWidget_C");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, UberGraphFrame) == 0x0002B0, "Member 'UMoonbeam_PowerRatingWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, BaseRatingValue) == 0x0002B8, "Member 'UMoonbeam_PowerRatingWidget_C::BaseRatingValue' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, BaseRatingValueMinusLarge) == 0x0002C0, "Member 'UMoonbeam_PowerRatingWidget_C::BaseRatingValueMinusLarge' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, BuffedRatingOuterGlow) == 0x0002C8, "Member 'UMoonbeam_PowerRatingWidget_C::BuffedRatingOuterGlow' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, HomebaseRatingBar) == 0x0002D0, "Member 'UMoonbeam_PowerRatingWidget_C::HomebaseRatingBar' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, Image_Power) == 0x0002D8, "Member 'UMoonbeam_PowerRatingWidget_C::Image_Power' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, ModeTypeSwitcher) == 0x0002E0, "Member 'UMoonbeam_PowerRatingWidget_C::ModeTypeSwitcher' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, Moonbeam_Power_Back) == 0x0002E8, "Member 'UMoonbeam_PowerRatingWidget_C::Moonbeam_Power_Back' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, OversizedMode) == 0x0002F0, "Member 'UMoonbeam_PowerRatingWidget_C::OversizedMode' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, PowerIconGlow) == 0x0002F8, "Member 'UMoonbeam_PowerRatingWidget_C::PowerIconGlow' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, RatingMinusGlowMinusLarge) == 0x000300, "Member 'UMoonbeam_PowerRatingWidget_C::RatingMinusGlowMinusLarge' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, RatingBar) == 0x000308, "Member 'UMoonbeam_PowerRatingWidget_C::RatingBar' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, RegularMode) == 0x000310, "Member 'UMoonbeam_PowerRatingWidget_C::RegularMode' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, TeamRatingValue) == 0x000318, "Member 'UMoonbeam_PowerRatingWidget_C::TeamRatingValue' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, TeamRatingValueMinusLarge) == 0x000320, "Member 'UMoonbeam_PowerRatingWidget_C::TeamRatingValueMinusLarge' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, ShowDualPower) == 0x000328, "Member 'UMoonbeam_PowerRatingWidget_C::ShowDualPower' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, ShowProgress) == 0x000329, "Member 'UMoonbeam_PowerRatingWidget_C::ShowProgress' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, ShowGlow) == 0x00032A, "Member 'UMoonbeam_PowerRatingWidget_C::ShowGlow' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, UseLargeStyle) == 0x00032B, "Member 'UMoonbeam_PowerRatingWidget_C::UseLargeStyle' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, UseOversizedMode) == 0x00032C, "Member 'UMoonbeam_PowerRatingWidget_C::UseOversizedMode' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, InterpDuration) == 0x000330, "Member 'UMoonbeam_PowerRatingWidget_C::InterpDuration' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, PowerIncreasedSound) == 0x000338, "Member 'UMoonbeam_PowerRatingWidget_C::PowerIncreasedSound' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, Power_Rating_Num) == 0x000340, "Member 'UMoonbeam_PowerRatingWidget_C::Power_Rating_Num' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, PowerBackingColor) == 0x000344, "Member 'UMoonbeam_PowerRatingWidget_C::PowerBackingColor' has a wrong offset!");
static_assert(offsetof(UMoonbeam_PowerRatingWidget_C, FontColor) == 0x000358, "Member 'UMoonbeam_PowerRatingWidget_C::FontColor' has a wrong offset!");

}

