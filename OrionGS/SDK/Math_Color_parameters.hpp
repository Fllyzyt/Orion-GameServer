#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Math_Color

#include "Basic.hpp"

#include "Math_NamedColor_structs.hpp"


namespace SDK::Params
{

// Function Math_Color.Color.Create
// 0x0010 (0x0010 - 0x0000)
struct Color_Create final 
{
public:
	ENamedColor                                   __verse_0x2057B132_aColor;                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A5F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UColor*                                 RetVal;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Color_Create) == 0x000008, "Wrong alinment on Color_Create");
static_assert(sizeof(Color_Create) == 0x000010, "Wrong size on Color_Create");
static_assert(offsetof(Color_Create, __verse_0x2057B132_aColor) == 0x000000, "Member 'Color_Create::__verse_0x2057B132_aColor' has a wrong offset!");
static_assert(offsetof(Color_Create, RetVal) == 0x000008, "Member 'Color_Create::RetVal' has a wrong offset!");

// Function Math_Color.Color.createFromHex
// 0x0018 (0x0018 - 0x0000)
struct Color_CreateFromHex final 
{
public:
	class FString                                 __verse_0xCFC19EBC_hexString;                      // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash)
	class UColor*                                 RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Color_CreateFromHex) == 0x000008, "Wrong alinment on Color_CreateFromHex");
static_assert(sizeof(Color_CreateFromHex) == 0x000018, "Wrong size on Color_CreateFromHex");
static_assert(offsetof(Color_CreateFromHex, __verse_0xCFC19EBC_hexString) == 0x000000, "Member 'Color_CreateFromHex::__verse_0xCFC19EBC_hexString' has a wrong offset!");
static_assert(offsetof(Color_CreateFromHex, RetVal) == 0x000010, "Member 'Color_CreateFromHex::RetVal' has a wrong offset!");

// Function Math_Color.Color.createFromLinear
// 0x0018 (0x0018 - 0x0000)
struct Color_CreateFromLinear final 
{
public:
	float                                         __verse_0x0EF4F765_Alpha;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x77CCDA87_Red;                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x853EAC70_Green;                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __verse_0x80217580_Blue;                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UColor*                                 RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Color_CreateFromLinear) == 0x000008, "Wrong alinment on Color_CreateFromLinear");
static_assert(sizeof(Color_CreateFromLinear) == 0x000018, "Wrong size on Color_CreateFromLinear");
static_assert(offsetof(Color_CreateFromLinear, __verse_0x0EF4F765_Alpha) == 0x000000, "Member 'Color_CreateFromLinear::__verse_0x0EF4F765_Alpha' has a wrong offset!");
static_assert(offsetof(Color_CreateFromLinear, __verse_0x77CCDA87_Red) == 0x000004, "Member 'Color_CreateFromLinear::__verse_0x77CCDA87_Red' has a wrong offset!");
static_assert(offsetof(Color_CreateFromLinear, __verse_0x853EAC70_Green) == 0x000008, "Member 'Color_CreateFromLinear::__verse_0x853EAC70_Green' has a wrong offset!");
static_assert(offsetof(Color_CreateFromLinear, __verse_0x80217580_Blue) == 0x00000C, "Member 'Color_CreateFromLinear::__verse_0x80217580_Blue' has a wrong offset!");
static_assert(offsetof(Color_CreateFromLinear, RetVal) == 0x000010, "Member 'Color_CreateFromLinear::RetVal' has a wrong offset!");

// Function Math_Color.Color.createFromValues
// 0x0018 (0x0018 - 0x0000)
struct Color_CreateFromValues final 
{
public:
	int32                                         __verse_0x0EF4F765_Alpha;                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x77CCDA87_Red;                            // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x853EAC70_Green;                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         __verse_0x80217580_Blue;                           // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UColor*                                 RetVal;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Color_CreateFromValues) == 0x000008, "Wrong alinment on Color_CreateFromValues");
static_assert(sizeof(Color_CreateFromValues) == 0x000018, "Wrong size on Color_CreateFromValues");
static_assert(offsetof(Color_CreateFromValues, __verse_0x0EF4F765_Alpha) == 0x000000, "Member 'Color_CreateFromValues::__verse_0x0EF4F765_Alpha' has a wrong offset!");
static_assert(offsetof(Color_CreateFromValues, __verse_0x77CCDA87_Red) == 0x000004, "Member 'Color_CreateFromValues::__verse_0x77CCDA87_Red' has a wrong offset!");
static_assert(offsetof(Color_CreateFromValues, __verse_0x853EAC70_Green) == 0x000008, "Member 'Color_CreateFromValues::__verse_0x853EAC70_Green' has a wrong offset!");
static_assert(offsetof(Color_CreateFromValues, __verse_0x80217580_Blue) == 0x00000C, "Member 'Color_CreateFromValues::__verse_0x80217580_Blue' has a wrong offset!");
static_assert(offsetof(Color_CreateFromValues, RetVal) == 0x000010, "Member 'Color_CreateFromValues::RetVal' has a wrong offset!");

}

