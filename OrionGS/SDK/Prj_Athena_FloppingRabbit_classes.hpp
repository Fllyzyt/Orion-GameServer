#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Prj_Athena_FloppingRabbit

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "B_Prj_ThrownConsumable_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Prj_Athena_FloppingRabbit.Prj_Athena_FloppingRabbit_C
// 0x03C8 (0x0CE0 - 0x0918)
class APrj_Athena_FloppingRabbit_C : public AB_Prj_ThrownConsumable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Prj_Athena_FloppingRabbit_C;        // 0x0918(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        LineLoc;                                           // 0x0920(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Timeline_0_NewTrack_0_5E59FE3C4CA5776FE578F391478AB1A6; // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Timeline_0__Direction_5E59FE3C4CA5776FE578F391478AB1A6; // 0x092C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F0[0x3];                                     // 0x092D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Timeline_0;                                        // 0x0930(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BigBob_BigDip_9789CB934FE6D3F1A956D993031B4307;    // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BigBob__Direction_9789CB934FE6D3F1A956D993031B4307; // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F1[0x3];                                     // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BigBob;                                            // 0x0940(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             NullHit;                                           // 0x0948(0x008C)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               WaterRotation;                                     // 0x09D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                MeshLocAfterHit;                                   // 0x09E0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ChanceForBigBob;                                   // 0x09EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectTypes;                                       // 0x09F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         DistanceCheckInterval;                             // 0x0A00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F2[0x4];                                     // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Spawner;                                           // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StartingCatchBigBobChance;                         // 0x0A10(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Delay_CatchWindow;                                 // 0x0A14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCatch;                                          // 0x0A18(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          InWater;                                           // 0x0A19(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F3[0x6];                                     // 0x0A1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AB_Athena_FloppingRabbit_Wire_C*        Wire;                                              // 0x0A28(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Fire;                                        // 0x0A30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_InWorld;                                     // 0x0A38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDistanceFromPlayer;                             // 0x0A40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DefaultSpawner;                                    // 0x0A44(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F4[0x3];                                     // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         IncreaseBigBobChanceAmount;                        // 0x0A48(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F5[0x4];                                     // 0x0A4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_ChanceForBigBob;                               // 0x0A50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_ChanceForBigBobIncrease;                       // 0x0A78(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_CatchWindow;                                   // 0x0AA0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UParticleSystem*                        FX_HitWater;                                       // 0x0AC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXScaleHitWater;                                   // 0x0AD0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F6[0x4];                                     // 0x0ADC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_HitWater;                                    // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_WaterDip;                                       // 0x0AE8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FX_HitWater;                                    // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FX_SpawnItems;                                  // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FX_WaterDip;                                    // 0x0B00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FX_WaterDip_HighTier;                           // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_WaterDip_HighTier;                              // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FXScaleWaterDip;                                   // 0x0B18(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63F7[0x4];                                     // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             Sound_WaterDip;                                    // 0x0B28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_ProjDestroyed;                               // 0x0B30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Hooked;                                      // 0x0B38(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_DistanceCheck;                                 // 0x0B40(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_DistanceCheckZ;                                // 0x0B68(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          Dipping;                                           // 0x0B90(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F8[0x7];                                     // 0x0B91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 SpawnedDefaultSpawner;                             // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         Row_BobChanceDelayMin;                             // 0x0BA0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         Row_BobChanceDelayMax;                             // 0x0BC8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SpawnedItem;                                       // 0x0BF0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63F9[0x7];                                     // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluidSim_FN_C*                      FluidSim;                                          // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_WaterDip_HighTier;                           // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WorldSpawner;                                      // 0x0C08(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63FA[0x7];                                     // 0x0C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystem*                        FX_SpawnItems;                                     // 0x0C10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_SpawnItems;                                  // 0x0C18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemAttachMinDist;                                 // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ItemAttachDistanceRequirement;                     // 0x0C24(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bStartedFishingSession;                            // 0x0C28(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63FB[0x3];                                     // 0x0C29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BounceOutOfWaterDelay;                             // 0x0C2C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Event_Unhooked;                                    // 0x0C30(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TowardPlayerVector;                                // 0x0C38(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BobberStartLocation;                               // 0x0C44(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0C50(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_63FC[0x4];                                     // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFortAIAssignmentIdentifier            AIAssignmentIdentifier;                            // 0x0C60(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFortAIAssignmentSettings*              AIAssignmentSettings;                              // 0x0C90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TetherSocket;                                      // 0x0C98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTetherCanChangeWeapons;                           // 0x0CA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63FD[0x7];                                     // 0x0CA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  FishingRodTag;                                     // 0x0CA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 FloppingRabbitWire;                                // 0x0CC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_MiniGameSplash;                                 // 0x0CD0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bDidHitMeatball;                                   // 0x0CD8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_Prj_Athena_FloppingRabbit(int32 EntryPoint, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FTransform& CallFunc_MakeTransform_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, class AB_FloppingRabbit_Weap_Athena_C* K2Node_DynamicCast_AsB_Flopping_Rabbit_Weap_Athena, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class ABGA_Athena_FlopperSpawn_Parent_C* K2Node_DynamicCast_AsBGA_Athena_Flopper_Spawn_Parent, bool K2Node_DynamicCast_bSuccess_2, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsServer_ReturnValue, bool CallFunc_IsServer_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, float CallFunc_Subtract_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, float CallFunc_Abs_ReturnValue, float CallFunc_DistanceBetweenTwoVectors_Distance, bool Temp_bool_Has_Been_Initd_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FTransform& CallFunc_MakeTransform_ReturnValue_1, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class ABGA_Athena_FlopperSpawn_Default_C* CallFunc_FinishSpawningActor_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue_1, bool K2Node_CustomEvent_InWorldSpawner, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_RandomBoolWithWeight_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OverlappedComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, int32 K2Node_ComponentBoundEvent_OtherBodyIndex, bool K2Node_ComponentBoundEvent_bFromSweep, struct FHitResult& K2Node_ComponentBoundEvent_SweepResult, class AFortPickup* K2Node_DynamicCast_AsFort_Pickup, bool K2Node_DynamicCast_bSuccess_3, class AFortAthenaWater* K2Node_DynamicCast_AsFort_Athena_Water, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_IgnoreTetherablePawn_isIgnored, bool CallFunc_AttemptTether_bTethered, class AFortWaterBodyActor* K2Node_DynamicCast_AsFort_Water_Body_Actor, bool K2Node_DynamicCast_bSuccess_5, bool CallFunc_IsValid_ReturnValue_4, class UPrimitiveComponent* K2Node_Event_MyComp, class AActor* K2Node_Event_Other, class UPrimitiveComponent* K2Node_Event_OtherComp, bool K2Node_Event_bSelfMoved, const struct FVector& K2Node_Event_HitLocation, const struct FVector& K2Node_Event_HitNormal, const struct FVector& K2Node_Event_NormalImpulse, struct FHitResult& K2Node_Event_Hit, bool CallFunc_IsValid_ReturnValue_5, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess_6, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_AttemptTether_bTethered_1, bool CallFunc_HasTag_ReturnValue, bool CallFunc_IsServer_ReturnValue_2, bool CallFunc_HasAuthority_ReturnValue, TArray<class AActor*>& K2Node_Event_HitActors, TArray<struct FHitResult>& K2Node_Event_HitResults, bool K2Node_CustomEvent_FishSpawner, bool Temp_bool_IsClosed_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, const struct FRotator& CallFunc_K2_GetActorRotation_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_6, class APawn* CallFunc_GetInstigator_ReturnValue_2, bool CallFunc_IsServer_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_7, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_8, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_2, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, bool Temp_bool_Variable, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsServer_ReturnValue_4, const struct FHitResult& CallFunc_K2_SetWorldRotation_SweepHitResult, const struct FHitResult& CallFunc_K2_SetRelativeLocation_SweepHitResult, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_9, bool Temp_bool_IsClosed_Variable_1, class ABGA_Athena_FlopperSpawn_Default_C* K2Node_DynamicCast_AsBGA_Athena_Flopper_Spawn_Default, bool K2Node_DynamicCast_bSuccess_7, bool Temp_bool_IsClosed_Variable_2, bool CallFunc_IsValid_ReturnValue_6, bool CallFunc_IsValid_ReturnValue_7, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_GetValueAtLevel_ReturnValue_3, float CallFunc_RandomFloatInRange_ReturnValue, const TMap<class FName, class FName>& K2Node_MakeMap_Map, const struct FFluidForceSocketInfo& K2Node_MakeStruct_FluidForceSocketInfo, bool CallFunc_IsValid_ReturnValue_8, const struct FFluidForceDynamic& K2Node_MakeStruct_FluidForceDynamic, TArray<class ABP_FluidSim_FN_C*>& CallFunc_GetAllActorsOfClass_OutActors, bool Temp_bool_Has_Been_Initd_Variable_1, class ABP_FluidSim_FN_C* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue_9, bool Temp_bool_IsClosed_Variable_3, bool Temp_bool_Has_Been_Initd_Variable_2, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition, float CallFunc_GetLastWaterSurfaceInfo_WaterDepth, int32 CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterVelocity, float CallFunc_Conv_IntToFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_10, bool CallFunc_IsServer_ReturnValue_5, bool CallFunc_IsValid_ReturnValue_10, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneLocation_1, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterPlaneNormal_1, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterSurfacePosition_1, float CallFunc_GetLastWaterSurfaceInfo_WaterDepth_1, int32 CallFunc_GetLastWaterSurfaceInfo_WaterBodyIdx_1, const struct FVector& CallFunc_GetLastWaterSurfaceInfo_WaterVelocity_1, float CallFunc_Conv_IntToFloat_ReturnValue_1, class APawn* CallFunc_GetTetherPawn_ReturnValue, bool CallFunc_IsValid_ReturnValue_11, class AFortPickup* K2Node_CustomEvent_FortPickup, class AActor* CallFunc_GetAttachParentActor_ReturnValue, float CallFunc_GetSquaredDistanceTo_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable_3, bool CallFunc_NotEqual_ObjectObject_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsServer_ReturnValue_6, class APawn* CallFunc_GetInstigator_ReturnValue_3, float CallFunc_GetSquaredDistanceTo_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool Temp_bool_Variable_1, TArray<class AActor*>& Temp_object_Variable, bool CallFunc_IsValid_ReturnValue_12, bool Temp_bool_Variable_2, class USoundBase* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue_13, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_11, TArray<class AActor*>& CallFunc_CapsuleOverlapActors_OutActors, bool CallFunc_CapsuleOverlapActors_ReturnValue, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue, class UNiagaraSystem* K2Node_Select_Default_1, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue_1, class UNiagaraComponent* CallFunc_SpawnSystemAtLocation_ReturnValue_2, class AFortWaterBodyActor* K2Node_ComponentBoundEvent_WaterBody, class UFortWaterInteractionComponent* K2Node_ComponentBoundEvent_WaterInteractionComponent, bool K2Node_ComponentBoundEvent_bIsLastBody, bool CallFunc_IsInWater_ReturnValue, bool CallFunc_IsServer_ReturnValue_7, bool Temp_bool_Has_Been_Initd_Variable_4, TArray<class AActor*>& Temp_object_Variable_1, TArray<class AActor*>& CallFunc_CapsuleOverlapActors_OutActors_1, bool CallFunc_CapsuleOverlapActors_ReturnValue_1, class AActor* CallFunc_Array_Get_Item_1, bool CallFunc_IsTethered_ReturnValue, bool CallFunc_IsValid_ReturnValue_14, class APawn* K2Node_CustomEvent_TetherActor, bool CallFunc_AttemptTether_bTethered_2, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_12, float K2Node_Event_DeltaSeconds, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_13, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_14, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Cross_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_15, bool Temp_bool_IsClosed_Variable_4, float CallFunc_RandomFloatInRange_ReturnValue_1, float CallFunc_RandomFloatInRange_ReturnValue_2, float CallFunc_RandomFloatInRange_ReturnValue_3, float CallFunc_SelectFloat_ReturnValue, const struct FVector& CallFunc_VInterpTo_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue_1, bool CallFunc_IsTethered_ReturnValue_1, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1, bool K2Node_CustomEvent_On, class AB_Athena_FloppingRabbit_Wire_C* CallFunc_FinishSpawningActor_ReturnValue_1, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue);
	void ToggleMiniGameSplashLoop(bool On);
	void ClientReelIn();
	void ReceiveTick(float DeltaSeconds);
	void DipFx();
	void Minigame_MoveBobber();
	void ServerAttemptTether(class APawn* TetherActor);
	void ReelIn();
	void BndEvt__WaterInteractionComponent_K2Node_ComponentBoundEvent_0_WaterInteractionOnExitWater__DelegateSignature(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* Param_WaterInteractionComponent, bool bIsLastBody);
	void WriteNothingCaughtFishingAnalytic();
	void CustomPickupAttach(class AFortPickup* FortPickup);
	void SpawnItemsFX();
	void CheckForHighTierSpawner();
	void CheckForDip();
	void ReceiveDestroyed();
	void HitWater(bool FishSpawner);
	void OnExploded(TArray<class AActor*>& HitActors, TArray<struct FHitResult>& HitResults);
	void ForceKill();
	void DistanceCheck();
	void ReceiveBeginPlay();
	void HideAndKill();
	void TryCatch();
	void CatchWindow();
	void FullDip(bool InWorldSpawner);
	void BndEvt__CapsuleComponent_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, struct FHitResult& SweepResult);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void Timeline_0__UpdateFunc();
	void Timeline_0__FinishedFunc();
	void BigBob__UpdateFunc();
	void BigBob__FinishedFunc();
	void GetSheetVals(float CallFunc_GetValueAtLevel_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, float CallFunc_GetValueAtLevel_ReturnValue_2);
	void AttemptTether(class AActor* HitActor, bool* bTethered, bool ReturnTethered, class APawn* TetherHitActorPawn, class AFortMeatballVehicle* K2Node_DynamicCast_AsFort_Meatball_Vehicle, bool K2Node_DynamicCast_bSuccess, class AFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_HasTag_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, bool CallFunc_K2_AttachToComponent_ReturnValue, class APawn* CallFunc_GetTetherPawn_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue);
	void RegisterWithGoalManager(bool CallFunc_HasAuthority_ReturnValue, const struct FFortAIGoalInfo& CallFunc_MakeGoalFromActor_Goal, const struct FFortAIAssignmentIdentifier& CallFunc_CreateWorldAssignment_AssignmentIdentifier, EAssignmentCreationResult CallFunc_CreateWorldAssignment_CreationResult, bool K2Node_SwitchEnum_CmpSuccess);
	void UnRegisterWithGoalManager(bool CallFunc_HasAuthority_ReturnValue, const struct FFortAIGoalInfo& CallFunc_MakeGoalFromActor_Goal);
	void IgnoreTetherablePawn(class AActor* HitActor, bool* IsIgnored, class AFortAIPawn* K2Node_DynamicCast_AsFort_AIPawn, bool K2Node_DynamicCast_bSuccess, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_GetOwnedGameplayTags_self_CastInput, const struct FGameplayTagContainer& CallFunc_GetOwnedGameplayTags_TagContainer, bool CallFunc_HasTag_ReturnValue);
	class FName DetermineFishLootTierNameAndSetLootForSpawner(bool bIsExplosion, class ABGA_Athena_FlopperSpawn_Parent_C* K2Node_DynamicCast_AsBGA_Athena_Flopper_Spawn_Parent, bool K2Node_DynamicCast_bSuccess, class FName CallFunc_GetLootTier_Output_Get);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Prj_Athena_FloppingRabbit_C">();
	}
	static class APrj_Athena_FloppingRabbit_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APrj_Athena_FloppingRabbit_C>();
	}
};
static_assert(alignof(APrj_Athena_FloppingRabbit_C) == 0x000008, "Wrong alinment on APrj_Athena_FloppingRabbit_C");
static_assert(sizeof(APrj_Athena_FloppingRabbit_C) == 0x000CE0, "Wrong size on APrj_Athena_FloppingRabbit_C");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, UberGraphFrame_Prj_Athena_FloppingRabbit_C) == 0x000918, "Member 'APrj_Athena_FloppingRabbit_C::UberGraphFrame_Prj_Athena_FloppingRabbit_C' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, LineLoc) == 0x000920, "Member 'APrj_Athena_FloppingRabbit_C::LineLoc' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Timeline_0_NewTrack_0_5E59FE3C4CA5776FE578F391478AB1A6) == 0x000928, "Member 'APrj_Athena_FloppingRabbit_C::Timeline_0_NewTrack_0_5E59FE3C4CA5776FE578F391478AB1A6' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Timeline_0__Direction_5E59FE3C4CA5776FE578F391478AB1A6) == 0x00092C, "Member 'APrj_Athena_FloppingRabbit_C::Timeline_0__Direction_5E59FE3C4CA5776FE578F391478AB1A6' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Timeline_0) == 0x000930, "Member 'APrj_Athena_FloppingRabbit_C::Timeline_0' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, BigBob_BigDip_9789CB934FE6D3F1A956D993031B4307) == 0x000938, "Member 'APrj_Athena_FloppingRabbit_C::BigBob_BigDip_9789CB934FE6D3F1A956D993031B4307' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, BigBob__Direction_9789CB934FE6D3F1A956D993031B4307) == 0x00093C, "Member 'APrj_Athena_FloppingRabbit_C::BigBob__Direction_9789CB934FE6D3F1A956D993031B4307' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, BigBob) == 0x000940, "Member 'APrj_Athena_FloppingRabbit_C::BigBob' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, NullHit) == 0x000948, "Member 'APrj_Athena_FloppingRabbit_C::NullHit' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, WaterRotation) == 0x0009D4, "Member 'APrj_Athena_FloppingRabbit_C::WaterRotation' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, MeshLocAfterHit) == 0x0009E0, "Member 'APrj_Athena_FloppingRabbit_C::MeshLocAfterHit' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, ChanceForBigBob) == 0x0009EC, "Member 'APrj_Athena_FloppingRabbit_C::ChanceForBigBob' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, ObjectTypes) == 0x0009F0, "Member 'APrj_Athena_FloppingRabbit_C::ObjectTypes' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, DistanceCheckInterval) == 0x000A00, "Member 'APrj_Athena_FloppingRabbit_C::DistanceCheckInterval' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Spawner) == 0x000A08, "Member 'APrj_Athena_FloppingRabbit_C::Spawner' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, StartingCatchBigBobChance) == 0x000A10, "Member 'APrj_Athena_FloppingRabbit_C::StartingCatchBigBobChance' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Delay_CatchWindow) == 0x000A14, "Member 'APrj_Athena_FloppingRabbit_C::Delay_CatchWindow' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, CanCatch) == 0x000A18, "Member 'APrj_Athena_FloppingRabbit_C::CanCatch' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, InWater) == 0x000A19, "Member 'APrj_Athena_FloppingRabbit_C::InWater' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, PlayerPawn) == 0x000A20, "Member 'APrj_Athena_FloppingRabbit_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Wire) == 0x000A28, "Member 'APrj_Athena_FloppingRabbit_C::Wire' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Event_Fire) == 0x000A30, "Member 'APrj_Athena_FloppingRabbit_C::Event_Fire' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Event_InWorld) == 0x000A38, "Member 'APrj_Athena_FloppingRabbit_C::Event_InWorld' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, MaxDistanceFromPlayer) == 0x000A40, "Member 'APrj_Athena_FloppingRabbit_C::MaxDistanceFromPlayer' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, DefaultSpawner) == 0x000A44, "Member 'APrj_Athena_FloppingRabbit_C::DefaultSpawner' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, IncreaseBigBobChanceAmount) == 0x000A48, "Member 'APrj_Athena_FloppingRabbit_C::IncreaseBigBobChanceAmount' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_ChanceForBigBob) == 0x000A50, "Member 'APrj_Athena_FloppingRabbit_C::Row_ChanceForBigBob' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_ChanceForBigBobIncrease) == 0x000A78, "Member 'APrj_Athena_FloppingRabbit_C::Row_ChanceForBigBobIncrease' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_CatchWindow) == 0x000AA0, "Member 'APrj_Athena_FloppingRabbit_C::Row_CatchWindow' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FX_HitWater) == 0x000AC8, "Member 'APrj_Athena_FloppingRabbit_C::FX_HitWater' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FXScaleHitWater) == 0x000AD0, "Member 'APrj_Athena_FloppingRabbit_C::FXScaleHitWater' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Sound_HitWater) == 0x000AE0, "Member 'APrj_Athena_FloppingRabbit_C::Sound_HitWater' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FX_WaterDip) == 0x000AE8, "Member 'APrj_Athena_FloppingRabbit_C::FX_WaterDip' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, NS_FX_HitWater) == 0x000AF0, "Member 'APrj_Athena_FloppingRabbit_C::NS_FX_HitWater' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, NS_FX_SpawnItems) == 0x000AF8, "Member 'APrj_Athena_FloppingRabbit_C::NS_FX_SpawnItems' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, NS_FX_WaterDip) == 0x000B00, "Member 'APrj_Athena_FloppingRabbit_C::NS_FX_WaterDip' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, NS_FX_WaterDip_HighTier) == 0x000B08, "Member 'APrj_Athena_FloppingRabbit_C::NS_FX_WaterDip_HighTier' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FX_WaterDip_HighTier) == 0x000B10, "Member 'APrj_Athena_FloppingRabbit_C::FX_WaterDip_HighTier' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FXScaleWaterDip) == 0x000B18, "Member 'APrj_Athena_FloppingRabbit_C::FXScaleWaterDip' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Sound_WaterDip) == 0x000B28, "Member 'APrj_Athena_FloppingRabbit_C::Sound_WaterDip' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Event_ProjDestroyed) == 0x000B30, "Member 'APrj_Athena_FloppingRabbit_C::Event_ProjDestroyed' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Event_Hooked) == 0x000B38, "Member 'APrj_Athena_FloppingRabbit_C::Event_Hooked' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_DistanceCheck) == 0x000B40, "Member 'APrj_Athena_FloppingRabbit_C::Row_DistanceCheck' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_DistanceCheckZ) == 0x000B68, "Member 'APrj_Athena_FloppingRabbit_C::Row_DistanceCheckZ' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Dipping) == 0x000B90, "Member 'APrj_Athena_FloppingRabbit_C::Dipping' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, SpawnedDefaultSpawner) == 0x000B98, "Member 'APrj_Athena_FloppingRabbit_C::SpawnedDefaultSpawner' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_BobChanceDelayMin) == 0x000BA0, "Member 'APrj_Athena_FloppingRabbit_C::Row_BobChanceDelayMin' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Row_BobChanceDelayMax) == 0x000BC8, "Member 'APrj_Athena_FloppingRabbit_C::Row_BobChanceDelayMax' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, SpawnedItem) == 0x000BF0, "Member 'APrj_Athena_FloppingRabbit_C::SpawnedItem' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FluidSim) == 0x000BF8, "Member 'APrj_Athena_FloppingRabbit_C::FluidSim' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Sound_WaterDip_HighTier) == 0x000C00, "Member 'APrj_Athena_FloppingRabbit_C::Sound_WaterDip_HighTier' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, WorldSpawner) == 0x000C08, "Member 'APrj_Athena_FloppingRabbit_C::WorldSpawner' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FX_SpawnItems) == 0x000C10, "Member 'APrj_Athena_FloppingRabbit_C::FX_SpawnItems' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Sound_SpawnItems) == 0x000C18, "Member 'APrj_Athena_FloppingRabbit_C::Sound_SpawnItems' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, ItemAttachMinDist) == 0x000C20, "Member 'APrj_Athena_FloppingRabbit_C::ItemAttachMinDist' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, ItemAttachDistanceRequirement) == 0x000C24, "Member 'APrj_Athena_FloppingRabbit_C::ItemAttachDistanceRequirement' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, bStartedFishingSession) == 0x000C28, "Member 'APrj_Athena_FloppingRabbit_C::bStartedFishingSession' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, BounceOutOfWaterDelay) == 0x000C2C, "Member 'APrj_Athena_FloppingRabbit_C::BounceOutOfWaterDelay' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Event_Unhooked) == 0x000C30, "Member 'APrj_Athena_FloppingRabbit_C::Event_Unhooked' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, TowardPlayerVector) == 0x000C38, "Member 'APrj_Athena_FloppingRabbit_C::TowardPlayerVector' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, BobberStartLocation) == 0x000C44, "Member 'APrj_Athena_FloppingRabbit_C::BobberStartLocation' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, Target) == 0x000C50, "Member 'APrj_Athena_FloppingRabbit_C::Target' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, AIAssignmentIdentifier) == 0x000C60, "Member 'APrj_Athena_FloppingRabbit_C::AIAssignmentIdentifier' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, AIAssignmentSettings) == 0x000C90, "Member 'APrj_Athena_FloppingRabbit_C::AIAssignmentSettings' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, TetherSocket) == 0x000C98, "Member 'APrj_Athena_FloppingRabbit_C::TetherSocket' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, bTetherCanChangeWeapons) == 0x000CA0, "Member 'APrj_Athena_FloppingRabbit_C::bTetherCanChangeWeapons' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FishingRodTag) == 0x000CA8, "Member 'APrj_Athena_FloppingRabbit_C::FishingRodTag' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, FloppingRabbitWire) == 0x000CC8, "Member 'APrj_Athena_FloppingRabbit_C::FloppingRabbitWire' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, GC_MiniGameSplash) == 0x000CD0, "Member 'APrj_Athena_FloppingRabbit_C::GC_MiniGameSplash' has a wrong offset!");
static_assert(offsetof(APrj_Athena_FloppingRabbit_C, bDidHitMeatball) == 0x000CD8, "Member 'APrj_Athena_FloppingRabbit_C::bDidHitMeatball' has a wrong offset!");

}

