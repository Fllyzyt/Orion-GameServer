#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Athena_ZeroPoint_Dash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Athena_ZeroPoint_Dash.GA_Athena_ZeroPoint_Dash_C
// 0x00A8 (0x0B60 - 0x0AB8)
class UGA_Athena_ZeroPoint_Dash_C final  : public UFortGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AB8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        FortPawn;                                          // 0x0AC0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           GC_Cue;                                            // 0x0AC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FName                                   Collision_Profile;                                 // 0x0AD0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Failsafe_Delay;                                    // 0x0AD8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         F_EndVelocityMult;                                 // 0x0ADC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Launch_Velocity;                                   // 0x0AE0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C43[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         MoveDistance;                                      // 0x0AF0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         DashDuration;                                      // 0x0B18(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  T_HudElementToHide;                                // 0x0B40(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GA_Athena_ZeroPoint_Dash(int32 EntryPoint, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue, class UFortHUDContext* CallFunc_GetContext_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool K2Node_Event_bWasCancelled, const struct FVector& CallFunc_Get_Movement_End_Velocity_FinalVelocity, const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, class UFortHUDContext* CallFunc_GetContext_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, const struct FVector& CallFunc_Get_Target_Location_Based_On_Aim_Rotation_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, const struct FVector& CallFunc_Get_Target_Location_Based_On_Acceleration_TargetLocation, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, float CallFunc_BreakVector_X_2, float CallFunc_BreakVector_Y_2, float CallFunc_BreakVector_Z_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, float CallFunc_Add_FloatFloat_ReturnValue, bool CallFunc_K2_CommitAbilityCooldown_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, bool CallFunc_HasRecentlyExitedZiplineFromJumping_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, class UAbilityTask_ApplyRootMotionMoveToForce* CallFunc_ApplyRootMotionMoveToForce_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_2, float CallFunc_Add_FloatFloat_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_IsValid_ReturnValue_2, bool CallFunc_IsSkydiving_ReturnValue);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void OnTimedOut_F9330F1C4BB8CC06D825F1872E5B0BBA();
	void OnTimedOutAndDestinationReached_F9330F1C4BB8CC06D825F1872E5B0BBA();
	void SetPawnCollision(bool Condition, class FName CallFunc_GetCollisionProfileName_ReturnValue, bool CallFunc_NotEqual_NameName_ReturnValue);
	void Get_Movement_End_Velocity(class AFortPlayerPawn* Param_FortPawn, struct FVector* FinalVelocity, const struct FVector& CallFunc_GetVelocity_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_VSize_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_2, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	struct FVector Get_Target_Location_Based_On_Aim_Rotation(float CallFunc_GetValueAtLevel_ReturnValue, const struct FRotator& CallFunc_GetDefaultTargetingRotation_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue);
	void Get_Target_Location_Based_On_Acceleration(struct FVector* TargetLocation, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_GetCurrentAcceleration_ReturnValue, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_1, float CallFunc_VSize_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_EqualEqual_FloatFloat_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue, const struct FVector& CallFunc_SelectVector_ReturnValue, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, const struct FVector& CallFunc_MakeVector_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue);
	void Impact_Enemy();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Athena_ZeroPoint_Dash_C">();
	}
	static class UGA_Athena_ZeroPoint_Dash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Athena_ZeroPoint_Dash_C>();
	}
};
static_assert(alignof(UGA_Athena_ZeroPoint_Dash_C) == 0x000008, "Wrong alinment on UGA_Athena_ZeroPoint_Dash_C");
static_assert(sizeof(UGA_Athena_ZeroPoint_Dash_C) == 0x000B60, "Wrong size on UGA_Athena_ZeroPoint_Dash_C");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, UberGraphFrame) == 0x000AB8, "Member 'UGA_Athena_ZeroPoint_Dash_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, FortPawn) == 0x000AC0, "Member 'UGA_Athena_ZeroPoint_Dash_C::FortPawn' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, GC_Cue) == 0x000AC8, "Member 'UGA_Athena_ZeroPoint_Dash_C::GC_Cue' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, Collision_Profile) == 0x000AD0, "Member 'UGA_Athena_ZeroPoint_Dash_C::Collision_Profile' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, Failsafe_Delay) == 0x000AD8, "Member 'UGA_Athena_ZeroPoint_Dash_C::Failsafe_Delay' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, F_EndVelocityMult) == 0x000ADC, "Member 'UGA_Athena_ZeroPoint_Dash_C::F_EndVelocityMult' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, Launch_Velocity) == 0x000AE0, "Member 'UGA_Athena_ZeroPoint_Dash_C::Launch_Velocity' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, MoveDistance) == 0x000AF0, "Member 'UGA_Athena_ZeroPoint_Dash_C::MoveDistance' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, DashDuration) == 0x000B18, "Member 'UGA_Athena_ZeroPoint_Dash_C::DashDuration' has a wrong offset!");
static_assert(offsetof(UGA_Athena_ZeroPoint_Dash_C, T_HudElementToHide) == 0x000B40, "Member 'UGA_Athena_ZeroPoint_Dash_C::T_HudElementToHide' has a wrong offset!");

}

