#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HeroLoadoutActiveAbilityDetailRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HeroLoadoutActiveAbilityDetailRow.HeroLoadoutActiveAbilityDetailRow_C
// 0x0150 (0x03D8 - 0x0288)
class UHeroLoadoutActiveAbilityDetailRow_C final  : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0288(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCommonBorder*                          Border_Body;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonLazyImage*                       Image_Tier;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImageLockPerk;                                     // 0x02A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ImagePerkIcon;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonWidgetSwitcher*                  InfoSwitcher;                                      // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UKeybindWidget_C*                       KeybindWidget;                                     // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               LargeInfo;                                         // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       LargeName;                                         // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Keybind;                                   // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               PerkIconSizeBox;                                   // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SmallDescription;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           SmallInfo;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       SmallName;                                         // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_TierContent;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IncludeName;                                       // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IncludeDescription;                                // 0x0301(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          UseVerboseDescription;                             // 0x0302(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D30[0x5];                                     // 0x0303(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 UnlockedDisplayNameTextStyle;                      // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDisplayNameTextStyle;                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 UnlockedDescriptionTextStyle;                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 LockedDescriptionTextStyle;                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFortBrushSize                                Icon_Size;                                         // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D31[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortHero*                              Host_Hero;                                         // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFortAbilityKit*                        AbilityKit;                                        // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FSlateBrush                            EmptyBorderBrush;                                  // 0x0340(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          ShowKeybind;                                       // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_4D32[0x3];                                     // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   BoundAction;                                       // 0x03CC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void SetBorderVisibility();
	void GetTierImage(TSoftObjectPtr<class UTexture2D>* NewParam, EFortItemTier Temp_byte_Variable, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_1, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_2, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_3, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_4, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_5, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_6, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_7, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_8, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_9, TSoftObjectPtr<class UTexture2D> Temp_softobject_Variable_10, EFortItemTier CallFunc_GetAbilityKitUnlockTierForHero_ReturnValue, TSoftObjectPtr<class UTexture2D> K2Node_Select_Default);
	void SetDisplayState(bool ShowName, bool ShowDescription, bool Param_UseVerboseDescription);
	void SetAbilityKit(class UFortAbilityKit* Param_AbilityKit);
	bool IsAbilityUnlocked(bool CallFunc_IsAbilityKitUnlockedForHero_ReturnValue);
	class UFortAbilityKit* GetAbilityKit();
	void SetHero(class UFortHero* Hero);
	void UpdateTextStyles(bool Temp_bool_Variable, bool CallFunc_IsAbilityUnlocked_ReturnValue, bool CallFunc_IsAbilityUnlocked_ReturnValue_1, bool Temp_bool_Variable_1, class UClass* K2Node_Select_Default, class UClass* K2Node_Select_Default_1);
	void UpdateFromState(ESlateVisibility LockedVisibility, bool Temp_bool_Variable, bool CallFunc_IsAbilityUnlocked_ReturnValue, TSoftObjectPtr<class UTexture2D> CallFunc_GetTierImage_NewParam, bool CallFunc_IsAbilityUnlocked_ReturnValue_1, class UFortAbilityKit* CallFunc_GetAbilityKit_ReturnValue, class UFortAbilityKit* CallFunc_GetAbilityKit_ReturnValue_1, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UFortAbilityKit* CallFunc_GetAbilityKit_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_2, class UFortTooltipUIContext* CallFunc_GetContext_ReturnValue, const struct FSlateBrush& CallFunc_NoResourceBrush_ReturnValue, const struct FSlateBrush& CallFunc_ResizeBrush_ResizedBrush, const struct FSlateBrush& CallFunc_ResizeBrush_ResizedBrush_1, bool Temp_bool_Variable_1, ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable_2, ESlateVisibility K2Node_Select_Default, class APlayerController* CallFunc_GetOwningPlayer_ReturnValue, class UFortTooltipContext* CallFunc_SpawnTooltipContextWithSource_ReturnValue, class FText Temp_text_Variable, class FText CallFunc_GetCombinedDescription_OutDescription, bool CallFunc_GetCombinedDescription_ReturnValue, bool Temp_bool_Variable_3, class FText K2Node_Select_Default_1, const struct FLinearColor& Temp_struct_Variable, class FText K2Node_Select_Default_2, const struct FLinearColor& Temp_struct_Variable_1, const struct FLinearColor& K2Node_Select_Default_3);
	void UpdateFromStyle(ESlateVisibility Temp_byte_Variable, ESlateVisibility Temp_byte_Variable_1, bool Temp_bool_Variable, const struct FVector2D& CallFunc_GetStandardBrushSize_ReturnValue, float CallFunc_BreakVector2D_X, float CallFunc_BreakVector2D_Y, bool Temp_bool_Variable_1, class UWidget* K2Node_Select_Default, ESlateVisibility K2Node_Select_Default_1);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_HeroLoadoutActiveAbilityDetailRow(int32 EntryPoint, bool K2Node_Event_IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HeroLoadoutActiveAbilityDetailRow_C">();
	}
	static class UHeroLoadoutActiveAbilityDetailRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHeroLoadoutActiveAbilityDetailRow_C>();
	}
};
static_assert(alignof(UHeroLoadoutActiveAbilityDetailRow_C) == 0x000008, "Wrong alinment on UHeroLoadoutActiveAbilityDetailRow_C");
static_assert(sizeof(UHeroLoadoutActiveAbilityDetailRow_C) == 0x0003D8, "Wrong size on UHeroLoadoutActiveAbilityDetailRow_C");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UberGraphFrame) == 0x000288, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Border_Body) == 0x000290, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Border_Body' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Image_Tier) == 0x000298, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Image_Tier' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, ImageLockPerk) == 0x0002A0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::ImageLockPerk' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, ImagePerkIcon) == 0x0002A8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::ImagePerkIcon' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, InfoSwitcher) == 0x0002B0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::InfoSwitcher' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, KeybindWidget) == 0x0002B8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::KeybindWidget' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LargeInfo) == 0x0002C0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LargeInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LargeName) == 0x0002C8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LargeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Overlay_Keybind) == 0x0002D0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Overlay_Keybind' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, PerkIconSizeBox) == 0x0002D8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::PerkIconSizeBox' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallDescription) == 0x0002E0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallInfo) == 0x0002E8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallInfo' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, SmallName) == 0x0002F0, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::SmallName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, VerticalBox_TierContent) == 0x0002F8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::VerticalBox_TierContent' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, IncludeName) == 0x000300, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::IncludeName' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, IncludeDescription) == 0x000301, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::IncludeDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UseVerboseDescription) == 0x000302, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UseVerboseDescription' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UnlockedDisplayNameTextStyle) == 0x000308, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UnlockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LockedDisplayNameTextStyle) == 0x000310, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LockedDisplayNameTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, UnlockedDescriptionTextStyle) == 0x000318, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::UnlockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, LockedDescriptionTextStyle) == 0x000320, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::LockedDescriptionTextStyle' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Icon_Size) == 0x000328, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Icon_Size' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, Host_Hero) == 0x000330, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::Host_Hero' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, AbilityKit) == 0x000338, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::AbilityKit' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, EmptyBorderBrush) == 0x000340, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::EmptyBorderBrush' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, ShowKeybind) == 0x0003C8, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::ShowKeybind' has a wrong offset!");
static_assert(offsetof(UHeroLoadoutActiveAbilityDetailRow_C, BoundAction) == 0x0003CC, "Member 'UHeroLoadoutActiveAbilityDetailRow_C::BoundAction' has a wrong offset!");

}

