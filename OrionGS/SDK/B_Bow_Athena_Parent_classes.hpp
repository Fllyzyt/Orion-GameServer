#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_Bow_Athena_Parent

#include "Basic.hpp"

#include "B_Ranged_Generic_classes.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_Bow_Athena_Parent.B_Bow_Athena_Parent_C
// 0x0100 (0x13C8 - 0x12C8)
class AB_Bow_Athena_Parent_C : public AB_Ranged_Generic_C
{
public:
	uint8                                         Pad_71AD[0x4];                                     // 0x12C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_B_Bow_Athena_Parent_C;              // 0x12C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        FullCharge_AudioComponent;                         // 0x12D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Ambient_Charge_AudioComponent;                     // 0x12D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x12E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          ReachedMaxCharge;                                  // 0x12E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          ReachedMinCharge;                                  // 0x12E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          ReachedHalfCharge;                                 // 0x12EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          Charging;                                          // 0x12EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_71AE[0x4];                                     // 0x12EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ChargeAudio;                                       // 0x12F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Prj_Dummy;                                         // 0x12F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortProjectileBase*                    DummyProjectile;                                   // 0x1300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyExtent;                                       // 0x1308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyMaxSpeed;                                     // 0x130C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         ProjectileVelocity;                                // 0x1310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyFriction;                                     // 0x1314(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyBouncieness;                                  // 0x1318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyGravity;                                      // 0x131C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DummyTimeStep;                                     // 0x1320(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	ECollisionChannel                             DummyCollisionChannel;                             // 0x1324(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_71AF[0x3];                                     // 0x1325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Row_MaxProjectileSpeed;                            // 0x1328(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UClass*                                 TrajectoryClass;                                   // 0x1350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ProjectileTrajectory_Bow_Generic_C* BowTrajectory;                                     // 0x1358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_UpdateTrajectorySpline;                      // 0x1360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          IsBowEquipped;                                     // 0x1368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_71B0[0x7];                                     // 0x1369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             LowTensionFire;                                    // 0x1370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NormalTensionFire;                                 // 0x1378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FullTensionFire;                                   // 0x1380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             FullTensionFireP1;                                 // 0x1388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             LowTensionFireP1;                                  // 0x1390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             NormalTensionFireP1;                               // 0x1398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_AdditionalFire;                                 // 0x13A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        FX_FullyCharge;                                    // 0x13A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Sound_OnCharge;                                    // 0x13B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_AdditionalFire;                                 // 0x13B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         NS_FullyCHarge;                                    // 0x13C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_Bow_Athena_Parent(int32 EntryPoint, bool K2Node_Event_bPersistentFire, bool K2Node_Event_bSecondaryFire, bool Temp_bool_Variable, class APawn* CallFunc_GetInstigator_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, float CallFunc_CalculateVelocity_Velocity, float K2Node_Event_DeltaSeconds, float CallFunc_GetChargePercent_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, class AController* CallFunc_GetInstigatorController_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsLocalPlayerController_ReturnValue, bool Temp_bool_IsClosed_Variable, bool CallFunc_BooleanAND_ReturnValue, bool Temp_bool_Variable_1, class APawn* CallFunc_GetInstigator_ReturnValue_1, bool CallFunc_IsLocallyControlled_ReturnValue, class APawn* CallFunc_GetInstigator_ReturnValue_2, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool CallFunc_IsLocallyControlled_ReturnValue_1, float CallFunc_GetChargePercent_ReturnValue_1, bool CallFunc_GreaterEqual_FloatFloat_ReturnValue, TArray<EFortTeamAffiliation>& K2Node_MakeArray_Array, bool Temp_bool_Variable_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, uint8 CallFunc_GetActorTeam_ReturnValue, bool CallFunc_IsValid_ReturnValue_2, class USoundBase* K2Node_Select_Default, class USoundBase* K2Node_Select_Default_1, class APawn* CallFunc_GetInstigator_ReturnValue_3, class UFXSystemComponent* CallFunc_SpawnAltFXAttached_ReturnValue, class USceneComponent* CallFunc_K2_GetRootComponent_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue, bool Temp_bool_Variable_3, class UFXSystemComponent* CallFunc_SpawnAltFXAttached_ReturnValue_1, class USoundBase* K2Node_Select_Default_2, class USoundBase* K2Node_Select_Default_3, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue_1);
	void OnReachedMaxCharge();
	void ReceiveTick(float DeltaSeconds);
	void OnWeaponAttached();
	void IncreaseDrawStrength();
	void ResetCharge();
	void OnEndCharge();
	void OnChargeUp();
	void OnChargeDown();
	void K2_OnUnEquip();
	void EndOfCharge();
	void OnPlayWeaponFireFX(bool bPersistentFire, bool bSecondaryFire);
	void OnStartCharge();
	void OnReachedMinCharge();
	void SetupTrajectoryProjectile(struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, class AActor* CallFunc_FinishSpawningActor_ReturnValue, class ABP_ProjectileTrajectory_Bow_Generic_C* K2Node_DynamicCast_AsBP_Projectile_Trajectory_Bow_Generic, bool K2Node_DynamicCast_bSuccess);
	void SetDummyVariables(struct FTransform& CallFunc_GetTransform_ReturnValue, class AActor* CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue, ECollisionChannel CallFunc_GetCollisionObjectType_ReturnValue, class AFortProjectileBase* CallFunc_FinishSpawningActor_ReturnValue, float CallFunc_GetScaledCapsuleSize_OutRadius, float CallFunc_GetScaledCapsuleSize_OutHalfHeight, float CallFunc_FMax_ReturnValue, float CallFunc_GetGravityZ_ReturnValue);
	void CalculateTrajectorySpline(float CallFunc_GetChargePercent_ReturnValue, float CallFunc_Lerp_ReturnValue, const struct FVector& CallFunc_SetupProjectileVariables_StartLocation, const struct FVector& CallFunc_SetupProjectileVariables_InitialVelocity, float CallFunc_SetupProjectileVariables_ProjectileVelocity, const struct FRotator& CallFunc_SetupProjectileVariables_OutRotation, const struct FHitResult& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutHitResult, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplinePoints, TArray<struct FVector>& CallFunc_CalculateProjectileTrajectorySplineWithHit_OutSplineTangents);
	void StartDrawAudio(bool CallFunc_IsValid_ReturnValue, class UAudioComponent* CallFunc_SpawnSoundAttached_ReturnValue);
	void StopDrawAudio(bool CallFunc_IsValid_ReturnValue);

	void CalculateVelocity(float* Velocity, float CallFunc_GetChargePercent_ReturnValue, float CallFunc_GetProjectileSpeed_ReturnValue) const;
	void SetupProjectileVariables(struct FVector* StartLocation, struct FVector* InitialVelocity, float* Param_ProjectileVelocity, struct FRotator* OutRotation, float CallFunc_GetProjectilePitchOffset_ReturnValue, const struct FVector& CallFunc_GetDamageStartLocation_AimDir, const struct FVector& CallFunc_GetDamageStartLocation_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, float CallFunc_BreakRotator_Roll, float CallFunc_BreakRotator_Pitch, float CallFunc_BreakRotator_Yaw, float CallFunc_Add_FloatFloat_ReturnValue, const struct FRotator& CallFunc_MakeRotator_ReturnValue, const struct FVector& CallFunc_Conv_RotatorToVector_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_Bow_Athena_Parent_C">();
	}
	static class AB_Bow_Athena_Parent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_Bow_Athena_Parent_C>();
	}
};
static_assert(alignof(AB_Bow_Athena_Parent_C) == 0x000008, "Wrong alinment on AB_Bow_Athena_Parent_C");
static_assert(sizeof(AB_Bow_Athena_Parent_C) == 0x0013C8, "Wrong size on AB_Bow_Athena_Parent_C");
static_assert(offsetof(AB_Bow_Athena_Parent_C, UberGraphFrame_B_Bow_Athena_Parent_C) == 0x0012C8, "Member 'AB_Bow_Athena_Parent_C::UberGraphFrame_B_Bow_Athena_Parent_C' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullCharge_AudioComponent) == 0x0012D0, "Member 'AB_Bow_Athena_Parent_C::FullCharge_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Ambient_Charge_AudioComponent) == 0x0012D8, "Member 'AB_Bow_Athena_Parent_C::Ambient_Charge_AudioComponent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, PlayerPawn) == 0x0012E0, "Member 'AB_Bow_Athena_Parent_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedMaxCharge) == 0x0012E8, "Member 'AB_Bow_Athena_Parent_C::ReachedMaxCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedMinCharge) == 0x0012E9, "Member 'AB_Bow_Athena_Parent_C::ReachedMinCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ReachedHalfCharge) == 0x0012EA, "Member 'AB_Bow_Athena_Parent_C::ReachedHalfCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Charging) == 0x0012EB, "Member 'AB_Bow_Athena_Parent_C::Charging' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ChargeAudio) == 0x0012F0, "Member 'AB_Bow_Athena_Parent_C::ChargeAudio' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Prj_Dummy) == 0x0012F8, "Member 'AB_Bow_Athena_Parent_C::Prj_Dummy' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyProjectile) == 0x001300, "Member 'AB_Bow_Athena_Parent_C::DummyProjectile' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyExtent) == 0x001308, "Member 'AB_Bow_Athena_Parent_C::DummyExtent' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyMaxSpeed) == 0x00130C, "Member 'AB_Bow_Athena_Parent_C::DummyMaxSpeed' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, ProjectileVelocity) == 0x001310, "Member 'AB_Bow_Athena_Parent_C::ProjectileVelocity' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyFriction) == 0x001314, "Member 'AB_Bow_Athena_Parent_C::DummyFriction' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyBouncieness) == 0x001318, "Member 'AB_Bow_Athena_Parent_C::DummyBouncieness' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyGravity) == 0x00131C, "Member 'AB_Bow_Athena_Parent_C::DummyGravity' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyTimeStep) == 0x001320, "Member 'AB_Bow_Athena_Parent_C::DummyTimeStep' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, DummyCollisionChannel) == 0x001324, "Member 'AB_Bow_Athena_Parent_C::DummyCollisionChannel' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Row_MaxProjectileSpeed) == 0x001328, "Member 'AB_Bow_Athena_Parent_C::Row_MaxProjectileSpeed' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, TrajectoryClass) == 0x001350, "Member 'AB_Bow_Athena_Parent_C::TrajectoryClass' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, BowTrajectory) == 0x001358, "Member 'AB_Bow_Athena_Parent_C::BowTrajectory' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Timer_UpdateTrajectorySpline) == 0x001360, "Member 'AB_Bow_Athena_Parent_C::Timer_UpdateTrajectorySpline' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, IsBowEquipped) == 0x001368, "Member 'AB_Bow_Athena_Parent_C::IsBowEquipped' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, LowTensionFire) == 0x001370, "Member 'AB_Bow_Athena_Parent_C::LowTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NormalTensionFire) == 0x001378, "Member 'AB_Bow_Athena_Parent_C::NormalTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullTensionFire) == 0x001380, "Member 'AB_Bow_Athena_Parent_C::FullTensionFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FullTensionFireP1) == 0x001388, "Member 'AB_Bow_Athena_Parent_C::FullTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, LowTensionFireP1) == 0x001390, "Member 'AB_Bow_Athena_Parent_C::LowTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NormalTensionFireP1) == 0x001398, "Member 'AB_Bow_Athena_Parent_C::NormalTensionFireP1' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FX_AdditionalFire) == 0x0013A0, "Member 'AB_Bow_Athena_Parent_C::FX_AdditionalFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, FX_FullyCharge) == 0x0013A8, "Member 'AB_Bow_Athena_Parent_C::FX_FullyCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, Sound_OnCharge) == 0x0013B0, "Member 'AB_Bow_Athena_Parent_C::Sound_OnCharge' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NS_AdditionalFire) == 0x0013B8, "Member 'AB_Bow_Athena_Parent_C::NS_AdditionalFire' has a wrong offset!");
static_assert(offsetof(AB_Bow_Athena_Parent_C, NS_FullyCHarge) == 0x0013C0, "Member 'AB_Bow_Athena_Parent_C::NS_FullyCHarge' has a wrong offset!");

}

