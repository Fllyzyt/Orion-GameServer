#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: B_HeldObject_Snowball

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BGA_HeldObject_Parent_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass B_HeldObject_Snowball.B_HeldObject_Snowball_C
// 0x0120 (0x0AD0 - 0x09B0)
class AB_HeldObject_Snowball_C final  : public ABGA_HeldObject_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_B_HeldObject_Snowball_C;            // 0x09B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DropAnimation_Z_Pos_888F8AB94C79F6A9DEB3149DDCAC3D72; // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DropAnimation__Direction_888F8AB94C79F6A9DEB3149DDCAC3D72; // 0x09C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5823[0x3];                                     // 0x09C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DropAnimation;                                     // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SnowCheckTimer;                                    // 0x09D0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SnowballScale;                                     // 0x09D8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationRate;                                      // 0x09DC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StartZPos;                                         // 0x09E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WasThrown;                                         // 0x09EC(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5824[0x3];                                     // 0x09ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaterScaleMultiplier;                              // 0x09F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5825[0x4];                                     // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AFortPlayerPawn*                        LastHolder;                                        // 0x09F8(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Held;                                              // 0x0A00(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5826[0x7];                                     // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         PlayerDamageMultiplier;                            // 0x0A08(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         EnvDamageMultiplier;                               // 0x0A30(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         GrowingSpeed;                                      // 0x0A58(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FScalableFloat                         MaxScale;                                          // 0x0A80(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                LastPosition;                                      // 0x0AA8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Died;                                              // 0x0AB4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          WasJustThrown;                                     // 0x0AB5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DoneDropping;                                      // 0x0AB6(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5827[0x1];                                     // 0x0AB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ImpactNormal;                                      // 0x0AB8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_B_HeldObject_Snowball(int32 EntryPoint, class UParticleSystem* Temp_object_Variable, class UParticleSystem* Temp_object_Variable_1, bool Temp_bool_Variable, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, class UPrimitiveComponent* K2Node_ComponentBoundEvent_HitComponent, class AActor* K2Node_ComponentBoundEvent_OtherActor, class UPrimitiveComponent* K2Node_ComponentBoundEvent_OtherComp, const struct FVector& K2Node_ComponentBoundEvent_NormalImpulse, struct FHitResult& K2Node_ComponentBoundEvent_Hit, class AActor* K2Node_CustomEvent_DamagedActor_1, float K2Node_CustomEvent_Damage_1, class AController* K2Node_CustomEvent_InstigatedBy_1, class AActor* K2Node_CustomEvent_DamageCauser_1, const struct FVector& K2Node_CustomEvent_HitLocation_1, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent_1, class FName K2Node_CustomEvent_BoneName_1, const struct FVector& K2Node_CustomEvent_Momentum_1, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, const struct FVector& CallFunc_K2_GetComponentScale_ReturnValue, const struct FRotator& CallFunc_Conv_VectorToRotator_ReturnValue, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate, const struct FVector& CallFunc_K2_GetComponentScale_ReturnValue_1, const struct FVector& CallFunc_Divide_VectorFloat_ReturnValue_1, class AActor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, class AController* K2Node_CustomEvent_InstigatedBy, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_HitLocation, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent, class FName K2Node_CustomEvent_BoneName, const struct FVector& K2Node_CustomEvent_Momentum, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_1, bool Temp_bool_Variable_1, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_3, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_4, float CallFunc_BreakVector_X, float CallFunc_BreakVector_Y, float CallFunc_BreakVector_Z, float CallFunc_BreakVector_X_1, float CallFunc_BreakVector_Y_1, float CallFunc_BreakVector_Z_1, class AFortPawn* K2Node_Event_InteractingPawn, EInteractionBeingAttempted K2Node_Event_InteractionBeingAttempted, bool CallFunc_IsServer_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, TDelegate<void(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent, bool bIsFirstBody)> K2Node_CreateDelegate_OutputDelegate_2, class AFortWaterBodyActor* K2Node_CustomEvent_WaterBody, class UFortWaterInteractionComponent* K2Node_CustomEvent_WaterInteractionComponent, bool K2Node_CustomEvent_bIsFirstBody, class AFortPlayerPawn* K2Node_CustomEvent_Instigator, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsInWater_ReturnValue, class UParticleSystem* K2Node_Select_Default, class UParticleSystemComponent* CallFunc_SpawnEmitterAtLocation_ReturnValue_1, class AFortPlayerPawn* K2Node_CustomEvent_LastHolder, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, int32 Temp_int_Array_Index_Variable, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_5, float CallFunc_Multiply_FloatFloat_ReturnValue, class UFortAbilitySystemComponent* CallFunc_GetFortAbilitySystemComponent_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue, TArray<class AActor*>& Temp_object_Variable_2, const struct FVector& CallFunc_MakeVector_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, const struct FHitResult& CallFunc_K2_SetActorLocation_SweepHitResult, bool CallFunc_K2_SetActorLocation_ReturnValue, TArray<class AActor*>& CallFunc_FilterByLOS__Result, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_Less_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_6, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FVector& CallFunc_Normal_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_FortApplyGameplayEffectToTarget_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class APlayerPawn_Athena_C* K2Node_DynamicCast_AsPlayer_Pawn_Athena, bool K2Node_DynamicCast_bSuccess_2, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_2, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_1, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_OnSameTeam_ReturnValue, class AB_Athena_Wumba_C* K2Node_DynamicCast_AsB_Athena_Wumba, bool K2Node_DynamicCast_bSuccess_4, bool CallFunc_BooleanAND_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_3, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_7, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_IsValid_ReturnValue_2, class APawn* CallFunc_K2_GetPawn_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn_2, bool K2Node_DynamicCast_bSuccess_5, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_4, const struct FGameplayEffectSpecHandle& CallFunc_MakeOutgoingSpec_ReturnValue_1, struct FGameplayEffectSpecHandle& K2Node_Select_Default_1, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectSpecToTarget_ReturnValue);
	void BndEvt__FortLinkToActor_K2Node_ComponentBoundEvent_5_OnLinkedActorDisconnected__DelegateSignature();
	void Play_Drop_Animation();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_1_OnHeldObjectThrown__DelegateSignature();
	void StopDropping();
	void BlowUp(class AFortPlayerPawn* Param_LastHolder);
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_4_OnHeldObjectPickedUp__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_3_OnHeldObjectPlaced__DelegateSignature();
	void BndEvt__FortHeldObject_K2Node_ComponentBoundEvent_2_OnHeldObjectDropped__DelegateSignature();
	void SetInstigator(class AFortPlayerPawn* Param_Instigator);
	void EnterWater(class AFortWaterBodyActor* WaterBody, class UFortWaterInteractionComponent* WaterInteractionComponent, bool bIsFirstBody);
	void BlueprintOnInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted);
	void EventSnowballDeath(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnHit(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void BndEvt__Capsule_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void DropAnimation__UpdateFunc();
	void DropAnimation__FinishedFunc();
	void FilterByLOS(TArray<class AActor*>& Array, TArray<class AActor*>* _Result, const TArray<class AActor*>& Result, int32 CallFunc_Array_Length_ReturnValue, int32 Temp_int_Array_Index_Variable, int32 Temp_int_Loop_Counter_Variable, class AActor* CallFunc_Array_Get_Item, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, bool CallFunc_CheckLineOfSightToActor_ReturnValue, int32 CallFunc_Array_Add_ReturnValue);
	void Server_Only_Handle_Attach_To_Vehicle(const struct FVector& HitLoc, class UPrimitiveComponent* Param_HitComponentToAttachTo);
	void Server_Only_Handle_Player_Controller_OnUnPossess(class APawn* PlayerPawn);

	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType, bool CallFunc_IsValid_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput, bool CallFunc_HasAnyMatchingGameplayTags_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_Not_PreBool_ReturnValue_1, bool CallFunc_CanInteract_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_LessEqual_FloatFloat_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue_2) const;
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"B_HeldObject_Snowball_C">();
	}
	static class AB_HeldObject_Snowball_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AB_HeldObject_Snowball_C>();
	}
};
static_assert(alignof(AB_HeldObject_Snowball_C) == 0x000010, "Wrong alinment on AB_HeldObject_Snowball_C");
static_assert(sizeof(AB_HeldObject_Snowball_C) == 0x000AD0, "Wrong size on AB_HeldObject_Snowball_C");
static_assert(offsetof(AB_HeldObject_Snowball_C, UberGraphFrame_B_HeldObject_Snowball_C) == 0x0009B0, "Member 'AB_HeldObject_Snowball_C::UberGraphFrame_B_HeldObject_Snowball_C' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, StaticMesh) == 0x0009B8, "Member 'AB_HeldObject_Snowball_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, DropAnimation_Z_Pos_888F8AB94C79F6A9DEB3149DDCAC3D72) == 0x0009C0, "Member 'AB_HeldObject_Snowball_C::DropAnimation_Z_Pos_888F8AB94C79F6A9DEB3149DDCAC3D72' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, DropAnimation__Direction_888F8AB94C79F6A9DEB3149DDCAC3D72) == 0x0009C4, "Member 'AB_HeldObject_Snowball_C::DropAnimation__Direction_888F8AB94C79F6A9DEB3149DDCAC3D72' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, DropAnimation) == 0x0009C8, "Member 'AB_HeldObject_Snowball_C::DropAnimation' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, SnowCheckTimer) == 0x0009D0, "Member 'AB_HeldObject_Snowball_C::SnowCheckTimer' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, SnowballScale) == 0x0009D8, "Member 'AB_HeldObject_Snowball_C::SnowballScale' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, RotationRate) == 0x0009DC, "Member 'AB_HeldObject_Snowball_C::RotationRate' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, StartZPos) == 0x0009E8, "Member 'AB_HeldObject_Snowball_C::StartZPos' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, WasThrown) == 0x0009EC, "Member 'AB_HeldObject_Snowball_C::WasThrown' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, WaterScaleMultiplier) == 0x0009F0, "Member 'AB_HeldObject_Snowball_C::WaterScaleMultiplier' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, LastHolder) == 0x0009F8, "Member 'AB_HeldObject_Snowball_C::LastHolder' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, Held) == 0x000A00, "Member 'AB_HeldObject_Snowball_C::Held' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, PlayerDamageMultiplier) == 0x000A08, "Member 'AB_HeldObject_Snowball_C::PlayerDamageMultiplier' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, EnvDamageMultiplier) == 0x000A30, "Member 'AB_HeldObject_Snowball_C::EnvDamageMultiplier' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, GrowingSpeed) == 0x000A58, "Member 'AB_HeldObject_Snowball_C::GrowingSpeed' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, MaxScale) == 0x000A80, "Member 'AB_HeldObject_Snowball_C::MaxScale' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, LastPosition) == 0x000AA8, "Member 'AB_HeldObject_Snowball_C::LastPosition' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, Died) == 0x000AB4, "Member 'AB_HeldObject_Snowball_C::Died' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, WasJustThrown) == 0x000AB5, "Member 'AB_HeldObject_Snowball_C::WasJustThrown' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, DoneDropping) == 0x000AB6, "Member 'AB_HeldObject_Snowball_C::DoneDropping' has a wrong offset!");
static_assert(offsetof(AB_HeldObject_Snowball_C, ImpactNormal) == 0x000AB8, "Member 'AB_HeldObject_Snowball_C::ImpactNormal' has a wrong offset!");

}

