#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ReplayPC_Athena

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FortniteGame_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ReplayPC_Athena.BP_ReplayPC_Athena_C
// 0x00C0 (0x3AC0 - 0x3A00)
class ABP_ReplayPC_Athena_C final  : public AFortReplaySpectatorAthena
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x3A00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPostProcessComponent*                  PostProcess;                                       // 0x3A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUnderwaterAudioComponent_C*            UnderwaterAudioComponent;                          // 0x3A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TMap<float, class USoundMix*>                 PlaybackRateMap;                                   // 0x3A18(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         CurrentPlayRate;                                   // 0x3A68(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFast;                                           // 0x3A6C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60BF[0x3];                                     // 0x3A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        SpeedupLoop;                                       // 0x3A70(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        SlowdownLoop;                                      // 0x3A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsHudVisible;                                     // 0x3A80(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C0[0x7];                                     // 0x3A81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        ZoomOutLoop;                                       // 0x3A88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        ZoomInLoop;                                        // 0x3A90(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSkydivingAudioEnabled;                          // 0x3A98(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsTargetParachuting;                              // 0x3A99(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsTargetSkydiving;                                // 0x3A9A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C1[0x5];                                     // 0x3A9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        SkydivingAudioLoop;                                // 0x3AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPaused;                                         // 0x3AA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_60C2[0x7];                                     // 0x3AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CurrentSkydivingSound;                             // 0x3AB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundMix*                              PauseMIx;                                          // 0x3AB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ReplayPC_Athena(int32 EntryPoint, bool Temp_bool_Variable, bool Temp_bool_Variable_1, bool Temp_bool_Variable_2, bool Temp_bool_Variable_3, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class UFortReplayContext* CallFunc_GetContext_ReturnValue, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue, class USoundBase* Temp_object_Variable, EHudVisibilityState Temp_byte_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsLocalPlayerController_ReturnValue, float K2Node_Event_NewMultiplier, class USoundMix* CallFunc_Map_Find_Value, bool CallFunc_Map_Find_ReturnValue, TArray<class USoundMix*>& CallFunc_Map_Values_Values, int32 Temp_int_Array_Index_Variable, int32 CallFunc_Array_Length_ReturnValue, class USoundMix* CallFunc_Array_Get_Item, bool CallFunc_NotEqual_ObjectObject_ReturnValue, float K2Node_CustomEvent_Playback_Multiplier, bool CallFunc_Less_FloatFloat_ReturnValue, bool CallFunc_Greater_FloatFloat_ReturnValue, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue_1, float CallFunc_MapRangeClamped_ReturnValue, class UFortReplayContext* CallFunc_GetContext_ReturnValue_1, bool CallFunc_Greater_FloatFloat_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_3, class USoundBase* Temp_object_Variable_1, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue_2, float CallFunc_MapRangeClamped_ReturnValue_1, bool Temp_bool_Variable_4, float CallFunc_Subtract_FloatFloat_ReturnValue, class USoundBase* K2Node_Select_Default, bool CallFunc_IsValid_ReturnValue_4, EHudVisibilityState K2Node_CustomEvent_IsVisible, bool CallFunc_NotEqual_FloatFloat_ReturnValue, bool K2Node_Select_Default_1, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue_3, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue_4, TDelegate<void(EHudVisibilityState IsVisible)> K2Node_CreateDelegate_OutputDelegate, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_IsValid_ReturnValue_5, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanAND_ReturnValue, bool CallFunc_IsValid_ReturnValue_6, struct FTransform& Temp_struct_Variable, class UBP_AmbientAudioController_C* CallFunc_AddComponent_ReturnValue, class USoundBase* CallFunc_GetSkydivingSound_ReturnValue, class USoundBase* CallFunc_GetSkydivingSound_ReturnValue_1, bool CallFunc_NotEqual_ObjectObject_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_7, class AActor* CallFunc_GetViewTarget_ReturnValue, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue_8, bool CallFunc_IsParachuteOpen_ReturnValue, bool CallFunc_Not_PreBool_ReturnValue, bool CallFunc_IsSkydiving_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_1, bool K2Node_CustomEvent_bPaused, TDelegate<void(bool bPaused)> K2Node_CreateDelegate_OutputDelegate_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, bool CallFunc_IsGameplayCamera_IsGameplayCamera, bool CallFunc_IsGameplayCamera_IsGameplayCamera_1, bool CallFunc_IsGameplayCamera_IsGameplayCamera_2, bool CallFunc_IsGameplayCamera_IsGameplayCamera_3, bool CallFunc_GetIsPlayingReplay_ReturnValue, bool CallFunc_NotEqual_BoolBool_ReturnValue, bool CallFunc_BooleanAND_ReturnValue_2, bool CallFunc_IsValid_ReturnValue_9, int32 Temp_int_Loop_Counter_Variable, bool CallFunc_Less_IntInt_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue);
	void Update_Sound_Mix();
	void Looping_Audio_Update();
	void Handle_Parachute_Audio_State();
	void On_Pause_State_Changed(bool bPaused);
	void OnZoomInBegin();
	void OnZoomInEnd();
	void OnZoomOutBegin();
	void OnZoomOutEnd();
	void OnReplayHudVisibilityChanged(EHudVisibilityState IsVisible);
	void _Speedup_Loops(float Playback_Multiplier);
	void OnNotifyNewPlaybackMultiplier(float NewMultiplier);
	void ReceiveBeginPlay();
	void UserConstructionScript(class UAthenaMarkerComponent* CallFunc_GetMarkerComponent_ReturnValue);
	class USoundBase* GetSkydivingSound(bool Temp_bool_Variable, class USoundBase* Temp_object_Variable, class USoundBase* Temp_object_Variable_1, class USoundBase* K2Node_Select_Default);
	void SetSkydivingAudioEnabled(bool Enabled, class UAudioComponent* CallFunc_SpawnSound2D_ReturnValue, bool CallFunc_IsValid_ReturnValue, class USoundBase* CallFunc_GetSkydivingSound_ReturnValue);
	void IsGameplayCamera(bool* Param_IsGameplayCamera, bool NewLocalVar_0, bool CallFunc_EqualEqual_ByteByte_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ReplayPC_Athena_C">();
	}
	static class ABP_ReplayPC_Athena_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ReplayPC_Athena_C>();
	}
};
static_assert(alignof(ABP_ReplayPC_Athena_C) == 0x000010, "Wrong alinment on ABP_ReplayPC_Athena_C");
static_assert(sizeof(ABP_ReplayPC_Athena_C) == 0x003AC0, "Wrong size on ABP_ReplayPC_Athena_C");
static_assert(offsetof(ABP_ReplayPC_Athena_C, UberGraphFrame) == 0x003A00, "Member 'ABP_ReplayPC_Athena_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, PostProcess) == 0x003A08, "Member 'ABP_ReplayPC_Athena_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, UnderwaterAudioComponent) == 0x003A10, "Member 'ABP_ReplayPC_Athena_C::UnderwaterAudioComponent' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, PlaybackRateMap) == 0x003A18, "Member 'ABP_ReplayPC_Athena_C::PlaybackRateMap' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, CurrentPlayRate) == 0x003A68, "Member 'ABP_ReplayPC_Athena_C::CurrentPlayRate' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsFast) == 0x003A6C, "Member 'ABP_ReplayPC_Athena_C::bIsFast' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, SpeedupLoop) == 0x003A70, "Member 'ABP_ReplayPC_Athena_C::SpeedupLoop' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, SlowdownLoop) == 0x003A78, "Member 'ABP_ReplayPC_Athena_C::SlowdownLoop' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsHudVisible) == 0x003A80, "Member 'ABP_ReplayPC_Athena_C::bIsHudVisible' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, ZoomOutLoop) == 0x003A88, "Member 'ABP_ReplayPC_Athena_C::ZoomOutLoop' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, ZoomInLoop) == 0x003A90, "Member 'ABP_ReplayPC_Athena_C::ZoomInLoop' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsSkydivingAudioEnabled) == 0x003A98, "Member 'ABP_ReplayPC_Athena_C::bIsSkydivingAudioEnabled' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsTargetParachuting) == 0x003A99, "Member 'ABP_ReplayPC_Athena_C::bIsTargetParachuting' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsTargetSkydiving) == 0x003A9A, "Member 'ABP_ReplayPC_Athena_C::bIsTargetSkydiving' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, SkydivingAudioLoop) == 0x003AA0, "Member 'ABP_ReplayPC_Athena_C::SkydivingAudioLoop' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, bIsPaused) == 0x003AA8, "Member 'ABP_ReplayPC_Athena_C::bIsPaused' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, CurrentSkydivingSound) == 0x003AB0, "Member 'ABP_ReplayPC_Athena_C::CurrentSkydivingSound' has a wrong offset!");
static_assert(offsetof(ABP_ReplayPC_Athena_C, PauseMIx) == 0x003AB8, "Member 'ABP_ReplayPC_Athena_C::PauseMIx' has a wrong offset!");

}

