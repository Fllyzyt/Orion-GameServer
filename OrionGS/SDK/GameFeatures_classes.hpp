#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameFeatures

#include "Basic.hpp"

#include "GameFeatures_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class GameFeatures.GameFeatureAction
// 0x0000 (0x0028 - 0x0028)
class UGameFeatureAction : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeatureAction">();
	}
	static class UGameFeatureAction* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction>();
	}
};
static_assert(alignof(UGameFeatureAction) == 0x000008, "Wrong alinment on UGameFeatureAction");
static_assert(sizeof(UGameFeatureAction) == 0x000028, "Wrong size on UGameFeatureAction");

// Class GameFeatures.GameFeatureData
// 0x0020 (0x0050 - 0x0030)
class UGameFeatureData : public UPrimaryDataAsset
{
public:
	TArray<class UGameFeatureAction*>             Actions;                                           // 0x0030(0x0010)(Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPrimaryAssetTypeInfo>          PrimaryAssetTypesToScan;                           // 0x0040(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeatureData">();
	}
	static class UGameFeatureData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureData>();
	}
};
static_assert(alignof(UGameFeatureData) == 0x000008, "Wrong alinment on UGameFeatureData");
static_assert(sizeof(UGameFeatureData) == 0x000050, "Wrong size on UGameFeatureData");
static_assert(offsetof(UGameFeatureData, Actions) == 0x000030, "Member 'UGameFeatureData::Actions' has a wrong offset!");
static_assert(offsetof(UGameFeatureData, PrimaryAssetTypesToScan) == 0x000040, "Member 'UGameFeatureData::PrimaryAssetTypesToScan' has a wrong offset!");

// Class GameFeatures.GameFeatureAction_AddCheats
// 0x0028 (0x0050 - 0x0028)
class UGameFeatureAction_AddCheats final  : public UGameFeatureAction
{
public:
	TArray<TSubclassOf<class UCheatManagerExtension>> CheatManagers;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44CF[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UCheatManagerExtension*>         SpawnedCheatManagers;                              // 0x0040(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeatureAction_AddCheats">();
	}
	static class UGameFeatureAction_AddCheats* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AddCheats>();
	}
};
static_assert(alignof(UGameFeatureAction_AddCheats) == 0x000008, "Wrong alinment on UGameFeatureAction_AddCheats");
static_assert(sizeof(UGameFeatureAction_AddCheats) == 0x000050, "Wrong size on UGameFeatureAction_AddCheats");
static_assert(offsetof(UGameFeatureAction_AddCheats, CheatManagers) == 0x000028, "Member 'UGameFeatureAction_AddCheats::CheatManagers' has a wrong offset!");
static_assert(offsetof(UGameFeatureAction_AddCheats, SpawnedCheatManagers) == 0x000040, "Member 'UGameFeatureAction_AddCheats::SpawnedCheatManagers' has a wrong offset!");

// Class GameFeatures.GameFeatureAction_AddComponents
// 0x0028 (0x0050 - 0x0028)
class UGameFeatureAction_AddComponents final  : public UGameFeatureAction
{
public:
	TArray<struct FGameFeatureComponentEntry>     ComponentList;                                     // 0x0028(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_44D0[0x18];                                    // 0x0038(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeatureAction_AddComponents">();
	}
	static class UGameFeatureAction_AddComponents* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureAction_AddComponents>();
	}
};
static_assert(alignof(UGameFeatureAction_AddComponents) == 0x000008, "Wrong alinment on UGameFeatureAction_AddComponents");
static_assert(sizeof(UGameFeatureAction_AddComponents) == 0x000050, "Wrong size on UGameFeatureAction_AddComponents");
static_assert(offsetof(UGameFeatureAction_AddComponents, ComponentList) == 0x000028, "Member 'UGameFeatureAction_AddComponents::ComponentList' has a wrong offset!");

// Class GameFeatures.GameFeaturePluginStateMachine
// 0x0130 (0x0158 - 0x0028)
class UGameFeaturePluginStateMachine final  : public UObject
{
public:
	uint8                                         Pad_44D1[0x20];                                    // 0x0028(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameFeaturePluginStateMachineProperties StateProperties;                                   // 0x0048(0x0070)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44D2[0xA0];                                    // 0x00B8(0x00A0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeaturePluginStateMachine">();
	}
	static class UGameFeaturePluginStateMachine* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeaturePluginStateMachine>();
	}
};
static_assert(alignof(UGameFeaturePluginStateMachine) == 0x000008, "Wrong alinment on UGameFeaturePluginStateMachine");
static_assert(sizeof(UGameFeaturePluginStateMachine) == 0x000158, "Wrong size on UGameFeaturePluginStateMachine");
static_assert(offsetof(UGameFeaturePluginStateMachine, StateProperties) == 0x000048, "Member 'UGameFeaturePluginStateMachine::StateProperties' has a wrong offset!");

// Class GameFeatures.GameFeaturesProjectPolicies
// 0x0000 (0x0028 - 0x0028)
class UGameFeaturesProjectPolicies : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeaturesProjectPolicies">();
	}
	static class UGameFeaturesProjectPolicies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeaturesProjectPolicies>();
	}
};
static_assert(alignof(UGameFeaturesProjectPolicies) == 0x000008, "Wrong alinment on UGameFeaturesProjectPolicies");
static_assert(sizeof(UGameFeaturesProjectPolicies) == 0x000028, "Wrong size on UGameFeaturesProjectPolicies");

// Class GameFeatures.DefaultGameFeaturesProjectPolicies
// 0x0000 (0x0028 - 0x0028)
class UDefaultGameFeaturesProjectPolicies final  : public UGameFeaturesProjectPolicies
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"DefaultGameFeaturesProjectPolicies">();
	}
	static class UDefaultGameFeaturesProjectPolicies* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDefaultGameFeaturesProjectPolicies>();
	}
};
static_assert(alignof(UDefaultGameFeaturesProjectPolicies) == 0x000008, "Wrong alinment on UDefaultGameFeaturesProjectPolicies");
static_assert(sizeof(UDefaultGameFeaturesProjectPolicies) == 0x000028, "Wrong size on UDefaultGameFeaturesProjectPolicies");

// Class GameFeatures.GameFeaturesSubsystem
// 0x00C0 (0x00F0 - 0x0030)
class UGameFeaturesSubsystem final  : public UEngineSubsystem
{
public:
	TMap<class FString, class UGameFeaturePluginStateMachine*> GameFeaturePluginStateMachines;                    // 0x0030(0x0050)(Transient, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44D3[0x50];                                    // 0x0080(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UGameFeatureStateChangeObserver*> Observers;                                         // 0x00D0(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameFeaturesProjectPolicies*           GameSpecificPolicies;                              // 0x00E0(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_44D4[0x8];                                     // 0x00E8(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeaturesSubsystem">();
	}
	static class UGameFeaturesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeaturesSubsystem>();
	}
};
static_assert(alignof(UGameFeaturesSubsystem) == 0x000008, "Wrong alinment on UGameFeaturesSubsystem");
static_assert(sizeof(UGameFeaturesSubsystem) == 0x0000F0, "Wrong size on UGameFeaturesSubsystem");
static_assert(offsetof(UGameFeaturesSubsystem, GameFeaturePluginStateMachines) == 0x000030, "Member 'UGameFeaturesSubsystem::GameFeaturePluginStateMachines' has a wrong offset!");
static_assert(offsetof(UGameFeaturesSubsystem, Observers) == 0x0000D0, "Member 'UGameFeaturesSubsystem::Observers' has a wrong offset!");
static_assert(offsetof(UGameFeaturesSubsystem, GameSpecificPolicies) == 0x0000E0, "Member 'UGameFeaturesSubsystem::GameSpecificPolicies' has a wrong offset!");

// Class GameFeatures.GameFeaturesSubsystemSettings
// 0x0048 (0x0080 - 0x0038)
class UGameFeaturesSubsystemSettings final  : public UDeveloperSettings
{
public:
	struct FSoftClassPath                         GameFeaturesManagerClassName;                      // 0x0038(0x0018)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         DisabledPlugins;                                   // 0x0050(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         AdditionalPluginMetadataKeys;                      // 0x0060(0x0010)(Edit, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BuiltInGameFeaturePluginsFolder;                   // 0x0070(0x0010)(ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeaturesSubsystemSettings">();
	}
	static class UGameFeaturesSubsystemSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeaturesSubsystemSettings>();
	}
};
static_assert(alignof(UGameFeaturesSubsystemSettings) == 0x000008, "Wrong alinment on UGameFeaturesSubsystemSettings");
static_assert(sizeof(UGameFeaturesSubsystemSettings) == 0x000080, "Wrong size on UGameFeaturesSubsystemSettings");
static_assert(offsetof(UGameFeaturesSubsystemSettings, GameFeaturesManagerClassName) == 0x000038, "Member 'UGameFeaturesSubsystemSettings::GameFeaturesManagerClassName' has a wrong offset!");
static_assert(offsetof(UGameFeaturesSubsystemSettings, DisabledPlugins) == 0x000050, "Member 'UGameFeaturesSubsystemSettings::DisabledPlugins' has a wrong offset!");
static_assert(offsetof(UGameFeaturesSubsystemSettings, AdditionalPluginMetadataKeys) == 0x000060, "Member 'UGameFeaturesSubsystemSettings::AdditionalPluginMetadataKeys' has a wrong offset!");
static_assert(offsetof(UGameFeaturesSubsystemSettings, BuiltInGameFeaturePluginsFolder) == 0x000070, "Member 'UGameFeaturesSubsystemSettings::BuiltInGameFeaturePluginsFolder' has a wrong offset!");

// Class GameFeatures.GameFeatureStateChangeObserver
// 0x0000 (0x0028 - 0x0028)
class UGameFeatureStateChangeObserver : public UObject
{
public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GameFeatureStateChangeObserver">();
	}
	static class UGameFeatureStateChangeObserver* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameFeatureStateChangeObserver>();
	}
};
static_assert(alignof(UGameFeatureStateChangeObserver) == 0x000008, "Wrong alinment on UGameFeatureStateChangeObserver");
static_assert(sizeof(UGameFeatureStateChangeObserver) == 0x000028, "Wrong size on UGameFeatureStateChangeObserver");

}

