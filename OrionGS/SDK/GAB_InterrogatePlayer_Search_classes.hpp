#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GAB_InterrogatePlayer_Search

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "FortniteGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GAB_InterrogatePlayer_Search.GAB_InterrogatePlayer_Search_C
// 0x0120 (0x0C08 - 0x0AE8)
class UGAB_InterrogatePlayer_Search_C final  : public UFortGameplayAbility_CarryPlayer
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0AE8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            PlayerController;                                  // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        InterrogatedPlayer;                                // 0x0B00(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Anim_Search;                                       // 0x0B08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InterrogateHolster;                                // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LootTierGroupName;                                 // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFortWorldItemDefinition*               ItemDefinition;                                    // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberToSpawn;                                     // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LootSpawnOffset;                                   // 0x0B2C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         MaxDropsInstance;                                  // 0x0B38(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         NumDropsInstance;                                  // 0x0B60(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5754[0x4];                                     // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         KeycardDropBias;                                   // 0x0B68(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UFortWorldItemDefinition*>       KeycardItemDefinitions;                            // 0x0B90(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FGameplayTag                           T_Keycard_Yacht;                                   // 0x0BA0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Keycard_OilRig;                                  // 0x0BA8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Keycard_SharkIsland;                             // 0x0BB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Keycard_HQ;                                      // 0x0BB8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           T_Keycard_MountainBase;                            // 0x0BC0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer_Interrogation;                               // 0x0BC8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  T_ReticleHUD;                                      // 0x0BD0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTag                           T_NPC;                                             // 0x0BF0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_Cooldown;                                       // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_PickedUp;                                       // 0x0C00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GAB_InterrogatePlayer_Search(int32 EntryPoint, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_2, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_2, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData_1, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag_1, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate, struct FGameplayAbilityTargetDataHandle& K2Node_CustomEvent_TargetData, const struct FGameplayTag& K2Node_CustomEvent_ApplicationTag, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_1, const struct FGameplayTag& Temp_struct_Variable, const struct FGameplayAbilityTargetDataHandle& Temp_struct_Variable_1, bool GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum)> K2Node_CreateDelegate_OutputDelegate_3, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_4, bool K2Node_Event_bWasCancelled, class UFortAbilityTask_PlayMontageWaitTarget* CallFunc_PlayMontageWaitTarget_ReturnValue, bool CallFunc_IsValid_ReturnValue, TDelegate<void(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag)> K2Node_CreateDelegate_OutputDelegate_5, class UAbilityTask_WaitGameplayTagAdded* CallFunc_WaitGameplayTagAdd_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, bool CallFunc_IsValid_ReturnValue_2, class AActor* K2Node_CustomEvent_DamagedActor_1, float K2Node_CustomEvent_Damage_1, class AController* K2Node_CustomEvent_InstigatedBy_1, class AActor* K2Node_CustomEvent_DamageCauser_1, const struct FVector& K2Node_CustomEvent_HitLocation_1, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent_1, class FName K2Node_CustomEvent_BoneName_1, const struct FVector& K2Node_CustomEvent_Momentum_1, bool CallFunc_IsValid_ReturnValue_3, class AActor* K2Node_CustomEvent_DamagedActor, float K2Node_CustomEvent_Damage, class AController* K2Node_CustomEvent_InstigatedBy, class AActor* K2Node_CustomEvent_DamageCauser, const struct FVector& K2Node_CustomEvent_HitLocation, class UPrimitiveComponent* K2Node_CustomEvent_FHitComponent, class FName K2Node_CustomEvent_BoneName, const struct FVector& K2Node_CustomEvent_Momentum, bool CallFunc_IsValid_ReturnValue_4, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, class AFortPlayerPawn* CallFunc_GetDBNOHoistee_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue_1, const struct FGameplayEventData& K2Node_MakeStruct_GameplayEventData, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue, int32 CallFunc_IncrementAnalyticMatchCount_ReturnValue);
	void OnDied_Event_1(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void OnDied_Event_0(class AActor* DamagedActor, float Damage, class AController* InstigatedBy, class AActor* DamageCauser, const struct FVector& HitLocation, class UPrimitiveComponent* FHitComponent, class FName BoneName, const struct FVector& Momentum);
	void K2_OnEndAbility(bool bWasCancelled);
	void K2_ActivateAbility();
	void Added_9291D75D4A0949E1C5B7E49C1FD11F8B();
	void Triggered_6BBDC9B445D4280492A25E8E5EA7A53D(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Cancelled_6BBDC9B445D4280492A25E8E5EA7A53D(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void Completed_6BBDC9B445D4280492A25E8E5EA7A53D(struct FGameplayAbilityTargetDataHandle& TargetData, const struct FGameplayTag& ApplicationTag);
	void InitAbility(bool CallFunc_K2_CommitAbility_ReturnValue, const struct FGameplayAbilityActorInfo& CallFunc_GetActorInfo_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, class AFortPlayerPawn* CallFunc_GetDBNOHoistee_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class AFortPlayerControllerAthena* K2Node_DynamicCast_AsFort_Player_Controller_Athena, bool K2Node_DynamicCast_bSuccess_1, const struct FGameplayAbilityTargetDataHandle& CallFunc_AbilityTargetDataFromActor_ReturnValue, TArray<struct FActiveGameplayEffectHandle>& CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue);
	void EndAbilityCleanup(bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1);
	void ToggleReticleVisibility(bool Hide, class UFortHUDContext* CallFunc_GetContext_ReturnValue);
	void DropLoot(int32 Temp_int_Array_Index_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 Temp_int_Variable, bool CallFunc_Greater_IntInt_ReturnValue, int32 Temp_int_Loop_Counter_Variable, TArray<struct FFortItemEntry>& CallFunc_PickLootDrops_OutLootToDrop, bool CallFunc_PickLootDrops_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue_1, const struct FFortItemEntry& CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, class UFortWorldItemDefinition* K2Node_DynamicCast_AsFort_World_Item_Definition, bool K2Node_DynamicCast_bSuccess, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class AFortPickup* CallFunc_K2_SpawnPickupInWorld_ReturnValue);
	void GetKeycardToDrop(bool* HasKeycard, class UFortWorldItemDefinition** Output, int32 KeycardIndex, class UFortWorldItemDefinition* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1, bool CallFunc_HasMatchingGameplayTag_ReturnValue_1, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2, bool CallFunc_HasMatchingGameplayTag_ReturnValue_2, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3, bool CallFunc_HasMatchingGameplayTag_ReturnValue_3, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_4, bool CallFunc_HasMatchingGameplayTag_ReturnValue_4, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_5, bool CallFunc_HasMatchingGameplayTag_ReturnValue_5);
	void DropKeycard(bool CallFunc_IsDedicatedServer_ReturnValue, int32 Temp_int_Variable, bool CallFunc_GetKeycardToDrop_HasKeycard, class UFortWorldItemDefinition* CallFunc_GetKeycardToDrop_Output, float CallFunc_GetValueAtLevel_ReturnValue, int32 CallFunc_FTrunc_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, float CallFunc_GetValueAtLevel_ReturnValue_1, bool CallFunc_RandomBoolWithWeight_ReturnValue, bool CallFunc_IsValid_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, class AFortPickup* CallFunc_K2_SpawnPickupInWorld_ReturnValue);
	void ApplyGameplayEffectToNPC(class UClass* GameplayEffect, bool CallFunc_IsDedicatedServer_ReturnValue, bool CallFunc_IsValid_ReturnValue, class AFortPlayerPawn* CallFunc_GetDBNOHoistee_ReturnValue, bool CallFunc_IsValid_ReturnValue_1, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, const struct FActiveGameplayEffectHandle& CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue, TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput, bool CallFunc_HasMatchingGameplayTag_ReturnValue);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GAB_InterrogatePlayer_Search_C">();
	}
	static class UGAB_InterrogatePlayer_Search_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGAB_InterrogatePlayer_Search_C>();
	}
};
static_assert(alignof(UGAB_InterrogatePlayer_Search_C) == 0x000008, "Wrong alinment on UGAB_InterrogatePlayer_Search_C");
static_assert(sizeof(UGAB_InterrogatePlayer_Search_C) == 0x000C08, "Wrong size on UGAB_InterrogatePlayer_Search_C");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, UberGraphFrame) == 0x000AE8, "Member 'UGAB_InterrogatePlayer_Search_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, PlayerPawn) == 0x000AF0, "Member 'UGAB_InterrogatePlayer_Search_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, PlayerController) == 0x000AF8, "Member 'UGAB_InterrogatePlayer_Search_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, InterrogatedPlayer) == 0x000B00, "Member 'UGAB_InterrogatePlayer_Search_C::InterrogatedPlayer' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, Anim_Search) == 0x000B08, "Member 'UGAB_InterrogatePlayer_Search_C::Anim_Search' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, InterrogateHolster) == 0x000B10, "Member 'UGAB_InterrogatePlayer_Search_C::InterrogateHolster' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, LootTierGroupName) == 0x000B18, "Member 'UGAB_InterrogatePlayer_Search_C::LootTierGroupName' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, ItemDefinition) == 0x000B20, "Member 'UGAB_InterrogatePlayer_Search_C::ItemDefinition' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, NumberToSpawn) == 0x000B28, "Member 'UGAB_InterrogatePlayer_Search_C::NumberToSpawn' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, LootSpawnOffset) == 0x000B2C, "Member 'UGAB_InterrogatePlayer_Search_C::LootSpawnOffset' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, MaxDropsInstance) == 0x000B38, "Member 'UGAB_InterrogatePlayer_Search_C::MaxDropsInstance' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, NumDropsInstance) == 0x000B60, "Member 'UGAB_InterrogatePlayer_Search_C::NumDropsInstance' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, KeycardDropBias) == 0x000B68, "Member 'UGAB_InterrogatePlayer_Search_C::KeycardDropBias' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, KeycardItemDefinitions) == 0x000B90, "Member 'UGAB_InterrogatePlayer_Search_C::KeycardItemDefinitions' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_Keycard_Yacht) == 0x000BA0, "Member 'UGAB_InterrogatePlayer_Search_C::T_Keycard_Yacht' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_Keycard_OilRig) == 0x000BA8, "Member 'UGAB_InterrogatePlayer_Search_C::T_Keycard_OilRig' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_Keycard_SharkIsland) == 0x000BB0, "Member 'UGAB_InterrogatePlayer_Search_C::T_Keycard_SharkIsland' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_Keycard_HQ) == 0x000BB8, "Member 'UGAB_InterrogatePlayer_Search_C::T_Keycard_HQ' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_Keycard_MountainBase) == 0x000BC0, "Member 'UGAB_InterrogatePlayer_Search_C::T_Keycard_MountainBase' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, Timer_Interrogation) == 0x000BC8, "Member 'UGAB_InterrogatePlayer_Search_C::Timer_Interrogation' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_ReticleHUD) == 0x000BD0, "Member 'UGAB_InterrogatePlayer_Search_C::T_ReticleHUD' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, T_NPC) == 0x000BF0, "Member 'UGAB_InterrogatePlayer_Search_C::T_NPC' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, GE_Cooldown) == 0x000BF8, "Member 'UGAB_InterrogatePlayer_Search_C::GE_Cooldown' has a wrong offset!");
static_assert(offsetof(UGAB_InterrogatePlayer_Search_C, GE_PickedUp) == 0x000C00, "Member 'UGAB_InterrogatePlayer_Search_C::GE_PickedUp' has a wrong offset!");

}

