#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_WaffleTruck_TrackingPistol_Indicator

#include "Basic.hpp"

#include "GA_WaffleTruck_TrackingPistol_Indicator_classes.hpp"
#include "GA_WaffleTruck_TrackingPistol_Indicator_parameters.hpp"


namespace SDK
{

// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            CallFunc_GetAvatarAsFortPlayerController_ReturnValue   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          CallFunc_K2_GetActorLocation_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAbilitySystemComponent*          CallFunc_GetAbilitySystemComponent_ReturnValue         (ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FGameplayEventData               K2Node_Event_EventData                                 (ConstParm)
// TArray<class AActor*>                   CallFunc_GetHitActorsFromEventData_ReturnValue         (ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_IsDamgeFromSourceWeapon_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   CallFunc_Array_Length_ReturnValue                      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_Greater_IntInt_ReturnValue                    (ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           CallFunc_Array_Get_Item                                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawnAthena*            K2Node_DynamicCast_AsFort_Player_Pawn_Athena           (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FIndicatedActorParticleSystemDataCallFunc_MakeIndicatedActorParticleSystemData_ReturnValue(NoDestructor)
// struct FIndicatedActorData              CallFunc_MakeIndicatedActorData_ReturnValue            ()

void UGA_WaffleTruck_TrackingPistol_Indicator_C::ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator(int32 EntryPoint, class AFortPlayerController* CallFunc_GetAvatarAsFortPlayerController_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, class UAbilitySystemComponent* CallFunc_GetAbilitySystemComponent_ReturnValue, bool CallFunc_IsValid_ReturnValue, struct FGameplayEventData& K2Node_Event_EventData, TArray<class AActor*>& CallFunc_GetHitActorsFromEventData_ReturnValue, bool CallFunc_IsDamgeFromSourceWeapon_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue, class AActor* CallFunc_Array_Get_Item, class AFortPlayerPawnAthena* K2Node_DynamicCast_AsFort_Player_Pawn_Athena, bool K2Node_DynamicCast_bSuccess, const struct FIndicatedActorParticleSystemData& CallFunc_MakeIndicatedActorParticleSystemData_ReturnValue, const struct FIndicatedActorData& CallFunc_MakeIndicatedActorData_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_ExecuteUbergraph_GA_WaffleTruck_TrackingPistol_Indicator Parms{};

	Parms.EntryPoint = EntryPoint;
	Parms.CallFunc_GetAvatarAsFortPlayerController_ReturnValue = CallFunc_GetAvatarAsFortPlayerController_ReturnValue;
	Parms.CallFunc_K2_GetActorLocation_ReturnValue = std::move(CallFunc_K2_GetActorLocation_ReturnValue);
	Parms.CallFunc_GetAbilitySystemComponent_ReturnValue = CallFunc_GetAbilitySystemComponent_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_Event_EventData = std::move(K2Node_Event_EventData);
	Parms.CallFunc_GetHitActorsFromEventData_ReturnValue = std::move(CallFunc_GetHitActorsFromEventData_ReturnValue);
	Parms.CallFunc_IsDamgeFromSourceWeapon_ReturnValue = CallFunc_IsDamgeFromSourceWeapon_ReturnValue;
	Parms.CallFunc_Array_Length_ReturnValue = CallFunc_Array_Length_ReturnValue;
	Parms.CallFunc_Greater_IntInt_ReturnValue = CallFunc_Greater_IntInt_ReturnValue;
	Parms.CallFunc_Array_Get_Item = CallFunc_Array_Get_Item;
	Parms.K2Node_DynamicCast_AsFort_Player_Pawn_Athena = K2Node_DynamicCast_AsFort_Player_Pawn_Athena;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_MakeIndicatedActorParticleSystemData_ReturnValue = std::move(CallFunc_MakeIndicatedActorParticleSystemData_ReturnValue);
	Parms.CallFunc_MakeIndicatedActorData_ReturnValue = std::move(CallFunc_MakeIndicatedActorData_ReturnValue);

	UObject::ProcessEvent(Func, &Parms);

	CallFunc_GetHitActorsFromEventData_ReturnValue = std::move(Parms.CallFunc_GetHitActorsFromEventData_ReturnValue);
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.K2_ActivateAbilityFromEvent
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               EventData                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_WaffleTruck_TrackingPistol_Indicator_C::K2_ActivateAbilityFromEvent(struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "K2_ActivateAbilityFromEvent");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_K2_ActivateAbilityFromEvent Parms{};

	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetAvatarAsFortPawn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPawn*                        AsFort_Pawn                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           CallFunc_GetAvatarActorFromActorInfo_ReturnValue       (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPawn*                        K2Node_DynamicCast_AsFort_Pawn                         (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_WaffleTruck_TrackingPistol_Indicator_C::GetAvatarAsFortPawn(class AFortPawn** AsFort_Pawn, class AActor* CallFunc_GetAvatarActorFromActorInfo_ReturnValue, class AFortPawn* K2Node_DynamicCast_AsFort_Pawn, bool K2Node_DynamicCast_bSuccess)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetAvatarAsFortPawn");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetAvatarAsFortPawn Parms{};

	Parms.CallFunc_GetAvatarActorFromActorInfo_ReturnValue = CallFunc_GetAvatarActorFromActorInfo_ReturnValue;
	Parms.K2Node_DynamicCast_AsFort_Pawn = K2Node_DynamicCast_AsFort_Pawn;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;

	UObject::ProcessEvent(Func, &Parms);

	if (AsFort_Pawn != nullptr)
		*AsFort_Pawn = std::move(Parms.AsFort_Pawn);
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetAvatarAsFortPlayerController
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AFortPlayerController*            ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EFortGetPlayerPawnExecutions            CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec        (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            CallFunc_GetFortPlayerControllerFromActor_ReturnValue  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_SwitchEnum_CmpSuccess                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)

class AFortPlayerController* UGA_WaffleTruck_TrackingPistol_Indicator_C::GetAvatarAsFortPlayerController(EFortGetPlayerPawnExecutions CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec, class AFortPlayerPawn* CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, bool K2Node_SwitchEnum_CmpSuccess, bool CallFunc_IsValid_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetAvatarAsFortPlayerController");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetAvatarAsFortPlayerController Parms{};

	Parms.CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec = CallFunc_GetAvatarAsValidFortPlayerPawn_OutExec;
	Parms.CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn = CallFunc_GetAvatarAsValidFortPlayerPawn_OutFortPlayerPawn;
	Parms.CallFunc_GetFortPlayerControllerFromActor_ReturnValue = CallFunc_GetFortPlayerControllerFromActor_ReturnValue;
	Parms.K2Node_SwitchEnum_CmpSuccess = K2Node_SwitchEnum_CmpSuccess;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.GetHitActorsFromEventData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayEventData               GameplayEventData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash)
// class AActor*                           LocalTarget                                            (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerController*            CallFunc_GetAvatarAsFortPlayerController_ReturnValue   (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>                   K2Node_MakeArray_Array                                 (ReferenceParm, HasGetValueTypeHash)
// bool                                    CallFunc_IsPawnAndNotFriendly_ReturnValue              (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_IsValid_ReturnValue_1                         (ZeroConstructor, IsPlainOldData, NoDestructor)

TArray<class AActor*> UGA_WaffleTruck_TrackingPistol_Indicator_C::GetHitActorsFromEventData(struct FGameplayEventData& GameplayEventData, class AActor* LocalTarget, class AFortPlayerController* CallFunc_GetAvatarAsFortPlayerController_ReturnValue, bool CallFunc_IsValid_ReturnValue, TArray<class AActor*>& K2Node_MakeArray_Array, bool CallFunc_IsPawnAndNotFriendly_ReturnValue, bool CallFunc_IsValid_ReturnValue_1)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "GetHitActorsFromEventData");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_GetHitActorsFromEventData Parms{};

	Parms.GameplayEventData = std::move(GameplayEventData);
	Parms.LocalTarget = LocalTarget;
	Parms.CallFunc_GetAvatarAsFortPlayerController_ReturnValue = CallFunc_GetAvatarAsFortPlayerController_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.K2Node_MakeArray_Array = std::move(K2Node_MakeArray_Array);
	Parms.CallFunc_IsPawnAndNotFriendly_ReturnValue = CallFunc_IsPawnAndNotFriendly_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue_1 = CallFunc_IsValid_ReturnValue_1;

	UObject::ProcessEvent(Func, &Parms);

	K2Node_MakeArray_Array = std::move(Parms.K2Node_MakeArray_Array);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.IsPawnAndNotFriendly
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           OwningController                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HitActor                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// EFortTeamAffiliation                    CallFunc_GetTeamAffiliation_ReturnValue                (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AFortPlayerPawn*                  K2Node_DynamicCast_AsFort_Player_Pawn                  (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    K2Node_DynamicCast_bSuccess                            (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ByteByte_ReturnValue               (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_BooleanAND_ReturnValue                        (ZeroConstructor, IsPlainOldData, NoDestructor)

bool UGA_WaffleTruck_TrackingPistol_Indicator_C::IsPawnAndNotFriendly(class AActor* OwningController, class AActor* HitActor, EFortTeamAffiliation CallFunc_GetTeamAffiliation_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess, bool CallFunc_EqualEqual_ByteByte_ReturnValue, bool CallFunc_BooleanAND_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "IsPawnAndNotFriendly");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_IsPawnAndNotFriendly Parms{};

	Parms.OwningController = OwningController;
	Parms.HitActor = HitActor;
	Parms.CallFunc_GetTeamAffiliation_ReturnValue = CallFunc_GetTeamAffiliation_ReturnValue;
	Parms.K2Node_DynamicCast_AsFort_Player_Pawn = K2Node_DynamicCast_AsFort_Player_Pawn;
	Parms.K2Node_DynamicCast_bSuccess = K2Node_DynamicCast_bSuccess;
	Parms.CallFunc_EqualEqual_ByteByte_ReturnValue = CallFunc_EqualEqual_ByteByte_ReturnValue;
	Parms.CallFunc_BooleanAND_ReturnValue = CallFunc_BooleanAND_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_WaffleTruck_TrackingPistol_Indicator.GA_WaffleTruck_TrackingPistol_Indicator_C.IsDamgeFromSourceWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayEventData               GameplayEventData                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
// class AFortPawn*                        CallFunc_GetAvatarAsFortPawn_AsFort_Pawn               (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          CallFunc_EffectContextGetSourceObject_ReturnValue      (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CallFunc_IsValid_ReturnValue                           (ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    CallFunc_EqualEqual_ObjectObject_ReturnValue           (ZeroConstructor, IsPlainOldData, NoDestructor)

bool UGA_WaffleTruck_TrackingPistol_Indicator_C::IsDamgeFromSourceWeapon(struct FGameplayEventData& GameplayEventData, class AFortPawn* CallFunc_GetAvatarAsFortPawn_AsFort_Pawn, class UObject* CallFunc_EffectContextGetSourceObject_ReturnValue, bool CallFunc_IsValid_ReturnValue, bool CallFunc_EqualEqual_ObjectObject_ReturnValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_WaffleTruck_TrackingPistol_Indicator_C", "IsDamgeFromSourceWeapon");

	Params::GA_WaffleTruck_TrackingPistol_Indicator_C_IsDamgeFromSourceWeapon Parms{};

	Parms.GameplayEventData = std::move(GameplayEventData);
	Parms.CallFunc_GetAvatarAsFortPawn_AsFort_Pawn = CallFunc_GetAvatarAsFortPawn_AsFort_Pawn;
	Parms.CallFunc_EffectContextGetSourceObject_ReturnValue = CallFunc_EffectContextGetSourceObject_ReturnValue;
	Parms.CallFunc_IsValid_ReturnValue = CallFunc_IsValid_ReturnValue;
	Parms.CallFunc_EqualEqual_ObjectObject_ReturnValue = CallFunc_EqualEqual_ObjectObject_ReturnValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

