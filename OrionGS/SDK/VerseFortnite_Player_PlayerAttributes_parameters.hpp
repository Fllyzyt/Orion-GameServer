#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite_Player_PlayerAttributes

#include "Basic.hpp"

#include "VerseFortnite_Player_PlayerAttribute_structs.hpp"
#include "VerseFortnite_Player_PlayerAttributeOperation_structs.hpp"


namespace SDK::Params
{

// Function VerseFortnite_Player_PlayerAttributes.PlayerAttributes.addToNumericAttribute
// 0x0010 (0x0010 - 0x0000)
struct PlayerAttributes_AddToNumericAttribute final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAttribute                              __verse_0x8304B4A7_attributeID;                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7753[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         __verse_0x63C4C549_amount;                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAttributes_AddToNumericAttribute) == 0x000008, "Wrong alinment on PlayerAttributes_AddToNumericAttribute");
static_assert(sizeof(PlayerAttributes_AddToNumericAttribute) == 0x000010, "Wrong size on PlayerAttributes_AddToNumericAttribute");
static_assert(offsetof(PlayerAttributes_AddToNumericAttribute, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerAttributes_AddToNumericAttribute::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_AddToNumericAttribute, __verse_0x8304B4A7_attributeID) == 0x000008, "Member 'PlayerAttributes_AddToNumericAttribute::__verse_0x8304B4A7_attributeID' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_AddToNumericAttribute, __verse_0x63C4C549_amount) == 0x00000C, "Member 'PlayerAttributes_AddToNumericAttribute::__verse_0x63C4C549_amount' has a wrong offset!");

// Function VerseFortnite_Player_PlayerAttributes.PlayerAttributes.getNumericAttributeValue
// 0x0010 (0x0010 - 0x0000)
struct PlayerAttributes_GetNumericAttributeValue final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAttribute                              __verse_0x8304B4A7_attributeID;                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7754[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         RetVal;                                            // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAttributes_GetNumericAttributeValue) == 0x000008, "Wrong alinment on PlayerAttributes_GetNumericAttributeValue");
static_assert(sizeof(PlayerAttributes_GetNumericAttributeValue) == 0x000010, "Wrong size on PlayerAttributes_GetNumericAttributeValue");
static_assert(offsetof(PlayerAttributes_GetNumericAttributeValue, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerAttributes_GetNumericAttributeValue::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_GetNumericAttributeValue, __verse_0x8304B4A7_attributeID) == 0x000008, "Member 'PlayerAttributes_GetNumericAttributeValue::__verse_0x8304B4A7_attributeID' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_GetNumericAttributeValue, RetVal) == 0x00000C, "Member 'PlayerAttributes_GetNumericAttributeValue::RetVal' has a wrong offset!");

// Function VerseFortnite_Player_PlayerAttributes.PlayerAttributes.modifyNumericAttribute
// 0x0010 (0x0010 - 0x0000)
struct PlayerAttributes_ModifyNumericAttribute final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAttribute                              __verse_0x8304B4A7_attributeID;                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerAttributeOperation                     __verse_0xE2CDD607_op;                             // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7755[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         __verse_0x63C4C549_amount;                         // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerAttributes_ModifyNumericAttribute) == 0x000008, "Wrong alinment on PlayerAttributes_ModifyNumericAttribute");
static_assert(sizeof(PlayerAttributes_ModifyNumericAttribute) == 0x000010, "Wrong size on PlayerAttributes_ModifyNumericAttribute");
static_assert(offsetof(PlayerAttributes_ModifyNumericAttribute, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerAttributes_ModifyNumericAttribute::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_ModifyNumericAttribute, __verse_0x8304B4A7_attributeID) == 0x000008, "Member 'PlayerAttributes_ModifyNumericAttribute::__verse_0x8304B4A7_attributeID' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_ModifyNumericAttribute, __verse_0xE2CDD607_op) == 0x000009, "Member 'PlayerAttributes_ModifyNumericAttribute::__verse_0xE2CDD607_op' has a wrong offset!");
static_assert(offsetof(PlayerAttributes_ModifyNumericAttribute, __verse_0x63C4C549_amount) == 0x00000C, "Member 'PlayerAttributes_ModifyNumericAttribute::__verse_0x63C4C549_amount' has a wrong offset!");

}

