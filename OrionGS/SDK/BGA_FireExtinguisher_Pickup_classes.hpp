#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BGA_FireExtinguisher_Pickup

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "BGA_HeldObject_Parent_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FortniteGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BGA_FireExtinguisher_Pickup.BGA_FireExtinguisher_Pickup_C
// 0x02A0 (0x0C50 - 0x09B0)
class ABGA_FireExtinguisher_Pickup_C final  : public ABGA_HeldObject_Parent_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BGA_FireExtinguisher_Pickup_C;      // 0x09B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio_ReleaseSmoke;                                // 0x09B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       PostProcessParentShape;                            // 0x09C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SmokeScreen_Sphere;                                // 0x09C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SmokeVolumeMesh;                                   // 0x09D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               P_Athena_SmokeGrenade_OuterSmoke_01;               // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFortItemEntryComponent*                FortItemEntry;                                     // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FireExtinguisher;                                  // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         FadeSmokeTL_Float_CF905F0F47270980030E72B404D48CF0; // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            FadeSmokeTL__Direction_CF905F0F47270980030E72B404D48CF0; // 0x09FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7347[0x3];                                     // 0x09FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     FadeSmokeTL;                                       // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerPawn*                        PlayerPawn;                                        // 0x0A08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPlayerControllerAthena*            PlayerController;                                  // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortPawn*                              ExplodeInstigator;                                 // 0x0A18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             LastHit;                                           // 0x0A20(0x008C)(Edit, BlueprintVisible, Net, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, ContainsInstancedReference)
	bool                                          FuseLit;                                           // 0x0AAC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAttachedToWeapon;                                // 0x0AAD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Dropped;                                           // 0x0AAE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ShouldExplode;                                     // 0x0AAF(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           GC_Smoking;                                        // 0x0AB0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FScalableFloat                         ExplosionRadius;                                   // 0x0AB8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         TargetedActors;                                    // 0x0AE0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class UClass*>                         GE_ExplodeDamage;                                  // 0x0AF0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      ObjectArray;                                       // 0x0B00(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 GE_ExplodeVehicleDamage;                           // 0x0B10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 GE_ExplodePlayerDamage;                            // 0x0B18(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFortWeapon*                            WeaponAttachedTo;                                  // 0x0B20(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeedOfNoStickBounce;                           // 0x0B28(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7348[0x4];                                     // 0x0B2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFortWorldItemDefinition*               WeaponItemDefinition;                              // 0x0B30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HealthIsZero;                                      // 0x0B38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShouldDie;                                        // 0x0B39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7349[0x2];                                     // 0x0B3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ExplosionCUE;                                      // 0x0B3C(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           ExplosionCUE_Water;                                // 0x0B44(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734A[0x4];                                     // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScalableFloat                         Radius;                                            // 0x0B50(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                HitLocation;                                       // 0x0B78(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WaterTraceRadius;                                  // 0x0B84(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      WaterTraceObjectTypes;                             // 0x0B88(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AFortPlayerController*                  LastDamageInstigator;                              // 0x0B98(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LandscapeExtinguishRadius;                         // 0x0BA0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FuseDuration;                                      // 0x0BA4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Tag_FailedInteract_InventoryIsFull;                // 0x0BA8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	class USoundBase*                             FailedInteractSound;                               // 0x0BC8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CurieActivated;                                    // 0x0BD0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_734B[0x7];                                     // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFortInventoryOwnerInterface> HeldItemInventoryInterface;                        // 0x0BD8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FGuid                                  HeldItemGUID;                                      // 0x0BE8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        EmitterOnDamage;                                   // 0x0BF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterScale;                                      // 0x0C00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734C[0x4];                                     // 0x0C04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             PreExplodeSound;                                   // 0x0C08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           FuseTimerHandle;                                   // 0x0C10(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeLifespan;                                     // 0x0C18(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         SmokeDelayBeforeFadeIn;                            // 0x0C1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeFadeOutTime;                                  // 0x0C20(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734D[0x4];                                     // 0x0C24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               SmokeVolumeMeshMID;                                // 0x0C28(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SmokeScreenMID;                                    // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeFadeValue;                                    // 0x0C38(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeFadeInTime;                                   // 0x0C3C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeRadius;                                       // 0x0C40(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AfterSmokeDelay;                                   // 0x0C44(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BGA_FireExtinguisher_Pickup(int32 EntryPoint, bool CallFunc_IsCurieActive_ReturnValue, bool Temp_bool_Variable, bool Temp_bool_IsClosed_Variable, bool Temp_bool_IsClosed_Variable_1, bool Temp_bool_Has_Been_Initd_Variable, bool CallFunc_IsDedicatedServer_ReturnValue, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue, TArray<class AActor*>& Temp_object_Variable, const struct FVector& CallFunc_MakeVector_ReturnValue, bool CallFunc_HasAuthority_ReturnValue, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, class AFortPlayerControllerAthena* K2Node_DynamicCast_AsFort_Player_Controller_Athena, bool K2Node_DynamicCast_bSuccess, bool Temp_bool_IsClosed_Variable_2, bool Temp_bool_Has_Been_Initd_Variable_1, bool Temp_bool_IsClosed_Variable_3, class AFortPawn* K2Node_Event_InteractingPawn, EInteractionBeingAttempted K2Node_Event_InteractionBeingAttempted, ESubGame CallFunc_GetSubGame_ReturnValue, class AFortPlayerPawn* K2Node_DynamicCast_AsFort_Player_Pawn, bool K2Node_DynamicCast_bSuccess_1, bool CallFunc_EqualEqual_ByteByte_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FVector& CallFunc_GetActorForwardVector_ReturnValue, int32 CallFunc_Conv_ByteToInt_ReturnValue, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue, int32 Temp_int_Array_Index_Variable, float K2Node_Event_Damage_1, struct FGameplayTagContainer& K2Node_Event_DamageTags_1, const struct FVector& K2Node_Event_Momentum_1, struct FHitResult& K2Node_Event_HitInfo_1, class AController* K2Node_Event_InstigatedBy_1, class AActor* K2Node_Event_DamageCauser_1, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext_1, class AFortPlayerController* K2Node_DynamicCast_AsFort_Player_Controller, bool K2Node_DynamicCast_bSuccess_2, class AFortPlayerPawn* CallFunc_GetPlayerPawn_ReturnValue, bool Temp_bool_Has_Been_Initd_Variable_2, float K2Node_Event_Damage, struct FGameplayTagContainer& K2Node_Event_DamageTags, const struct FVector& K2Node_Event_Momentum, struct FHitResult& K2Node_Event_HitInfo, class AController* K2Node_Event_InstigatedBy, class AActor* K2Node_Event_DamageCauser, const struct FGameplayEffectContextHandle& K2Node_Event_EffectContext, bool CallFunc_IsValid_ReturnValue, struct FHitResult& K2Node_ComponentBoundEvent_ImpactResult, struct FVector& K2Node_ComponentBoundEvent_ImpactVelocity, bool CallFunc_BreakHitResult_bBlockingHit, bool CallFunc_BreakHitResult_bInitialOverlap, float CallFunc_BreakHitResult_Time, float CallFunc_BreakHitResult_Distance, const struct FVector& CallFunc_BreakHitResult_Location, const struct FVector& CallFunc_BreakHitResult_ImpactPoint, const struct FVector& CallFunc_BreakHitResult_Normal, const struct FVector& CallFunc_BreakHitResult_ImpactNormal, class UPhysicalMaterial* CallFunc_BreakHitResult_PhysMat, class AActor* CallFunc_BreakHitResult_HitActor, class UPrimitiveComponent* CallFunc_BreakHitResult_HitComponent, class FName CallFunc_BreakHitResult_HitBoneName, int32 CallFunc_BreakHitResult_HitItem, int32 CallFunc_BreakHitResult_ElementIndex, int32 CallFunc_BreakHitResult_FaceIndex, const struct FVector& CallFunc_BreakHitResult_TraceStart, const struct FVector& CallFunc_BreakHitResult_TraceEnd, bool CallFunc_ComponentHasTag_ReturnValue, bool CallFunc_ActorHasTag_ReturnValue, float CallFunc_VSize_ReturnValue, bool CallFunc_BooleanOR_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, const struct FVector& CallFunc_MakeVector_ReturnValue_1, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue, const struct FVector& CallFunc_MirrorVectorByNormal_ReturnValue, const struct FVector& CallFunc_Add_VectorVector_ReturnValue, float CallFunc_VSize_ReturnValue_1, bool CallFunc_HasItem_ReturnValue, float CallFunc_FMax_ReturnValue, const struct FVector& CallFunc_Normal_ReturnValue, const struct FVector& CallFunc_Multiply_VectorFloat_ReturnValue_1, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_AddItemToInventoryOwner_InventoryOwner_CastInput, bool CallFunc_AddItemToInventoryOwner_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> CallFunc_GiveItemToInventoryOwner_InventoryOwner_CastInput, bool Temp_bool_Has_Been_Initd_Variable_3, float CallFunc_GetValueAtLevel_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_1, TArray<EObjectTypeQuery>& K2Node_MakeArray_Array, int32 Temp_int_Loop_Counter_Variable, TArray<class UPrimitiveComponent*>& CallFunc_SphereOverlapComponents_OutComponents, bool CallFunc_SphereOverlapComponents_ReturnValue, int32 CallFunc_Array_Length_ReturnValue, int32 CallFunc_Add_IntInt_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, TScriptInterface<class IFortInventoryOwnerInterface> K2Node_CustomEvent_InventoryInterface, const struct FGuid& K2Node_CustomEvent_GUID, class AFortWeapon* K2Node_CustomEvent_WeaponAttachedTo, bool Temp_bool_Has_Been_Initd_Variable_4, class AB_FireExtinguisherWeapon_C* K2Node_DynamicCast_AsB_Fire_Extinguisher_Weapon, bool K2Node_DynamicCast_bSuccess_3, bool CallFunc_RemoveItem_ReturnValue, class AB_FireExtinguisherWeapon_C* K2Node_DynamicCast_AsB_Fire_Extinguisher_Weapon_1, bool K2Node_DynamicCast_bSuccess_4, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue_2, const struct FGameplayCueParameters& CallFunc_MakeGameplayCueParameters_ReturnValue_1, bool CallFunc_IsInWater_ReturnValue, const struct FGameplayTag& K2Node_Select_Default, bool Temp_bool_IsClosed_Variable_4, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_1, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_1, bool K2Node_SwitchEnum_CmpSuccess, float CallFunc_Add_FloatFloat_ReturnValue, float CallFunc_Add_FloatFloat_ReturnValue_1, float CallFunc_Subtract_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue_1, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_2, TDelegate<void()> K2Node_CreateDelegate_OutputDelegate_3, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_2, const struct FTimerHandle& CallFunc_K2_SetTimerDelegate_ReturnValue_3, float CallFunc_FMax_ReturnValue_2, float CallFunc_Divide_FloatFloat_ReturnValue, float CallFunc_FMax_ReturnValue_3, float CallFunc_Divide_FloatFloat_ReturnValue_1, const struct FTimerHandle& CallFunc_K2_SetTimer_ReturnValue);
	void AfterSmoke();
	void SmokeFadeIn();
	void SmokeFadeOut();
	void SplashWater();
	void SetHeldItemInfo(TScriptInterface<class IFortInventoryOwnerInterface> InventoryInterface, const struct FGuid& Guid, class AFortWeapon* Param_WeaponAttachedTo);
	void AllowInteractDelay();
	void ExplosionTrace();
	void BndEvt__FortProjectileMovement_K2Node_ComponentBoundEvent_0_OnProjectileBounceDelegate__DelegateSignature(struct FHitResult& ImpactResult, struct FVector& ImpactVelocity);
	void EventDestroyed();
	void OnDeathServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void ExplodeAndDie();
	void DropHeldItem();
	void SetFuseAndDrop();
	void OnDamageServer(float Damage, struct FGameplayTagContainer& DamageTags, const struct FVector& Momentum, struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser, const struct FGameplayEffectContextHandle& EffectContext);
	void HideAndDestroy();
	void _ServerOnly__HideAndDestroy();
	void BlueprintOnInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted);
	void ReceiveBeginPlay();
	void FadeSmokeTL__UpdateFunc();
	void FadeSmokeTL__FinishedFunc();
	void UserConstructionScript(bool CallFunc_IsDedicatedServer_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue, class UMaterialInstanceDynamic* CallFunc_CreateDynamicMaterialInstance_ReturnValue_1, const struct FVector& CallFunc_Conv_FloatToVector_ReturnValue);
	bool ShouldDie(float Damage, class AController* EventInstigator, class AActor* DamageCauser);
	void ApplyWaterInRadiusIfCurieEnabled(const struct FHitResult& HitResult, bool CallFunc_IsDedicatedServer_ReturnValue, int32 Temp_int_Loop_Counter_Variable, int32 CallFunc_Add_IntInt_ReturnValue, int32 Temp_int_Array_Index_Variable, TArray<class AActor*>& K2Node_MakeArray_Array, const struct FVector& CallFunc_GetActorScale3D_ReturnValue, float CallFunc_VSize_ReturnValue, float CallFunc_Multiply_FloatFloat_ReturnValue, bool CallFunc_IsCurieActive_ReturnValue, TArray<class AActor*>& CallFunc_SphereOverlapActors_OutActors, bool CallFunc_SphereOverlapActors_ReturnValue, class AActor* CallFunc_Array_Get_Item, int32 CallFunc_Array_Length_ReturnValue, const struct FHitResult& CallFunc_MakeHitResult_ReturnValue, bool CallFunc_Less_IntInt_ReturnValue, bool CallFunc_IsValid_ReturnValue);
	bool BlueprintOnLocalInteract(class AFortPlayerPawn* InteractingPawn, class AFortPlayerController* CallFunc_GetFortPlayerControllerFromActor_ReturnValue, const struct FVector& CallFunc_K2_GetActorLocation_ReturnValue, const struct FFortItemEntry& CallFunc_CreateItemEntry_ReturnValue, int32 CallFunc_CountInventoryOverflowFromAddingItem_ReturnValue, bool CallFunc_Greater_IntInt_ReturnValue);
	void OnRep_LastHit(bool CallFunc_IsDedicatedServer_ReturnValue, const struct FGameplayCueParameters& CallFunc_BuildCueParametersFromHitResult_OutCueParameters);

	bool BlueprintCanInteract(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted, ETInteractionType InteractionType, bool CallFunc_Not_PreBool_ReturnValue) const;
	bool BlueprintGetInteractionTime(class AFortPawn* InteractingPawn, float* OutInteractionTime, EInteractionBeingAttempted InteractionBeingAttempted) const;
	class FText BlueprintGetInteractionString(class AFortPawn* InteractingPawn, EInteractionBeingAttempted InteractionBeingAttempted) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BGA_FireExtinguisher_Pickup_C">();
	}
	static class ABGA_FireExtinguisher_Pickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABGA_FireExtinguisher_Pickup_C>();
	}
};
static_assert(alignof(ABGA_FireExtinguisher_Pickup_C) == 0x000010, "Wrong alinment on ABGA_FireExtinguisher_Pickup_C");
static_assert(sizeof(ABGA_FireExtinguisher_Pickup_C) == 0x000C50, "Wrong size on ABGA_FireExtinguisher_Pickup_C");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, UberGraphFrame_BGA_FireExtinguisher_Pickup_C) == 0x0009B0, "Member 'ABGA_FireExtinguisher_Pickup_C::UberGraphFrame_BGA_FireExtinguisher_Pickup_C' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, Audio_ReleaseSmoke) == 0x0009B8, "Member 'ABGA_FireExtinguisher_Pickup_C::Audio_ReleaseSmoke' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, PostProcessParentShape) == 0x0009C0, "Member 'ABGA_FireExtinguisher_Pickup_C::PostProcessParentShape' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeScreen_Sphere) == 0x0009C8, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeScreen_Sphere' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeVolumeMesh) == 0x0009D0, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeVolumeMesh' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, P_Athena_SmokeGrenade_OuterSmoke_01) == 0x0009D8, "Member 'ABGA_FireExtinguisher_Pickup_C::P_Athena_SmokeGrenade_OuterSmoke_01' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FortItemEntry) == 0x0009E0, "Member 'ABGA_FireExtinguisher_Pickup_C::FortItemEntry' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, Sphere) == 0x0009E8, "Member 'ABGA_FireExtinguisher_Pickup_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FireExtinguisher) == 0x0009F0, "Member 'ABGA_FireExtinguisher_Pickup_C::FireExtinguisher' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FadeSmokeTL_Float_CF905F0F47270980030E72B404D48CF0) == 0x0009F8, "Member 'ABGA_FireExtinguisher_Pickup_C::FadeSmokeTL_Float_CF905F0F47270980030E72B404D48CF0' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FadeSmokeTL__Direction_CF905F0F47270980030E72B404D48CF0) == 0x0009FC, "Member 'ABGA_FireExtinguisher_Pickup_C::FadeSmokeTL__Direction_CF905F0F47270980030E72B404D48CF0' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FadeSmokeTL) == 0x000A00, "Member 'ABGA_FireExtinguisher_Pickup_C::FadeSmokeTL' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, PlayerPawn) == 0x000A08, "Member 'ABGA_FireExtinguisher_Pickup_C::PlayerPawn' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, PlayerController) == 0x000A10, "Member 'ABGA_FireExtinguisher_Pickup_C::PlayerController' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ExplodeInstigator) == 0x000A18, "Member 'ABGA_FireExtinguisher_Pickup_C::ExplodeInstigator' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, LastHit) == 0x000A20, "Member 'ABGA_FireExtinguisher_Pickup_C::LastHit' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FuseLit) == 0x000AAC, "Member 'ABGA_FireExtinguisher_Pickup_C::FuseLit' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, IsAttachedToWeapon) == 0x000AAD, "Member 'ABGA_FireExtinguisher_Pickup_C::IsAttachedToWeapon' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, Dropped) == 0x000AAE, "Member 'ABGA_FireExtinguisher_Pickup_C::Dropped' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ShouldExplode) == 0x000AAF, "Member 'ABGA_FireExtinguisher_Pickup_C::ShouldExplode' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, GC_Smoking) == 0x000AB0, "Member 'ABGA_FireExtinguisher_Pickup_C::GC_Smoking' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ExplosionRadius) == 0x000AB8, "Member 'ABGA_FireExtinguisher_Pickup_C::ExplosionRadius' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, TargetedActors) == 0x000AE0, "Member 'ABGA_FireExtinguisher_Pickup_C::TargetedActors' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, GE_ExplodeDamage) == 0x000AF0, "Member 'ABGA_FireExtinguisher_Pickup_C::GE_ExplodeDamage' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ObjectArray) == 0x000B00, "Member 'ABGA_FireExtinguisher_Pickup_C::ObjectArray' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, GE_ExplodeVehicleDamage) == 0x000B10, "Member 'ABGA_FireExtinguisher_Pickup_C::GE_ExplodeVehicleDamage' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, GE_ExplodePlayerDamage) == 0x000B18, "Member 'ABGA_FireExtinguisher_Pickup_C::GE_ExplodePlayerDamage' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, WeaponAttachedTo) == 0x000B20, "Member 'ABGA_FireExtinguisher_Pickup_C::WeaponAttachedTo' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, MinSpeedOfNoStickBounce) == 0x000B28, "Member 'ABGA_FireExtinguisher_Pickup_C::MinSpeedOfNoStickBounce' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, WeaponItemDefinition) == 0x000B30, "Member 'ABGA_FireExtinguisher_Pickup_C::WeaponItemDefinition' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, HealthIsZero) == 0x000B38, "Member 'ABGA_FireExtinguisher_Pickup_C::HealthIsZero' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, bShouldDie) == 0x000B39, "Member 'ABGA_FireExtinguisher_Pickup_C::bShouldDie' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ExplosionCUE) == 0x000B3C, "Member 'ABGA_FireExtinguisher_Pickup_C::ExplosionCUE' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, ExplosionCUE_Water) == 0x000B44, "Member 'ABGA_FireExtinguisher_Pickup_C::ExplosionCUE_Water' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, Radius) == 0x000B50, "Member 'ABGA_FireExtinguisher_Pickup_C::Radius' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, HitLocation) == 0x000B78, "Member 'ABGA_FireExtinguisher_Pickup_C::HitLocation' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, WaterTraceRadius) == 0x000B84, "Member 'ABGA_FireExtinguisher_Pickup_C::WaterTraceRadius' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, WaterTraceObjectTypes) == 0x000B88, "Member 'ABGA_FireExtinguisher_Pickup_C::WaterTraceObjectTypes' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, LastDamageInstigator) == 0x000B98, "Member 'ABGA_FireExtinguisher_Pickup_C::LastDamageInstigator' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, LandscapeExtinguishRadius) == 0x000BA0, "Member 'ABGA_FireExtinguisher_Pickup_C::LandscapeExtinguishRadius' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FuseDuration) == 0x000BA4, "Member 'ABGA_FireExtinguisher_Pickup_C::FuseDuration' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, Tag_FailedInteract_InventoryIsFull) == 0x000BA8, "Member 'ABGA_FireExtinguisher_Pickup_C::Tag_FailedInteract_InventoryIsFull' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FailedInteractSound) == 0x000BC8, "Member 'ABGA_FireExtinguisher_Pickup_C::FailedInteractSound' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, CurieActivated) == 0x000BD0, "Member 'ABGA_FireExtinguisher_Pickup_C::CurieActivated' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, HeldItemInventoryInterface) == 0x000BD8, "Member 'ABGA_FireExtinguisher_Pickup_C::HeldItemInventoryInterface' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, HeldItemGUID) == 0x000BE8, "Member 'ABGA_FireExtinguisher_Pickup_C::HeldItemGUID' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, EmitterOnDamage) == 0x000BF8, "Member 'ABGA_FireExtinguisher_Pickup_C::EmitterOnDamage' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, EmitterScale) == 0x000C00, "Member 'ABGA_FireExtinguisher_Pickup_C::EmitterScale' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, PreExplodeSound) == 0x000C08, "Member 'ABGA_FireExtinguisher_Pickup_C::PreExplodeSound' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, FuseTimerHandle) == 0x000C10, "Member 'ABGA_FireExtinguisher_Pickup_C::FuseTimerHandle' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeLifespan) == 0x000C18, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeLifespan' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeDelayBeforeFadeIn) == 0x000C1C, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeDelayBeforeFadeIn' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeFadeOutTime) == 0x000C20, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeFadeOutTime' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeVolumeMeshMID) == 0x000C28, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeVolumeMeshMID' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeScreenMID) == 0x000C30, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeScreenMID' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeFadeValue) == 0x000C38, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeFadeValue' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeFadeInTime) == 0x000C3C, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeFadeInTime' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, SmokeRadius) == 0x000C40, "Member 'ABGA_FireExtinguisher_Pickup_C::SmokeRadius' has a wrong offset!");
static_assert(offsetof(ABGA_FireExtinguisher_Pickup_C, AfterSmokeDelay) == 0x000C44, "Member 'ABGA_FireExtinguisher_Pickup_C::AfterSmokeDelay' has a wrong offset!");

}

