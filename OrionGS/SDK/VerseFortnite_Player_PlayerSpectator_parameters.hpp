#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VerseFortnite_Player_PlayerSpectator

#include "Basic.hpp"


namespace SDK::Params
{

// Function VerseFortnite_Player_PlayerSpectator.PlayerSpectator.getPlayersSpectatingTarget
// 0x0018 (0x0018 - 0x0000)
struct PlayerSpectator_GetPlayersSpectatingTarget final 
{
public:
	class UPlayerComponent*                       __verse_0x3F6E9F5F_target;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPlayerComponent*>               RetVal;                                            // 0x0008(0x0010)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(PlayerSpectator_GetPlayersSpectatingTarget) == 0x000008, "Wrong alinment on PlayerSpectator_GetPlayersSpectatingTarget");
static_assert(sizeof(PlayerSpectator_GetPlayersSpectatingTarget) == 0x000018, "Wrong size on PlayerSpectator_GetPlayersSpectatingTarget");
static_assert(offsetof(PlayerSpectator_GetPlayersSpectatingTarget, __verse_0x3F6E9F5F_target) == 0x000000, "Member 'PlayerSpectator_GetPlayersSpectatingTarget::__verse_0x3F6E9F5F_target' has a wrong offset!");
static_assert(offsetof(PlayerSpectator_GetPlayersSpectatingTarget, RetVal) == 0x000008, "Member 'PlayerSpectator_GetPlayersSpectatingTarget::RetVal' has a wrong offset!");

// Function VerseFortnite_Player_PlayerSpectator.PlayerSpectator.isSpectator
// 0x0010 (0x0010 - 0x0000)
struct PlayerSpectator_IsSpectator final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(PlayerSpectator_IsSpectator) == 0x000008, "Wrong alinment on PlayerSpectator_IsSpectator");
static_assert(sizeof(PlayerSpectator_IsSpectator) == 0x000010, "Wrong size on PlayerSpectator_IsSpectator");
static_assert(offsetof(PlayerSpectator_IsSpectator, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerSpectator_IsSpectator::__verse_0x9F1D658F_player' has a wrong offset!");

// Function VerseFortnite_Player_PlayerSpectator.PlayerSpectator.setSpectator
// 0x0010 (0x0010 - 0x0000)
struct PlayerSpectator_SetSpectator final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(PlayerSpectator_SetSpectator) == 0x000008, "Wrong alinment on PlayerSpectator_SetSpectator");
static_assert(sizeof(PlayerSpectator_SetSpectator) == 0x000010, "Wrong size on PlayerSpectator_SetSpectator");
static_assert(offsetof(PlayerSpectator_SetSpectator, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerSpectator_SetSpectator::__verse_0x9F1D658F_player' has a wrong offset!");

// Function VerseFortnite_Player_PlayerSpectator.PlayerSpectator.spectateKiller
// 0x0010 (0x0010 - 0x0000)
struct PlayerSpectator_SpectateKiller final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0008(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(PlayerSpectator_SpectateKiller) == 0x000008, "Wrong alinment on PlayerSpectator_SpectateKiller");
static_assert(sizeof(PlayerSpectator_SpectateKiller) == 0x000010, "Wrong size on PlayerSpectator_SpectateKiller");
static_assert(offsetof(PlayerSpectator_SpectateKiller, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerSpectator_SpectateKiller::__verse_0x9F1D658F_player' has a wrong offset!");

// Function VerseFortnite_Player_PlayerSpectator.PlayerSpectator.spectatePlayer
// 0x0018 (0x0018 - 0x0000)
struct PlayerSpectator_SpectatePlayer final 
{
public:
	class UPlayerComponent*                       __verse_0x9F1D658F_player;                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerComponent*                       __verse_0x3F6E9F5F_target;                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         RetVal : 1;                                        // 0x0010(0x0001)(BitIndex: 0x00, PropSize: 0x0001 (Parm, OutParm, ReturnParm, NoDestructor))
};
static_assert(alignof(PlayerSpectator_SpectatePlayer) == 0x000008, "Wrong alinment on PlayerSpectator_SpectatePlayer");
static_assert(sizeof(PlayerSpectator_SpectatePlayer) == 0x000018, "Wrong size on PlayerSpectator_SpectatePlayer");
static_assert(offsetof(PlayerSpectator_SpectatePlayer, __verse_0x9F1D658F_player) == 0x000000, "Member 'PlayerSpectator_SpectatePlayer::__verse_0x9F1D658F_player' has a wrong offset!");
static_assert(offsetof(PlayerSpectator_SpectatePlayer, __verse_0x3F6E9F5F_target) == 0x000008, "Member 'PlayerSpectator_SpectatePlayer::__verse_0x3F6E9F5F_target' has a wrong offset!");

}

